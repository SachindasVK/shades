<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Confirmation</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            --primary-color: #1f2937;
            --success-color: #22c55e;
            --text-color: #374151;
            --light-bg: #f9fafb;
            --border-color: #e5e7eb;
            --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }

        body {
            background-color: var(--light-bg);
            color: var(--text-color);
            font-family: 'Inter', 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            margin: 0;
        }

        .container {
            max-width: 1280px;
            margin: 0 auto;
            padding: 1.5rem;
        }

        .main-section {
            background-color: white;
            border-radius: 8px;
            padding: 5rem;
            margin: 0 auto;
            position: relative;
        }

        /* Loading Animation */
        .loading-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 3rem;
            text-align: center;
            margin-bottom: 6.7rem;
        }

        .loading-spinner {
            width: 60px;
            height: 60px;
            border: 4px solid #e5e7eb;
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 1.5rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .loading-text {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-color);
            margin-bottom: 0.5rem;
        }

        .loading-subtext {
            color: #6b7280;
            font-size: 0.9rem;
        }

        /* Success State */
        .success-container {
            display: none;
            text-align: center;
            padding: 2rem;
            animation: fadeIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .success-icon {
            width: 64px;
            height: 64px;
            background-color: var(--success-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            box-shadow: 0 4px 12px rgba(34, 197, 94, 0.2);
        }

        .checkmark {
            font-size: 1.75rem;
            color: white;
            animation: checkmarkAnimation 0.5s ease-in-out;
        }

        @keyframes checkmarkAnimation {
            0% { transform: scale(0); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }

        .success-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-color);
            margin-bottom: 0.5rem;
        }

        .success-subtitle {
            font-size: 1rem;
            color: #6b7280;
            margin-bottom: 1.5rem;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
        }

        .action-buttons a button {
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
            border: none;
        }

        .btn-primary:hover {
            background-color: #111827;
        }

        .btn-secondary {
            background-color: transparent;
            color: var(--primary-color);
            border: 1px solid var(--primary-color);
        }

        .btn-secondary:hover {
            background-color: #f3f4f6;
        }

        /* Canvas for Confetti */
        canvas#canvas {
            height: 100vh;
            pointer-events: none;
            position: fixed;
            width: 100%;
            z-index: 2;
            top: 0;
            left: 0;
        }

        @media (max-width: 767.98px) {
            .main-section {
                padding: 1.5rem;
            }

            .action-buttons {
                flex-direction: column;
                gap: 0.75rem;
            }

            .action-buttons a button {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <%-include("../../views/partials/user/header")%>

    <div class="container">
        <!-- Main Content -->
        <div class="main-section">
           
            <!-- Loading State -->
            <div id="loadingState" class="loading-container">
                <div class="loading-spinner"></div>
                <h2 class="loading-text">Processing Your Order</h2>
                <p class="loading-subtext">Please wait while we confirm your order...</p>
            </div>
            <!-- Success State -->
            <div id="successState" class="success-container">
                <div class="success-icon">
                    <i class="fas fa-check checkmark"></i>
                </div>
                <h2 class="success-title">Order Confirmed!</h2>
                <p class="success-subtitle">Thank you for your purchase. Your order is being processed and will be shipped soon.</p>
                <p>Expected delivery by <%= expectedDeliveryDate %></p>
                <div class="action-buttons">
                    <a href="/orders">
                        <button class="btn-primary">
                            View Orders
                        </button>
                    </a>
                    <a href="/shop">
                        <button class="btn-secondary">
                            Continue Shopping
                        </button>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script>
        // // Confetti Animation Script
        // const confettiCount = 100; // Increased for more pop
        // const sequinCount = 20; // Increased for more pop
        // const gravityConfetti = 0.3;
        // const gravitySequins = 0.55;
        // const dragConfetti = 0.075;
        // const dragSequins = 0.02;
        // const terminalVelocity = 3;

        // const canvas = document.getElementById('canvas');
        // const ctx = canvas.getContext('2d');
        // canvas.width = window.innerWidth;
        // canvas.height = window.innerHeight;
        // let cx = ctx.canvas.width / 2;
        // let cy = ctx.canvas.height / 2;

        // let confetti = [];
        // let sequins = [];

        // const colors = [
        //     { front: '#1f2937', back: '#111827' }, // Matches --primary-color
        //     { front: '#22c55e', back: '#16a34a' }, // Matches --success-color
        //     { front: '#6b7280', back: '#4b5563' },  // Matches gray tones
        // ];

        // const randomRange = (min, max) => Math.random() * (max - min) + min;

        // const initConfettoVelocity = (xRange, yRange) => {
        //     const x = randomRange(xRange[0], xRange[1]);
        //     const range = yRange[1] - yRange[0] + 1;
        //     let y = yRange[1] - Math.abs(randomRange(0, range) + randomRange(0, range) - range);
        //     if (y >= yRange[1] - 1) {
        //         y += (Math.random() < 0.25) ? randomRange(1, 3) : 0;
        //     }
        //     return { x: x, y: -y };
        // };

        // function Confetto() {
        //     this.randomModifier = randomRange(0, 99);
        //     this.color = colors[Math.floor(randomRange(0, colors.length))];
        //     this.dimensions = {
        //         x: randomRange(5, 9),
        //         y: randomRange(8, 15),
        //     };
        //     const successTitle = document.querySelector('.success-title');
        //     const rect = successTitle.getBoundingClientRect();
        //     const titleCenterX = rect.left + rect.width / 2;
        //     const titleCenterY = rect.top + rect.height / 2;
        //     this.position = {
        //         x: randomRange(titleCenterX - 50, titleCenterX + 50), // Wider range for heading
        //         y: randomRange(titleCenterY - 10, titleCenterY + 10),
        //     };
        //     this.rotation = randomRange(0, 2 * Math.PI);
        //     this.scale = { x: 1, y: 1 };
        //     this.velocity = initConfettoVelocity([-12, 12], [8, 14]); // Dynamic velocity
        // }

        // Confetto.prototype.update = function() {
        //     this.velocity.x -= this.velocity.x * dragConfetti;
        //     this.velocity.y = Math.min(this.velocity.y + gravityConfetti, terminalVelocity);
        //     this.velocity.x += Math.random() > 0.5 ? Math.random() : -Math.random();
        //     this.position.x += this.velocity.x;
        //     this.position.y += this.velocity.y;
        //     this.scale.y = Math.cos((this.position.y + this.randomModifier) * 0.09);
        // };

        // function Sequin() {
        //     this.color = colors[Math.floor(randomRange(0, colors.length))].back;
        //     this.radius = randomRange(1, 2);
        //     const successTitle = document.querySelector('.success-title');
        //     const rect = successTitle.getBoundingClientRect();
        //     const titleCenterX = rect.left + rect.width / 2;
        //     const titleCenterY = rect.top + rect.height / 2;
        //     this.position = {
        //         x: randomRange(titleCenterX - 40, titleCenterX + 40),
        //         y: randomRange(titleCenterY - 10, titleCenterY + 10),
        //     };
        //     this.velocity = {
        //         x: randomRange(-8, 8),
        //         y: randomRange(-10, -14) // Increased upward velocity
        //     };
        // }

        // Sequin.prototype.update = function() {
        //     this.velocity.x -= this.velocity.x * dragSequins;
        //     this.velocity.y = this.velocity.y + gravitySequins;
        //     this.position.x += this.velocity.x;
        //     this.position.y += this.velocity.y;
        // };

        // const initBurst = () => {
        //     for (let i = 0; i < confettiCount; i++) {
        //         confetti.push(new Confetto());
        //     }
        //     for (let i = 0; i < sequinCount; i++) {
        //         sequins.push(new Sequin());
        //     }
        // };

        // const render = () => {
        //     ctx.clearRect(0, 0, canvas.width, canvas.height);
        //     confetti.forEach((confetto, index) => {
        //         let width = (confetto.dimensions.x * confetto.scale.x);
        //         let height = (confetto.dimensions.y * confetto.scale.y);
        //         ctx.translate(confetto.position.x, confetto.position.y);
        //         ctx.rotate(confetto.rotation);
        //         confetto.update();
        //         ctx.fillStyle = confetto.scale.y > 0 ? confetto.color.front : confetto.color.back;
        //         ctx.fillRect(-width / 2, -height / 2, width, height);
        //         ctx.setTransform(1, 0, 0, 1, 0, 0);
        //     });
        //     sequins.forEach((sequin, index) => {
        //         ctx.translate(sequin.position.x, sequin.position.y);
        //         sequin.update();
        //         ctx.fillStyle = sequin.color;
        //         ctx.beginPath();
        //         ctx.arc(0, 0, sequin.radius, 0, 2 * Math.PI);
        //         ctx.fill();
        //         ctx.setTransform(1, 0, 0, 1, 0, 0);
        //     });
        //     confetti.forEach((confetto, index) => {
        //         if (confetto.position.y >= canvas.height) confetti.splice(index, 1);
        //     });
        //     sequins.forEach((sequin, index) => {
        //         if (sequin.position.y >= canvas.height) sequins.splice(index, 1);
        //     });
        //     window.requestAnimationFrame(render);
        // };

        // const resizeCanvas = () => {
        //     canvas.width = window.innerWidth;
        //     canvas.height = window.innerHeight;
        //     cx = ctx.canvas.width / 2;
        //     cy = ctx.canvas.height / 2;
        // };

        // window.addEventListener('resize', resizeCanvas);

        // Page Load Animation
        document.addEventListener('DOMContentLoaded', () => {
            const loadingState = document.getElementById('loadingState');
            const successState = document.getElementById('successState');
            setTimeout(() => {
                loadingState.style.display = 'none';
                successState.style.display = 'block';
                setTimeout(() => {
                    initBurst();
                    setTimeout(() => {
                        confetti = []; // Clear confetti after animation
                        sequins = []; // Clear sequins after animation
                    }, 4000); // Duration of confetti animation
                }, 160); // Delay after success state to start confetti
            }, 1000); // Delay for loading state
            render();
        });
    </script>
    <%-include("../../views/partials/user/footer")%>
</body>
</html>