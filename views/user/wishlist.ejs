<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Wishlist - SHADES</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap"
    rel="stylesheet" />
  <style>
    .remove {
      color: #dc3545;
    }

    .remove:hover {
      color: #b02a37;
    }

    body {
      background-color: var(--light-bg);
      color: var(--text-color);
      font-family: "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      line-height: 1.6;
    }

    .page-body {
      background-color: #ffffff;
    }

    .current-price {
      font-size: 1.15rem;
      font-weight: bold;
      color: var(--primary-color);
    }

    .original-price {
      font-size: 0.85rem;
      text-decoration: line-through;
      color: #6c757d;
      margin-left: 0.5rem;
    }

    .discount-percentage {
      font-size: 0.75rem;
      background-color: #dcfce7;
      color: var(--primary-color);
      padding: 0rem 0.5rem;
      border-radius: 20px;
      margin-left: 0.5rem;
      font-weight: 600;
    }

    .stock-status {
      font-size: 0.80rem;
      margin-bottom: 0.5rem;
    }

    .stock-status.in-stock {
      color: #009623;
    }

    .stock-status.low-stock {
      color: #ec7e00;
    }

    .stock-status.out-of-stock {
      color: #ff0000;
    }

    .containeer {
      max-width: 95%;
      margin-left: auto;
      margin-right: auto;
      display: flex;

      padding: 1px;
    }

    .sidebar {
      width: 20rem;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
      height: fit-content;
    }

    .profile-header {
      padding: 1.5rem;
      border-bottom: 1px solid #e5e7eb;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      position: relative;
    }

    .profile-icon {
      width: 3rem;
      height: 3rem;
      background-color: #a1a1a1;
      border-radius: 9999px;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      overflow: hidden;
    }

    .profile-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 9999px;
    }

    .profile-icon i {
      color: #ffffff;
      font-size: 1.125rem;
    }

    .greeting {
      color: #6b7280;
      font-size: 0.875rem;
    }

    .username {
      color: #1f2937;
      font-weight: 600;
    }

    .menu {
      padding-top: 0;
      padding-bottom: 0;
    }

    .menu-list {
      margin: 0;
    }

    .menu-item {
      border-bottom: 1px solid #f3f4f6;
    }

    .menu-link {
      display: flex;
      align-items: center;
      padding: 1rem 1.5rem;
      color: #000000;
      font-size: 0.875rem;
    }

    .menu-link:hover {
      background-color: #f9fafb;
    }

    .menu-link.active {
      background-color: #eff6ff;
      color: #2563eb;
    }

    .menu-icon {
      width: 1.25rem;
      margin-right: 0.75rem;
    }

    .logout-link {
      display: flex;
      align-items: center;
      padding: 1rem 1.5rem;
      color: #dc2626;
      font-size: 0.875rem;
    }

    .logout-link:hover {
      background-color: #fef2f2;
    }

    .main-content {
      flex: 1;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
      padding: 2rem;
    }

    .section-title {
      font-size: 1.125rem;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 1.5rem;
    }

    .wishlist-item {
      display: flex;
      align-items: center;
      padding: 1rem;
      border-bottom: 1px solid #e5e7eb;
    }

    .wishlist-item:last-child {
      border-bottom: none;
    }

    .wishlist-item img {
      width: 200px;
      height: 100px;
      object-fit: contain;
      background-color: #f5f5f5;
      border-radius: 8px;
      margin-right: 1rem;
      cursor: pointer;
      transition: transform 0.2s ease;

    }

    .wishlist-item img:hover {
      transform: scale(1.05);
    }

    .wishlist-details {
      flex: 1;
      color: #111827;
    }

    .wishlist-name {
      font-weight: 600;
      font-size: 0.999rem;
      color: #1f2937;
      margin-bottom: 0rem;
    }

    .wishlist-price {
      font-size: 0.875rem;
      color: #374151;
    }

    .wishlist-actions {
      display: flex;
      flex-direction: column;
    }

    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.6);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
    }

    .modal-content {
      background: white;
      padding: 1.5rem;
      border-radius: 12px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
      max-height: 85vh;
      overflow-y: auto;
    }

    .modal-header {
      padding-bottom: 1rem;
      border-bottom: 1px solid #e5e7eb;
      margin-bottom: 1.5rem;
    }

    .modal-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: #1f2937;
    }

    .modal-message {
      font-size: 1rem;
      color: #374151;
      margin-bottom: 1rem;
    }

    .button-group {
      display: flex;
      gap: 1rem;
      justify-content: flex-end;
      margin-top: 1.5rem;
    }

    .btn {
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 0.875rem;
      font-weight: 500;
      transition: background-color 0.2s ease;
    }

    .btn-secondary {
      background-color: #f3f4f6;
      color: #374151;
      border: 1px solid #d1d5db;
    }

    .btn-secondary:hover {
      background-color: #e5e7eb;
    }

    .btn-danger {
      background-color: #ef4444;
      color: white;
    }

    .btn-danger:hover {
      background-color: #dc2626;
    }

    .dropdown-content {
      display: none;
    }

    .dropdown-content.show {
      display: block;
    }

    .hidden:not(.md\:flex) {
      display: none !important;
    }

    @media (min-width: 768px) {
      .hidden.md\:flex {
        display: flex !important;
      }
    }

    .shop-header {
      background-color: white;
      padding: 1.5rem 0;
    }

    .breadcrumb-item+.breadcrumb-item::before {
      content: ">";
    }

    .action-button {
      color: #000000;
      text-decoration: none;
      font-size: 0.9rem;
      background: none;
      border: none;
      cursor: pointer;
      padding: 0.25rem 0.5rem;
      border-radius: 0.25rem;
      transition: all 0.2s ease;
    }

    .action-button:hover {
      background-color: #ede9fe;
    }

    .product-category {
      font-size: small;
      color: #6b7280;
      margin-bottom: 0.5rem;
    }
  </style>
</head>
<%- include("../../views/partials/user/header") %>

  <body class="page-body">



    <!-- Profile Header (Sidebar) Partial -->
    <div class="containeer">
      <div class="sidebar">
        <div class="profile-header">
          <div class="profile-icon">
            <% if (user.image) { %>
              <img src="/Uploads/userProfileimages/<%= user.image %>" alt="Profile Image" class="profile-image"
                onerror="this.src='https://via.placeholder.com/80?text=Profile'" />
              <% } else { %>
                <i class="fas fa-user" style="color: #ffffff; font-size: 1.125rem"></i>
                <% } %>
          </div>
          <div>
            <div class="greeting">Hello,</div>
            <div class="username">
              <%= user.name %>
            </div>
          </div>
        </div>
        <nav class="menu">
          <ul class="menu-list">
            <li class="menu-item">
              <a href="/profile" class="menu-link">
                <i class="fas fa-user menu-icon"></i>
                Profile Information
              </a>
            </li>
            <li class="menu-item">
              <a href="/orders" class="menu-link">
                <i class="fas fa-box menu-icon"></i>
                My Orders
              </a>
            </li>
            <li class="menu-item">
              <a href="/address" class="menu-link">
                <i class="fas fa-home menu-icon"></i>
                Manage Addresses
              </a>
            </li>
            <li class="menu-item">
              <a href="/wallet" class="menu-link">
                <i class="fas fa-wallet menu-icon"></i>
                My Wallet
              </a>
            </li>
            <li class="menu-item">
              <a href="/wishlist" class="menu-link active">
                <i class="fas fa-heart menu-icon"></i>
                My Wishlist
              </a>
            </li>
            <li class="menu-item">
              <a href="/referrals" class="menu-link">
                <i class="fas fa-users menu-icon"></i>
                Refer Friends
              </a>
            </li>
            <li class="menu-item">
              <a href="/changepassword" class="menu-link">
                <i class="fas fa-lock menu-icon"></i>
                Change Password
              </a>
            </li>
            <li class="menu-item">
              <a href="/logout" class="logout-link">
                <i class="fas fa-sign-out-alt menu-icon"></i>
                Log out
              </a>
            </li>
          </ul>
        </nav>
      </div>

      <!-- Main Content -->
      <div class="main-content">
        <h2 class="section-title">
          <i class="fas fa-heart h-6 w-6 text-black"></i> My Wishlist
        </h2>
        <div id="wishlist">
          <% if (wishlist && wishlist.length> 0) { %> <% wishlist.forEach((item)=> { %>
              <div class="wishlist-item" data-id="<%= item._id %>">
                <a href="/productDetails?id=<%= item._id %>">
                  <img
                    src="<%= item.productImage && item.productImage[0] || item.images && item.images[0] || 'https://via.placeholder.com/80?text=Product' %>"
                    class="wishlist-image" alt="<%= item.name || item.productName %>"
                    onerror="this.src='https://via.placeholder.com/80?text=Product'" />
                </a>
                <div class="wishlist-details">

                  <h3 class="wishlist-name">
                    <%= item.name || item.productName %>
                  </h3>
                  <div class="product-category">
                    <%= item.brand ? item.brand.name : 'All Categories' %>
                  </div>
                  <div class="text-yellow-500 text-[10px] flex mb-1">
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star-half-alt"></i>
                  </div>

                  <!-- Stock Status -->
                  <div
                    class="stock-status <%= item.quantity > 10 ? 'in-stock' : item.quantity > 0 ? 'low-stock' : 'out-of-stock' %>">
                    <% if (item.quantity> 10) { %>
                      <i class="fas fa-check-circle me-2"></i>In Stock <% } else if (item.quantity> 0) { %>
                        <i class="fas fa-exclamation-circle me-2"></i>Low Stock (<%= item.quantity %> left) <% } else {
                            %>
                            <i class="fas fa-times-circle me-2"></i>Out of Stock <% } %>
                  </div>
                  <div class="wishlist-price">
                    <span class="current-price">
                      ₹<%= (item.salePrice || item.regularPrice || 0).toLocaleString('en-IN') %>
                    </span>
                    <% if (item.regularPrice && item.regularPrice> (item.price ||
                      item.salePrice)) { %>
                      <span class="original-price">₹<%= item.regularPrice.toLocaleString('en-IN') %></span>
                      <% const discount=Math.round((item.regularPrice - (item.price || item.salePrice)) /
                        item.regularPrice * 100); %>
                        <span class="discount-percentage">
                          <%= discount %>% off
                        </span>
                        <% } %>
                  </div>
                </div>
                <div class="wishlist-actions">
                  <button class="action-button"
                    style="color: #000000; font-size: 0.85rem; margin-right: 0.75rem; font-weight: 500;"
                    onclick="addToCart('<%= item._id %>', <%= item.quantity %>)">
                    <i class="fas fa-cart-plus mr-1"></i> MOVE TO CART
                  </button>


                  <button class="action-button" style="color: #6b7280; font-size: 0.85rem; font-weight: 500"
                    onclick="openDeleteWishlistModal('<%= item._id %>')" aria-label="Remove from Wishlist">
                    <i class="fas fa-times mr-1"></i> REMOVE
                  </button>
                </div>
              </div>
              <% }); %>
                <% } else { %>
                  <div class="empty-wishlist text-center py-8">
                    <i class="fas fa-box-open text-gray-400 text-6xl mb-4"></i>

                    <p class="text-gray-500 text-lg mb-4 italic">
                      Your wishlist is empty. Start adding products to your wishlist!
                    </p>

                    <a href="/shop"
                      class="inline-block bg-white text-black font-semibold text-sm uppercase tracking-wide px-4 py-1 rounded-md hover:bg-gray-200 transition duration-200">
                      <i class="fas fa-shopping-bag mr-2"></i> Go to Shop
                    </a>
                  </div>
                  <% } %>
        </div>
      </div>
    </div>

    <!-- Delete Wishlist Item Confirmation Modal -->
    <div id="deleteWishlistModal"
      class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center hidden z-50">
      <div class="bg-white rounded-lg p-6 w-full max-w-md mx-4 shadow-xl">
        <div class="flex items-center mb-4">
          <i class="fas fa-exclamation-triangle text-red-500 mr-3"></i>
          <h2 class="text-lg font-semibold">Confirm Removal</h2>
        </div>
        <p class="text-sm text-gray-700 mb-4">
          Are you sure you want to remove this item from your wishlist?
        </p>
        <div class="flex justify-end space-x-3">
          <button class="px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400 transition-colors"
            onclick="closeDeleteWishlistModal()">
            Cancel
          </button>
          <button class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors"
            onclick="confirmDeleteWishlistItem()">
            <i class="fas fa-times mr-2"></i>Confirm
          </button>
        </div>
      </div>
    </div>

    <!-- Toast Container -->
    <div id="toastContainer"></div>

    <!-- Footer Partial -->
    <%- include("../../views/partials/user/footer") %>

      <script>
        let currentWishlistItemId = "";

        function showToast(message, type = "info") {
          let toastContainer = document.querySelector(".toast-container");

          if (!toastContainer) {
            toastContainer = document.createElement("div");
            toastContainer.className = "toast-container";
            toastContainer.style.position = "fixed";
            toastContainer.style.top = "20px";
            toastContainer.style.right = "20px";
            toastContainer.style.zIndex = "9999";
            toastContainer.style.display = "flex";
            toastContainer.style.flexDirection = "column";
            toastContainer.style.gap = "10px";
            document.body.appendChild(toastContainer);
          }

          const toastId = "toast-" + Date.now();
          const toast = document.createElement("div");

          // Toast color theme
          let bgColor, borderColor;
          switch (type) {
            case "success":
              bgColor = "#15803d";
              borderColor = "#15803d";
              break;
            case "error":
              bgColor = "#dc2626";
              borderColor = "#dc2626";
              break;
            case "info":
            default:
              bgColor = "#2563eb";
              borderColor = "#2563eb";
          }

          // Apply styles to toast
          toast.style.cssText = `
        display: flex;
        align-items: center;
        justify-content: space-between;
        background-color: ${bgColor};
        border-left: 4px solid ${borderColor};
        color: white;
        padding: 8px 16px;
        border-radius: 5px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        max-width: 300px;
        width: 100%;
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.3s ease, transform 0.3s ease;
    `;

          toast.id = toastId;
          toast.setAttribute("role", "alert");
          toast.setAttribute("aria-live", "assertive");
          toast.setAttribute("aria-atomic", "true");

          toast.innerHTML = `
        <div style="flex: 1; font-size: 14px;">${message}</div>
        <button type="button" style="margin-left: 12px; background: none; border: none; color: white; font-size: 16px; cursor: pointer;" data-toast-id="${toastId}">
            &times;
        </button>
    `;

          toastContainer.appendChild(toast);

          // Fade-in animation
          setTimeout(() => {
            toast.style.opacity = "1";
            toast.style.transform = "translateY(0)";
          }, 100);

          // Manual close
          const closeButton = toast.querySelector(`[data-toast-id="${toastId}"]`);
          closeButton.addEventListener("click", () => {
            toast.style.opacity = "0";
            toast.style.transform = "translateY(20px)";
            setTimeout(() => toast.remove(), 300);
          });

          // Auto-remove after 1.5 seconds
          setTimeout(() => {
            toast.style.opacity = "0";
            toast.style.transform = "translateY(20px)";
            setTimeout(() => toast.remove(), 300);
          }, 1500);
        }

        function openDeleteWishlistModal(id) {
          currentWishlistItemId = id;
          document
            .getElementById("deleteWishlistModal")
            .classList.remove("hidden");
        }

        function closeDeleteWishlistModal() {
          document.getElementById("deleteWishlistModal").classList.add("hidden");
          currentWishlistItemId = "";
        }

        function confirmDeleteWishlistItem() {
          fetch(`/wishlist/remove/${currentWishlistItemId}`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then((res) => res.json())
            .then((data) => {
              if (data.success) {
                showToast("Item removed from wishlist", "success");
                document
                  .querySelector(
                    `.wishlist-item[data-id="${currentWishlistItemId}"]`
                  )
                  .remove();
                if (!document.querySelector(".wishlist-item")) {
                  document.getElementById("wishlist").innerHTML = `
    <div class="empty-wishlist text-center py-8">
      <i class="fas fa-box-open text-gray-400 text-6xl mb-4"></i>
      <p class="text-gray-500 text-lg mb-4 italic">
        Your wishlist is empty. Start adding products to your wishlist!
      </p>
      <a
        href="/shop"
        class="inline-block bg-white text-black font-semibold text-sm uppercase tracking-wide px-4 py-1 rounded-md hover:bg-gray-200 transition duration-200"
      >
        <i class="fas fa-shopping-bag mr-2"></i> Go to Shop
      </a>
    </div>
  `;
                }

              } else {
                showToast(
                  data.message || "Failed to remove item from wishlist",
                  "error"
                );
              }
              closeDeleteWishlistModal();
            })
            .catch((err) => {
              console.error("Remove wishlist item error:", err);
              showToast("Failed to remove item from wishlist", "error");
              closeDeleteWishlistModal();
            });
        }

        function addToCart(productId, quantity) {
          if (!productId) {
            showToast("Invalid product ID", "error");
            return;
          }

          // Check stock
          if (!quantity || quantity <= 0) {
            showToast("product is out of stock", "error");
            return;
          }

          // Add to Cart
          fetch("/cart/add", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productId: productId, quantity: 1 }),
          })
            .then((response) => {
              if (!response.ok)
                throw new Error(`HTTP error! status: ${response.status}`);
              return response.json();
            })
            .then((data) => {
              if (data.success) {
                showToast("Product added to cart!", "success");
                updateCartCounter(data.cartCount);

                // Remove from Wishlist after Cart Add Success
                fetch(`/wishlist/remove/${productId}`, {
                  method: "DELETE",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ productId }),
                })
                  .then((res) => res.json())
                  .then((wishlistData) => {
                    if (wishlistData.success) {
                      const removedItem = document.querySelector(
                        `.wishlist-item[data-id="${productId}"]`
                      );
                      if (removedItem) removedItem.remove();

                      const wishlistItems = document.querySelectorAll(".wishlist-item");
                      if (wishlistItems.length === 0) {
                        document.getElementById("wishlist").innerHTML =
                          '<p class="text-gray-500 italic">Your wishlist is empty. Start adding products to your wishlist!</p>';
                      }
                    } else {
                      showToast(
                        wishlistData.message ||
                        "Failed to remove item from wishlist",
                        "error"
                      );
                    }
                  })
                  .catch((err) => {
                    console.error("Remove wishlist item error:", err);
                    showToast("Failed to remove item from wishlist", "error");
                  });
              } else {
                showToast(data.message || "Failed to add product to cart", "error");
                if (data.message && data.message.includes("login")) {
                  setTimeout(() => {
                    window.location.href = "/login";
                  }, 2000);
                }
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              showToast("An error occurred. Please try again.", "error");
            });
        }


        function updateCartCounter(count) {
          const cartCounter = document.querySelector(".cart-counter");
          if (cartCounter) {
            cartCounter.textContent = count || 0;
            cartCounter.ariaLabel = `Cart contains ${count || 0} items`;
            cartCounter.classList.toggle("hidden", count === 0);
          }
        }

        document
          .getElementById("deleteWishlistModal")
          .addEventListener("click", function (e) {
            if (e.target === this) {
              closeDeleteWishlistModal();
            }
          });

        window.addEventListener("click", function (event) {
          const dropdowns = document.querySelectorAll(".dropdown-content");
          dropdowns.forEach((dropdown) => {
            if (
              dropdown.classList.contains("show") &&
              !event.target.closest(".dropdown")
            ) {
              dropdown.classList.remove("show");
            }
          });
        });

        function toggleDropdown(dropdownId) {
          event.stopPropagation();
          const dropdowns = document.querySelectorAll(".dropdown-content");
          dropdowns.forEach((dropdown) => {
            if (
              dropdown.id !== dropdownId &&
              dropdown.classList.contains("show")
            ) {
              dropdown.classList.remove("show");
            }
          });
          document.getElementById(dropdownId).classList.toggle("show");
        }
      </script>
  </body>

</html>