<%- include("../../views/partials/user/header")%>
    <style>
        /* Product card styling to match the image */
        .product-card {
            background-color: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            display: flex;
            flex-direction: column;
            height: 340px;
            border: none;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        .product-img-container {
            position: relative;
            padding-top: 50%;
            overflow: hidden;
            background-color: #f5f5f5;
        }

        .product-img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.5s ease;
        }

        .product-card:hover .product-img {
            transform: scale(1.05);
        }

        .wishlist-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: white;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            z-index: 1;
            color: #999;
            transition: all 0.3s ease;
        }

        .wishlist-btn:hover {
            color: #ff006e;
            transform: scale(1.1);
        }

        .wishlist-btn.active {
            color: #ff006e;
        }

        .card-body {
            padding: 1rem;
            display: flex;
            flex-direction: column;
         
        }

        .product-category {
            font-size: 0.75rem;
            color: #6c757d;
            margin-bottom: 0.4rem;
            text-transform: uppercase;
        }

        .product-title {
            font-size: 1rem;
            font-weight: 500;
            margin-bottom: 0.5rem;
            line-height: 1.3;
            height: 1.3rem;
            overflow: hidden;
            display: -webkit-box;
            -webkit-box-orient: vertical;
        }

        .product-price {
            display: flex;
            align-items: baseline;
            margin-top: auto;
            margin-bottom: 0rem;
        }

        .current-price {
            font-size: 1.15rem;
            font-weight: bold;
            color: #000000;
        }

        .original-price {
            font-size: 0.85rem;
            text-decoration: line-through;
            color: #6c757d;
            margin-left: 0.5rem;
        }

        .discount-percentage {
            font-size: 0.75rem;
            background-color: #dcfce7 ;
            color: #000000;
            padding: 0.2rem 0.5rem;
            border-radius: 20px;
            margin-left: 0.5rem;
            font-weight: 600;
        }

        .card-footer {
            background-color: transparent;
            border-top: none;
            padding: 0 1rem 1rem;
        }

        .btn-add-cart {
            display: block;
            width: 100%;
            background-color: #000000;
            border: none;
            border-radius: 5px;
            padding: 0.5rem 0;
            font-weight: 600;
            color: #ffffff !important;
            transition: all 0.3s ease;
            text-align: center;
        }

        .btn-add-cart:hover {
            background-color: #444444;
            color: #ffffff !important;
            transform: translateY(-2px);
        }

        .btn-add-cart i {
            margin-right: 0.5rem;
        }

        /* Brand container hover effects */
        .brand-container {
            transition: background-color 0.3s ease, transform 0.5s ease;
            border-radius: 10px;
            padding: 10px;
        }

        .brand-container:hover {
            background-color: #FFEB3B;
            transform: translateY(-8px);
        }

        .brand-container img {
            transition: transform 0.5s ease;
        }

        .brand-container:hover img {
            transform: scale(1.3);
        }

        /* Featured models section */
        .featured-model-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .featured-model-container {
            overflow: hidden;
        }

        /* Hero section */
        .hero-carousel-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Responsive adjustments */
        @media (max-width: 767.98px) {
            .product-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 1rem;
            }

            .product-card {
                height: 320px;
            }

            .card-body {
                padding: 0.8rem;
            }

            .product-title {
                font-size: 0.9rem;
                height: 2.4rem;
            }

            .current-price {
                font-size: 1rem;
            }
        }

        .section-heading {
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            font-weight: 600;
        }

        /* Toast styles */
        .toast-container {
            position: fixed;
            bottom: 1rem;
            right: 1rem;
            z-index: 9999;
        }
    </style>

    <!-- Hero Section -->
    <section class="relative overflow-hidden">
        <div id="default-carousel" class="relative w-full" data-carousel="slide">
            <!-- Carousel wrapper -->
            <div class="relative h-56 overflow-hidden rounded-lg md:h-[35rem] cursor-pointer" id="carousel-wrapper">
                <!-- Item 1 -->
                <div class="hidden duration-700 ease-in-out" data-carousel-item>
                    <img src="/css/image/Banner/voyage1.avif"
                        class="hero-carousel-img absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"
                        alt="Luxury eyewear banner">
                    <div class="absolute top-1/2 left-1/4 transform -translate-x-1/2 -translate-y-1/2 z-40 text-left">
                        <h2 class="text-4xl md:text-5xl font-bold text-white mb-2 leading-tight">Luxury <span
                                class="text-black">Eyewear</span></h2>
                        <p class="text-white text-lg md:text-xl mb-6 max-w-md">Discover premium designs for every
                            occasion</p>
                        <a href="/shop"
                            class="px-6 py-3 bg-black text-white font-medium rounded hover:bg-gray-800 transition duration-300 shadow-lg">
                            SHOP NOW
                        </a>
                    </div>
                </div>
                <!-- Item 2 -->
                <div class="hidden duration-700 ease-in-out" data-carousel-item>
                    <img src="/css/image/Banner/desk-mn (1).jpg"
                        class="hero-carousel-img absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"
                        alt donkey>
                    <div class="absolute top-1/2 left-1/4 transform -translate-x-1/2 -translate-y-1/2 z-40 text-left">
                        <h2 class="text-4xl md:text-5xl font-bold text-white mb-2 leading-tight">Bold <span
                                class="text-black">Statements</span></h2>
                        <p class="text-white text-lg md:text-xl mb-6 max-w-md">Express yourself with our exclusive
                            collection</p>
                        <a href="/shop"
                            class="px-6 py-3 bg-black text-white font-medium rounded hover:bg-gray-800 transition duration-300 shadow-lg">
                            EXPLORE
                        </a>
                    </div>
                </div>
                <!-- Item 3 -->
                <div class="hidden duration-700 ease-in-out" data-carousel-item>
                    <img src="/css/image/Banner/rayban1.jpg"
                        class="hero-carousel-img absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"
                        alt="Ray-Ban banner">
                    <div class="absolute top-1/2 left-1/4 transform -translate-x-1/2 -translate-y-1/2 z-40 text-left">
                        <h2 class="text-4xl md:text-5xl font-bold text-white mb-2 leading-tight">Iconic <span
                                class="text-red-600">Ray-Ban</span></h2>
                        <p class="text-white text-lg md:text-xl mb-6 max-w-md">Timeless designs that define generations
                        </p>
                        <a href="/shop"
                            class="px-6 py-3 bg-black text-white font-medium rounded hover:bg-gray-800 transition duration-300 shadow-lg">
                            VIEW COLLECTION
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- New Arrivals Section -->
    <section class="py-12 bg-white">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl font-medium mb-8 section-heading">New arrivals for you</h2>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                <% for(let i=0; i < products.length; i++) { %>
                    <div class="product-card">
                        <div class="product-img-container">
                            <button class="wishlist-btn add-to-wishlist" data-product-id="<%= products[i]._id %>">
                                <i class="far fa-heart"></i>
                            </button>
                            <a href="/productDetails?id=<%= products[i]._id %>">
                                <img src="<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>"
                                    class="product-img">
                            </a>
                        </div>
                        <div class="card-body">
  <a href="/productDetails?id=<%= products[i]._id %>">
    
    
    <div class="product-category text-sm text-gray-500 mb-1">
      <%= products[i].category ? products[i].category.name : 'Eyewear' %>
    </div>

 
    <h3 class="product-title text-lg font-semibold text-gray-800 mb-2">
      <%= products[i].productName %>
    </h3>

    <div class="product-price text-base">
      <%
        const regularPrice = products[i].regularPrice;
        const now = new Date();
        
        const productOffer = (products[i].hasOffer && products[i].productOffer > 0)
          ? products[i].productOffer
          : 0;

        //Category Offer (check with date)
        let categoryOffer = 0;
        if (
          products[i].category &&
          products[i].category.hasOffer &&
          products[i].category.offerPercentage > 0
        ) {
          const start = new Date(products[i].category.offerStartDate);
          const end = new Date(products[i].category.offerEndDate);

          if (!isNaN(start) && !isNaN(end) && now >= start && now <= end) {
            categoryOffer = products[i].category.offerPercentage;
          }
        }

        // Use the greater offer
        const discount = Math.max(productOffer, categoryOffer);
        const finalPrice = Math.round(regularPrice * (1 - discount / 100));
      %>

      <% if (discount > 0) { %>
        <!-- Discounted price -->
        <span class="current-price text-green-600 font-bold">₹<%= finalPrice.toLocaleString('en-IN') %></span>
        <span class="original-price text-gray-500 line-through ml-2">₹<%= regularPrice.toLocaleString('en-IN') %></span>
        <span class="discount-percentage text-red-500 font-semibold ml-2"><%= discount %>% off</span>
      <% } else { %>
        <!--  No offer -->
        <span class="current-price text-gray-800 font-semibold">₹<%= regularPrice.toLocaleString('en-IN') %></span>
      <% } %>
    </div>

  </a>
</div>

                        <div class="card-footer">
                            <button class="btn btn-add-cart add-to-cart" data-product-id="<%= products[i]._id %>">
                                <i class="fas fa-shopping-cart"></i>Add to Cart
                            </button>
                        </div>
                    </div>
                    <% } %>
            </div>
        </div>
    </section>

    <!-- Featured Models Section -->
    <section class="py-12 bg-gray-50">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl font-medium mb-8 section-heading">Featured models</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-0">
                <div class="featured-model-container">
                    <img src="/css/image/Banner/sgh-z23-1.avif" alt="Model wearing sunglasses"
                        class="featured-model-img">
                </div>
                <div class="featured-model-container">
                    <img src="/css/image/Banner/doc.avif" alt="Model wearing sunglasses" class="featured-model-img">
                </div>
            </div>
        </div>
    </section>

    <!-- Best Sellers Section -->
  <section class="py-12 bg-white">
  <div class="container mx-auto px-4">
    <h2 class="text-2xl font-medium mb-8 section-heading">Best-sellers for every occasion</h2>

    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
      <% for(let i=0; i < products.length && i < 4; i++) { %>
        <div class="product-card">

          <!-- 🖼️ IMAGE & WISHLIST -->
          <div class="product-img-container">
            <button class="wishlist-btn add-to-wishlist" data-product-id="<%= products[i]._id %>">
              <i class="far fa-heart"></i>
            </button>
            <a href="/productDetails?id=<%= products[i]._id %>">
              <img src="<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>" class="product-img">
            </a>
          </div>
          <div class="card-body">

            <div class="product-category">
              <%= products[i].category ? products[i].category.name : 'Eyewear' %>
            </div>

            <h3 class="product-title">
              <%= products[i].productName %>
            </h3>

            <!-- PRICE + DISCOUNT LOGIC -->
            <div class="product-price">
              <%
                const regularPrice = products[i].regularPrice;
                const now = new Date();

                // Product-level offer
                const productOffer = (products[i].hasOffer && products[i].productOffer > 0)
                  ? products[i].productOffer
                  : 0;

                // Category-level offer
                let categoryOffer = 0;
                if (
                  products[i].category &&
                  products[i].category.hasOffer &&
                  products[i].category.offerPercentage > 0
                ) {
                  const start = new Date(products[i].category.offerStartDate);
                  const end = new Date(products[i].category.offerEndDate);
                  if (!isNaN(start) && !isNaN(end) && now >= start && now <= end) {
                    categoryOffer = products[i].category.offerPercentage;
                  }
                }

                // Final discount
                const discount = Math.max(productOffer, categoryOffer);
                const finalPrice = Math.round(regularPrice * (1 - discount / 100));
              %>

              <% if (discount > 0) { %>
                <span class="current-price">₹<%= finalPrice.toLocaleString('en-IN') %></span>
                <span class="original-price">₹<%= regularPrice.toLocaleString('en-IN') %></span>
                <span class="discount-percentage"><%= discount %>% off</span>
              <% } else { %>
                <span class="current-price">₹<%= regularPrice.toLocaleString('en-IN') %></span>
              <% } %>
            </div>
          </div>


          <div class="card-footer">
            <button class="btn btn-add-cart add-to-cart" data-product-id="<%= products[i]._id %>">
              <i class="fas fa-shopping-cart"></i> Add to Cart
            </button>
          </div>

        </div>
      <% } %>
    </div>
  </div>
</section>


    <!-- Brands Section -->
    <section class="py-12 bg-white border-t border-gray-200">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl font-medium mb-8 section-heading">Shop with brands</h2>
            <div class="grid grid-cols-3 md:grid-cols-6 gap-4">
                <div class="brand-container flex items-center justify-center py-4">
                    <img src="/css/image/shop_with_Brands/Oakley_bl_18.webp" alt="Oakley logo"
                        class="h-12 transition-transform duration-300">
                </div>
                <div class="brand-container flex items-center justify-center py-4">
                    <img src="/css/image/shop_with_Brands/Ray-Ban_bl_18.webp" alt="Ray-Ban logo"
                        class="h-12 transition-transform duration-300">
                </div>
                <div class="brand-container flex items-center justify-center py-4">
                    <img src="/css/image/shop_with_Brands/Gucci_bl_18.webp" alt="Gucci logo"
                        class="h-12 transition-transform duration-300">
                </div>
                <div class="brand-container flex items-center justify-center py-4">
                    <img src="/css/image/shop_with_Brands/costa_bl_18.avif" alt="Costa logo"
                        class="h-12 transition-transform duration-300">
                </div>
                <div class="brand-container flex items-center justify-center py-4">
                    <img src="/css/image/shop_with_Brands/Dolce&Gabbana_bl_18.webp" alt="Dolce & Gabbana logo"
                        class="h-12 transition-transform duration-300">
                </div>
                <div class="brand-container flex items-center justify-center py-4">
                    <img src="/css/image/shop_with_Brands/Versace_bl_18.avif" alt="Versace logo"
                        class="h-12 transition-transform duration-300">
                </div>
            </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize Flowbite carousel
            initializeCartButtons()
            initializeWishlistButtons();
            if (typeof flowbite !== 'undefined' && document.getElementById('default-carousel')) {
                const carouselElement = document.getElementById('default-carousel');
                const carousel = new flowbite.Carousel(carouselElement, {
                    interval: 5000,
                    pause: 'hover'
                });

                const carouselWrapper = document.getElementById('carousel-wrapper');
                if (carouselWrapper) {
                    carouselWrapper.addEventListener('click', function (event) {
                        const rect = carouselWrapper.getBoundingClientRect();
                        const clickX = event.clientX - rect.left;
                        const halfWidth = rect.width / 2;
                        if (clickX < halfWidth) {
                            carousel.prev();
                        } else {
                            carousel.next();
                        }
                    });
                }
            }



            // Add to cart functionality
            const addToCartButtons = document.querySelectorAll('.add-to-cart');
            addToCartButtons.forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    const productId = this.getAttribute('data-product-id');
                    addToCart(productId, this);  // Pass button to function
                });
            });


            // Add to wishlist functionality
            document.querySelectorAll('.add-to-wishlist').forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    if (this.disabled) return;
                    const productId = this.getAttribute('data-product-id');
                    if (productId) {
                        toggleWishlist(productId, this);
                    } else {
                        showToast('Invalid product ID', 'error');
                    }
                });
            });

            function initializeCartButtons() {
                const cartButtons = document.querySelectorAll('.add-to-cart');
                const productIds = Array.from(cartButtons).map(btn => btn.getAttribute('data-product-id')).filter(Boolean);

                if (productIds.length === 0) return;

                fetch('/cart/status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productIds })
                })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            cartButtons.forEach(button => {
                                const productId = button.getAttribute('data-product-id');
                                if (data.cartStatus[productId]) {
                                    // Product already in cart
                                    button.innerHTML = '<i class="fas fa-shopping-cart"></i> Go to Cart';
                                    button.classList.add('bg-black');

                                    const newButton = button.cloneNode(true);
                                    button.parentNode.replaceChild(newButton, button);

                                    newButton.addEventListener('click', () => {
                                        window.location.href = '/cart';
                                    });
                                }
                            });
                        }
                    })
                    .catch(err => console.error('Cart status error:', err));
            }

            function initializeWishlistButtons() {
                const wishlistButtons = document.querySelectorAll('.add-to-wishlist');
                const productIds = Array.from(wishlistButtons).map(btn => btn.getAttribute('data-product-id')).filter(Boolean);
                if (productIds.length === 0) return;

                fetch('/wishlist/status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productIds: productIds })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            wishlistButtons.forEach(button => {
                                const productId = button.getAttribute('data-product-id');
                                if (data.wishlistStatus[productId]) {
                                    button.innerHTML = '<i class="fas fa-heart"></i>';
                                    button.classList.add('active');
                                } else {
                                    button.innerHTML = '<i class="far fa-heart"></i>';
                                    button.classList.remove('active');
                                }
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching wishlist status:', error);
                        wishlistButtons.forEach(button => {
                            button.innerHTML = '<i class="far fa-heart"></i>';
                            button.classList.remove('active');
                        });
                    });
            }

            function addToCart(productId, button) {
                if (!productId) {
                    showToast('Invalid product ID', 'error');
                    return;
                }

                fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity: 1 })
                })
                    .then(response => {
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            showToast('Product added to cart!', 'success');

                            // Update cart counter
                            updateCartCounter(data.cartCount);

                            // Change button to "Go to Cart"
                            if (button) {
                                button.innerHTML = '<i class="fas fa-shopping-cart"></i> Go to Cart';
                                button.classList.add('bg-black');

                                // Remove old listener
                                const newButton = button.cloneNode(true);
                                button.parentNode.replaceChild(newButton, button);

                                // Redirect to cart
                                newButton.addEventListener('click', () => {
                                    window.location.href = '/cart';
                                });
                            }

                        } else {
                            showToast(data.message || 'Failed to add product to cart', 'error');
                            if (data.message?.includes('login')) {
                                setTimeout(() => window.location.href = '/login', 2000);
                            }
                        }
                    })
                    .catch(error => {
                        console.error('Add to cart error:', error);
                        showToast('Please login & try again', 'error');
                        setTimeout(() => window.location.href = '/login', 2000);
                    });
            }


            function toggleWishlist(productId, button) {
                if (!productId) {
                    showToast('Invalid product ID', 'error');
                    return;
                }

                button.disabled = true;
                const originalHTML = button.innerHTML;
                const wasActive = button.classList.contains('active');

                if (wasActive) {
                    button.innerHTML = '<i class="far fa-heart"></i>';
                    button.classList.remove('active');
                } else {
                    button.innerHTML = '<i class="fas fa-heart"></i>';
                    button.classList.add('active');
                }

                const url = wasActive ? `/wishlist/remove/${productId}` : '/addtowishlist';
                const method = wasActive ? 'DELETE' : 'POST';

                const fetchOptions = {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    ...(method === 'POST' && { body: JSON.stringify({ productId }) })
                };

                fetch(url, fetchOptions)
                    .then(response => {
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            if (wasActive) {
                                showToast('Product removed from wishlist!', 'info');
                            } else {
                                showToast('Product added to wishlist!', 'success');
                            }
                            updateWishlistCounter(data.wishlistCount);
                        } else {
                            button.innerHTML = originalHTML;
                            if (wasActive) button.classList.add('active');
                            else button.classList.remove('active');

                            if (data.message?.includes('login')) {
                                showToast('Please login to manage wishlist', 'error');
                                setTimeout(() => window.location.href = '/login', 2000);
                            } else if (data.message?.includes('blocked')) {
                                showToast('Your account is blocked', 'error');
                                setTimeout(() => window.location.href = '/login', 2000);
                            } else {
                                showToast(data.message || 'Wishlist update failed', 'error');
                            }
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        button.innerHTML = originalHTML;
                        if (wasActive) button.classList.add('active');
                        else button.classList.remove('active');
                        showToast('Please login & try again', 'error');
                        if (error) {
                            setTimeout(() => {
                                window.location.href = '/login';
                            }, 2000);
                        }

                    })
                    .finally(() => {
                        button.disabled = false;
                    });
            }

            function showToast(message, type = 'info') {
                    let toastContainer = document.querySelector('.toast-container');
                    if (!toastContainer) {
                        toastContainer = document.createElement('div');
                        toastContainer.className = 'toast-container';
                        toastContainer.style.position = 'fixed';
                        toastContainer.style.top = '20px';
                        toastContainer.style.right = '20px';
                        toastContainer.style.zIndex = '9999';
                        toastContainer.style.display = 'flex';
                        toastContainer.style.flexDirection = 'column';
                        toastContainer.style.gap = '10px';
                        document.body.appendChild(toastContainer);
                    }

                    const toastId = 'toast-' + Date.now();
                    const toast = document.createElement('div');

                    // Background color and border based on type
                    let bgColor, borderColor;
                    switch (type) {
                        case 'success':
                            bgColor = '#16a34a';  // green
                            borderColor = '#16a34a';
                            break;
                        case 'error':
                            bgColor = '#dc2626';  // red
                            borderColor = '#dc2626';
                            break;
                        case 'info':
                        default:
                            bgColor = '#2563eb';  // blue
                            borderColor = '#2563eb';
                    }

                    // Toast styles (no slide, only fade + slight vertical shift)
                    toast.style.cssText = `
        display: flex;
        align-items: center;
        justify-content: space-between;
        background-color: ${bgColor};
        border-left: 4px solid ${borderColor};
        color: white;
        padding: 12px 16px;
        border-radius: 6px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        max-width: 300px;
        width: 100%;
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.3s ease, transform 0.3s ease;
    `;

                    toast.id = toastId;
                    toast.setAttribute('role', 'alert');
                    toast.setAttribute('aria-live', 'assertive');
                    toast.setAttribute('aria-atomic', 'true');

                    toast.innerHTML = `
        <div style="flex: 1; font-size: 14px;">${message}</div>
        <button type="button" style="margin-left: 12px; background: none; border: none; color: white; font-size: 16px; cursor: pointer;" data-toast-id="${toastId}">
            &times;
        </button>
    `;

                    toastContainer.appendChild(toast);

                    // Fade in + move up
                    setTimeout(() => {
                        toast.style.opacity = '1';
                        toast.style.transform = 'translateY(0)';
                    }, 100);

                    // Close button
                    const closeButton = toast.querySelector(`[data-toast-id="${toastId}"]`);
                    closeButton.addEventListener('click', () => {
                        toast.style.opacity = '0';
                        toast.style.transform = 'translateY(20px)';
                        setTimeout(() => toast.remove(), 300);
                    });

                    // Auto remove after 1.5s
                    setTimeout(() => {
                        toast.style.opacity = '0';
                        toast.style.transform = 'translateY(20px)';
                        setTimeout(() => toast.remove(), 300);
                    }, 1500);
                }

            function updateCartCounter(count) {
                const cartCounter = document.querySelector('.cart-counter');
                if (cartCounter) {
                    cartCounter.textContent = count || 0;
                    cartCounter.classList.toggle('d-none', count <= 0);
                }
            }

            function updateWishlistCounter(count) {
                const wishlistCounter = document.querySelector('.wishlist-counter');
                if (wishlistCounter) {
                    wishlistCounter.textContent = count || 0;
                    wishlistCounter.classList.toggle('d-none', count <= 0);
                }
            }
        });
    </script>

    <%- include("../../views/partials/user/footer")%>