<%- include("../../views/partials/user/header")%>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SHADES - Home</title>
    <script defer src="/script/script.js"></script>
    <link rel="stylesheet" href="/css/user.css" />
  </head>
  <body>
    <!-- Hero Section -->
    <section class="relative w-full overflow-hidden">
      <div class="relative w-full h-56 md:h-96 lg:h-[35rem]" id="carousel">
        <!-- Slide 1 -->
        <div
          class="absolute inset-0 opacity-0 transition-opacity duration-1000 ease-in-out carousel-slide"
        >
          <img
            src="/css/image/Banner/voyage1.avif"
            alt="Luxury eyewear"
            class="w-full h-full object-cover"
          />
          <div
            class="absolute inset-0 bg-gradient-to-r from-black/60 to-transparent flex items-center px-4 sm:px-8 md:px-16 lg:px-24"
          >
            <div>
              <h2 class="text-xl sm:text-2xl md:text-4xl lg:text-5xl font-bold text-white mb-2">
                Luxury <span class="text-gray-300">Eyewear</span>
              </h2>
              <p
                class="text-sm sm:text-base md:text-lg lg:text-xl text-white max-w-xs sm:max-w-md mb-4"
              >
                Discover premium designs for every occasion
              </p>
              <button
                onclick="window.location.href='/shop'"
                class="inline-block px-4 py-2 sm:px-5 sm:py-3 md:px-6 md:py-3 bg-black text-white font-semibold rounded shadow text-sm sm:text-base md:text-lg"
              >
                SHOP NOW
              </button>
            </div>
          </div>
        </div>

        <!-- Slide 2 -->
        <div
          class="absolute inset-0 opacity-0 transition-opacity duration-1000 ease-in-out carousel-slide"
        >
          <img
            src="/css/image/Banner/desk-mn (1).jpg"
            alt="Bold eyewear"
            class="w-full h-full object-cover"
          />
          <div
            class="absolute inset-0 bg-gradient-to-r from-black/60 to-transparent flex items-center px-4 sm:px-8 md:px-16 lg:px-24"
          >
            <div>
              <h2 class="text-xl sm:text-2xl md:text-4xl lg:text-5xl font-bold text-white mb-2">
                Bold <span class="text-black">Statements</span>
              </h2>
              <p
                class="text-sm sm:text-base md:text-lg lg:text-xl text-white max-w-xs sm:max-w-md mb-4"
              >
                Express yourself with our exclusive collection
              </p>
              <button
                onclick="window.location.href='/shop'"
                class="inline-block px-4 py-2 sm:px-5 sm:py-3 md:px-6 md:py-3 bg-black text-white font-semibold rounded shadow text-sm sm:text-base md:text-lg"
              >
                EXPLORE
              </button>
            </div>
          </div>
        </div>

        <!-- Slide 3 -->
        <div
          class="absolute inset-0 opacity-0 transition-opacity duration-1000 ease-in-out carousel-slide"
        >
          <img
            src="/css/image/Banner/rayban1.jpg"
            alt="Ray-Ban"
            class="w-full h-full object-cover"
          />
          <div
            class="absolute inset-0 bg-gradient-to-r from-black/60 to-transparent flex items-center px-4 sm:px-8 md:px-16 lg:px-24"
          >
            <div>
              <h2 class="text-xl sm:text-2xl md:text-4xl lg:text-5xl font-bold text-white mb-2">
                Iconic <span class="text-gray-300">Ray-Ban</span>
              </h2>
              <p
                class="text-sm sm:text-base md:text-lg lg:text-xl text-white max-w-xs sm:max-w-md mb-4"
              >
                Timeless designs that define generations
              </p>
              <button
                onclick="window.location.href='/shop'"
                class="inline-block px-4 py-2 sm:px-5 sm:py-3 md:px-6 md:py-3 bg-black text-white font-semibold rounded shadow text-sm sm:text-base md:text-lg"
              >
                VIEW COLLECTION
              </button>
            </div>
          </div>
        </div>

        <!-- Navigation buttons -->
        <button
          id="prevBtn"
          class="absolute top-1/2 left-4 -translate-y-1/2 bg-black/40 text-white p-2 rounded-full hover:bg-black/60 md:p-3"
        >
          ❮
        </button>
        <button
          id="nextBtn"
          class="absolute top-1/2 right-4 -translate-y-1/2 bg-black/40 text-white p-2 rounded-full hover:bg-black/60 md:p-3"
        >
          ❯
        </button>
      </div>
    </section>

    <!-- New Arrivals Section -->
    <section class="py-8 md:py-12 bg-gray-50">
      <div class="container mx-auto px-4">
        <h2 class="text-2xl font-medium mb-6 md:mb-8 section-heading">New arrivals for you</h2>
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 product-grid">
          <% for (let i = 0; i < newArrivals.length; i++) { %>
          <div class="product-card">
            <div class="product-img-container">
              <button
                class="wishlist-btn add-to-wishlist"
                data-product-id="<%= newArrivals[i]._id %>"
              >
                <i class="far fa-heart"></i>
              </button>
              <a href="/product/details/<%= newArrivals[i]._id %>">
                <img
                  src="<%= newArrivals[i].productImage[0] %>"
                  alt="<%= newArrivals[i].productName %>"
                  class="product-img"
                />
              </a>
            </div>
            <div class="card-body">
              <a href="/product/details/<%= newArrivals[i]._id %>">
                <!-- Category -->
                <div
                  class="product-category text-sm text-gray-500 mb-1 flex justify-between items-center"
                >
                  <span><%= newArrivals[i].brand ? newArrivals[i].brand.name : '' %></span>
                  <div class="text-yellow-500 text-[10px] flex ml-2">
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star mr-[1px]"></i>
                    <i class="fas fa-star-half-alt"></i>
                  </div>
                </div>
                <!-- Product Name -->
                <h3 class="product-title text-lg font-semibold text-gray-800 mb-2">
                  <%= newArrivals[i].name || newArrivals[i].productName %>
                </h3>
                <!-- Price Section -->
                <div class="product-price text-base">
                  <% const regular = newArrivals[i].regularPrice; const sale = newArrivals[i].price
                  || newArrivals[i].salePrice || regular; %>
                  <span class="current-price text-green-600 font-bold">
                    ₹<%= sale.toLocaleString('en-IN') %>
                  </span>
                  <% if (regular && sale < regular) { 
                                    const discount = Math.round((regular - sale) / regular * 100);
                                %>
                  <span class="original-price text-gray-500 line-through ml-2">
                    ₹<%= regular.toLocaleString('en-IN') %>
                  </span>
                  <span class="discount-percentage text-red-500 font-semibold ml-2">
                    <%= discount %>% off
                  </span>
                  <% } %>
                </div>
              </a>
            </div>
            <div class="card-footer">
              <% if (newArrivals[i].quantity === 0) { %>
              <button
                class="btn btn-add-cart add-to-cart"
                data-product-id="<%= newArrivals[i]._id %>"
                disabled
              >
                <i class="fas fa-times-circle mr-2"></i>Out of stock
              </button>
              <% } else { %>
              <button
                class="btn btn-add-cart add-to-cart"
                data-product-id="<%= newArrivals[i]._id %>"
              >
                <i class="fas fa-shopping-cart"></i>Add to Cart
              </button>
              <% } %>
            </div>
          </div>
          <% } %>
        </div>
      </div>
    </section>

    <!-- Featured Models Section -->
    <section class="py-8 md:py-12 bg-gray-50">
      <div class="container mx-auto px-4">
        <h2 class="text-2xl font-medium mb-6 md:mb-8 section-heading">Featured models</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="featured-model-container">
            <img
              src="/css/image/Banner/sgh-z23-1.avif"
              alt="Model wearing sunglasses"
              class="featured-model-img"
            />
          </div>
          <div class="featured-model-container">
            <img
              src="/css/image/Banner/doc.avif"
              alt="Model wearing sunglasses"
              class="featured-model-img"
            />
          </div>
        </div>
      </div>
    </section>

    <!-- Best Sellers Section -->
    <section class="py-8 md:py-12 bg-gray-50">
      <div class="container mx-auto px-4">
        <h2 class="text-2xl font-medium mb-6 md:mb-8 section-heading">
          Best-sellers for every occasion
        </h2>
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 product-grid">
          <% for (let i = 0; i < bestSellerProducts.length; i++) { %>
          <div class="product-card">
            <div class="product-img-container">
              <button
                class="wishlist-btn add-to-wishlist"
                data-product-id="<%= bestSellerProducts[i]._id %>"
              >
                <i class="far fa-heart"></i>
              </button>
              <a href="/product/details/<%= bestSellerProducts[i]._id %>">
                <img
                  src="<%= bestSellerProducts[i].productImage[0] %>"
                  alt="<%= bestSellerProducts[i].productName %>"
                  class="product-img"
                />
              </a>
            </div>
            <div class="card-body">
              <div
                class="product-category text-sm text-gray-500 mb-1 flex justify-between items-center"
              >
                <span
                  ><%= bestSellerProducts[i].brand ? bestSellerProducts[i].brand.name : '' %></span
                >
                <div class="text-yellow-400 text-[10px] flex ml-2">
                  <i class="fas fa-star mr-[1px]"></i>
                  <i class="fas fa-star mr-[1px]"></i>
                  <i class="fas fa-star mr-[1px]"></i>
                  <i class="fas fa-star mr-[1px]"></i>
                  <i class="fas fa-star-half-alt"></i>
                </div>
              </div>
              <h3 class="product-title text-base font-semibold text-gray-800 mb-2">
                <%= bestSellerProducts[i].productName %>
              </h3>
              <div class="product-price">
                <% const regularPrice = bestSellerProducts[i].regularPrice; const now = new Date();
                const productOffer = (bestSellerProducts[i].hasOffer &&
                bestSellerProducts[i].productOffer > 0) ? bestSellerProducts[i].productOffer : 0;
                let categoryOffer = 0; if ( bestSellerProducts[i].category &&
                bestSellerProducts[i].category.hasOffer &&
                bestSellerProducts[i].category.offerPercentage > 0 ) { const start = new
                Date(bestSellerProducts[i].category.offerStartDate); const end = new
                Date(bestSellerProducts[i].category.offerEndDate); if (!isNaN(start) && !isNaN(end)
                && now >= start && now <= end) { categoryOffer =
                bestSellerProducts[i].category.offerPercentage; } } const discount =
                Math.max(productOffer, categoryOffer); const finalPrice = Math.round(regularPrice *
                (1 - discount / 100)); %> <% if (discount > 0) { %>
                <span class="current-price text-green-600 font-bold"
                  >₹<%= finalPrice.toLocaleString('en-IN') %></span
                >
                <span class="original-price text-gray-500 line-through ml-2"
                  >₹<%= regularPrice.toLocaleString('en-IN') %></span
                >
                <span class="discount-percentage text-red-500 font-semibold ml-2"
                  ><%= discount %>% off</span
                >
                <% } else { %>
                <span class="current-price text-green-600 font-bold"
                  >₹<%= regularPrice.toLocaleString('en-IN') %></span
                >
                <% } %>
              </div>
            </div>
            <div class="card-footer">
              <button
                class="btn btn-add-cart add-to-cart"
                data-product-id="<%= bestSellerProducts[i]._id %>"
              >
                <i class="fas fa-shopping-cart"></i> Add to Cart
              </button>
            </div>
          </div>
          <% } %>
        </div>
      </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>

    <script>
      const slides = document.querySelectorAll('.carousel-slide');
      let index = 0;

      function showSlide(i) {
        slides.forEach((slide) => (slide.style.opacity = '0'));
        slides[i].style.opacity = '1';
      }

      function nextSlide() {
        index = (index + 1) % slides.length;
        showSlide(index);
      }

      function prevSlide() {
        index = (index - 1 + slides.length) % slides.length;
        showSlide(index);
      }

      document.getElementById('nextBtn').addEventListener('click', nextSlide);
      document.getElementById('prevBtn').addEventListener('click', prevSlide);

      // Auto slide every 5 seconds
      setInterval(nextSlide, 5000);

      // Show first slide initially
      showSlide(index);
      document.addEventListener('DOMContentLoaded', function () {
        // Initialize Flowbite carousel
        initializeCartButtons();
        initializeWishlistButtons();
        if (typeof flowbite !== 'undefined' && document.getElementById('default-carousel')) {
          const carouselElement = document.getElementById('default-carousel');
          const carousel = new flowbite.Carousel(carouselElement, {
            interval: 5000,
            pause: 'hover',
          });

          const carouselWrapper = document.getElementById('carousel-wrapper');
          if (carouselWrapper) {
            carouselWrapper.addEventListener('click', function (event) {
              const rect = carouselWrapper.getBoundingClientRect();
              const clickX = event.clientX - rect.left;
              const halfWidth = rect.width / 2;
              if (clickX < halfWidth) {
                carousel.prev();
              } else {
                carousel.next();
              }
            });
            // Add touch swipe support for mobile
            let touchStartX = 0;
            carouselWrapper.addEventListener('touchstart', function (event) {
              touchStartX = event.touches[0].clientX;
            });
            carouselWrapper.addEventListener('touchend', function (event) {
              const touchEndX = event.changedTouches[0].clientX;
              const deltaX = touchEndX - touchStartX;
              if (deltaX > 50) {
                carousel.prev();
              } else if (deltaX < -50) {
                carousel.next();
              }
            });
          }
        }

        // Add to cart functionality
        const addToCartButtons = document.querySelectorAll('.add-to-cart');
        addToCartButtons.forEach((button) => {
          button.addEventListener('click', function (e) {
            e.preventDefault();
            e.stopPropagation();
            const productId = this.getAttribute('data-product-id');
            addToCart(productId, this);
          });
        });

        // Add to wishlist functionality
        document.querySelectorAll('.add-to-wishlist').forEach((button) => {
          button.addEventListener('click', function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (this.disabled) return;
            const productId = this.getAttribute('data-product-id');
            if (productId) {
              toggleWishlist(productId, this);
            } else {
              showToast('Invalid product ID', 'error');
            }
          });
        });

        function initializeCartButtons() {
          const cartButtons = document.querySelectorAll('.add-to-cart');
          const productIds = Array.from(cartButtons)
            .map((btn) => btn.getAttribute('data-product-id'))
            .filter(Boolean);
          if (productIds.length === 0) return;

          fetch('/cart/status', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productIds }),
          })
            .then((res) => res.json())
            .then((data) => {
              if (data.success) {
                cartButtons.forEach((button) => {
                  const productId = button.getAttribute('data-product-id');
                  if (data.cartStatus[productId]) {
                    button.innerHTML = '<i class="fas fa-shopping-cart"></i> Go to Cart';
                    button.classList.add('bg-black');
                    const newButton = button.cloneNode(true);
                    button.parentNode.replaceChild(newButton, button);
                    newButton.addEventListener('click', () => {
                      window.location.href = '/cart';
                    });
                  }
                });
              }
            })
            .catch((err) => console.error('Cart status error:', err));
        }

        function initializeWishlistButtons() {
          const wishlistButtons = document.querySelectorAll('.add-to-wishlist');
          const productIds = Array.from(wishlistButtons)
            .map((btn) => btn.getAttribute('data-product-id'))
            .filter(Boolean);
          if (productIds.length === 0) return;

          fetch('/wishlist/status', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productIds: productIds }),
          })
            .then((response) => {
              if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
              return response.json();
            })
            .then((data) => {
              if (data.success) {
                wishlistButtons.forEach((button) => {
                  const productId = button.getAttribute('data-product-id');
                  if (data.wishlistStatus[productId]) {
                    button.innerHTML = '<i class="fas fa-heart"></i>';
                    button.classList.add('active');
                  } else {
                    button.innerHTML = '<i class="far fa-heart"></i>';
                    button.classList.remove('active');
                  }
                });
              }
            })
            .catch((error) => {
              console.error('Error fetching wishlist status:', error);
              wishlistButtons.forEach((button) => {
                button.innerHTML = '<i class="far fa-heart"></i>';
                button.classList.remove('active');
              });
            });
        }

        function addToCart(productId, button) {
          if (!productId) {
            showToast('Invalid product ID', 'error');
            return;
          }

          fetch('/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId, quantity: 1 }),
          })
            .then((response) => {
              if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
              return response.json();
            })
            .then((data) => {
              if (data.success) {
                showToast('Product added to cart!', 'success');
                updateCartCounter(data.cartCount);
                window.updateCartBadge();
                if (button) {
                  button.innerHTML = '<i class="fas fa-shopping-cart"></i> Go to Cart';
                  button.classList.add('bg-black');
                  const newButton = button.cloneNode(true);
                  button.parentNode.replaceChild(newButton, button);
                  newButton.addEventListener('click', () => {
                    window.location.href = '/cart';
                  });
                }
              } else {
                showToast(data.message || 'Failed to add product to cart', 'error');
                if (data.message?.includes('login')) {
                  setTimeout(() => (window.location.href = '/login'), 2000);
                }
              }
            })
            .catch((error) => {
              console.error('Add to cart error:', error);
              showToast('Please login & try again', 'error');
              setTimeout(() => (window.location.href = '/login'), 2000);
            });
        }

        function toggleWishlist(productId, button) {
          if (!productId) {
            showToast('Invalid product ID', 'error');
            return;
          }

          button.disabled = true;
          const originalHTML = button.innerHTML;
          const wasActive = button.classList.contains('active');

          if (wasActive) {
            button.innerHTML = '<i class="far fa-heart"></i>';
            button.classList.remove('active');
          } else {
            button.innerHTML = '<i class="fas fa-heart"></i>';
            button.classList.add('active');
          }

          const url = wasActive ? `/wishlist/remove/${productId}` : '/addtowishlist';
          const method = wasActive ? 'DELETE' : 'POST';

          const fetchOptions = {
            method: method,
            headers: {
              'Content-Type': 'application/json',
            },
            ...(method === 'POST' && { body: JSON.stringify({ productId }) }),
          };

          fetch(url, fetchOptions)
            .then((response) => {
              if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
              return response.json();
            })
            .then((data) => {
              if (data.success) {
                updateWishlistCounter(data.wishlistCount);
                window.updateWishlistBadge();
              } else {
                button.innerHTML = originalHTML;
                if (wasActive) button.classList.add('active');
                else button.classList.remove('active');
                if (data.message?.includes('login')) {
                  showToast('Please login to manage wishlist', 'error');
                  setTimeout(() => (window.location.href = '/login'), 2000);
                } else if (data.message?.includes('blocked')) {
                  showToast('Your account is blocked', 'error');
                  setTimeout(() => (window.location.href = '/login'), 2000);
                } else {
                  showToast(data.message || 'Wishlist update failed', 'error');
                }
              }
            })
            .catch((error) => {
              console.error('Error:', error);
              button.innerHTML = originalHTML;
              if (wasActive) button.classList.add('active');
              else button.classList.remove('active');
              showToast('Please login & try again', 'error');
              setTimeout(() => (window.location.href = '/login'), 2000);
            })
            .finally(() => {
              button.disabled = false;
            });
        }
      });
    </script>
    <%- include("../../views/partials/user/footer")%>
  </body>
</html>
