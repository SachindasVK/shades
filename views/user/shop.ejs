<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop - Your Store</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #000000;
            --secondary-color: #ff006e;
            --accent-color: #ffbe0b;
            --text-color: #333333;
            --light-bg: #f8f9fa;
            --border-color: #dee2e6;
            --card-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            --hover-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        body {
            background-color: var(--white-bg);
            color: var(--text-color);
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
        }
   .btn-add-cart:disabled, .btn-add-cart.loading {
            background-color: #6c757d;
            cursor: not-allowed;
            transform: none !important;
        }
        .shop-header {
            background-color: white;
            padding: 1.5rem 0;
            margin-bottom: 1rem;
        }

        .shop-title {
            font-weight: 600;
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }

        .breadcrumb-item+.breadcrumb-item::before {
            content: ">";
        }

        .search-container {
            position: relative;
            max-width: 300px;
        }

        .search-input {
            border-radius: 9999px;
            padding-left: 40px;
            height: 40px;
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
            width: 100%;
        }

        .search-input:focus {
            box-shadow: 0 0 0 0.25rem rgba(0, 0, 0, 0.25);
            border-color: var(--primary-color);
            outline: none;
        }

        .search-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #777;
        }

        .search-clear {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #777;
            cursor: pointer;
            background: none;
            border: none;
            padding: 0;
            font-size: 16px;
        }

        .sort-select {
            border-radius: 9999px;
            height: 40px;
            padding-left: 40px;
            border: 1px solid var(--border-color);
            background-position: right 15px center;
            max-width: 380px;
            width: 100%;
            appearance: none;
        }

        .sort-select:focus {
            box-shadow: 0 0 0 0.25rem rgba(0, 0, 0, 0.25);
            border-color: var(--primary-color);
            outline: none;
        }

        .sort-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #777;
        }

        .filter-sidebar {
            background-color: white;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            position: relative;
            top: 20px;
        }

        .filter-sidebar h4 {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 1.25rem;
            padding-bottom: 0.75rem;
            border-bottom: 1px solid var(--border-color);
        }

        .filter-sidebar h5 {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: var(--text-color);
        }

        .filter-group {
            margin-bottom: 1.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }

        .filter-group:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

        .form-check {
            margin-bottom: 0.5rem;
        }

        .form-check-input {
            width: 1.1em;
            height: 1.1em;
            margin-top: 0.25em;
            border-color: #adb5bd;
        }

        .form-check-input:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .form-check-label {
            color: var(--text-color);
            font-size: 0.95rem;
        }

        .price-range-inputs {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .price-range-inputs .form-control {
            border-radius: 5px;
            height: 40px;
            border: 1px solid var(--border-color);
        }

        .price-range-slider {
            margin: 15px 0;
        }

        .product-count {
            font-size: 0.95rem;
            color: #6c757d;
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .product-card {
            background-color: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: var(--card-shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            display: flex;
            flex-direction: column;
            height: 340px;
            border: none;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--hover-shadow);
        }

        .product-img-container {
            position: relative;
            padding-top: 50%;
            overflow: hidden;
            background-color: #f5f5f5;
        }

        .product-img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: contain;
            padding: 0;
            transition: transform 0.5s ease;
        }

        .product-card:hover .product-img {
            transform: scale(1.05);
        }

        .product-badge {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: var(--accent-color);
            color: white;
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            border-radius: 20px;
            font-weight: 600;
            z-index: 1;
        }

        .wishlist-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: white;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            z-index: 1;
            color: #999;
            transition: all 0.3s ease;
        }

        .wishlist-btn:hover {
            color: var(--secondary-color);
            transform: scale(1.1);
        }

        .wishlist-btn.active {
            color: var(--secondary-color);
        }

        .card-body {
            padding: 1rem;
            display: flex;
            flex-direction: column;
            flex-grow: 0;
        }

        .product-category {
            font-size: 0.75rem;
            color: #6c757d;
            margin-bottom: 0.4rem;
        }

        .product-title {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            line-height: 1.3;
            height: 1.3rem;
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

        .product-rating {
            margin-bottom: 0.6rem;
        }

        .rating-stars {
            color: var(--accent-color);
            font-size: 0.85rem;
        }

        .rating-count {
            font-size: 0.75rem;
            color: #6c757d;
            margin-left: 0.5rem;
        }

        .product-price {
            display: flex;
            align-items: baseline;
            margin-top: 0px;
            margin-bottom: 0rem;
        }

        .current-price {
            font-size: 1.15rem;
            font-weight: bold;
            color: var(--primary-color);
        }

        .original-price {
            font-size: 0.85rem;
            text-decoration: line-through;
            color: #6c757d;
            margin-left: 0.5rem;
        }

        .discount-percentage {
            font-size: 0.75rem;
            background-color: #dcfce7;
            color: var(--primary-color);
            padding: 0rem 0.5rem;
            border-radius: 20px;
            margin-left: 0.5rem;
            font-weight: 600;
        }

        .card-footer {
            background-color: transparent;
            border-top: none;
            padding: 0 1rem 1rem;
        }

        .btn-add-cart {
            display: block;
            width: 100%;
            background-color: #000000;
            border: none;
            border-radius: 5px;
            padding: 0.5rem 0;
            font-weight: 600;
            color: #ffffff !important;
            transition: all 0.3s ease;
            text-align: center;
        }

        .btn-add-cart:hover {
            background-color: #444444;
            color: #ffffff !important;
            transform: translateY(-2px);
        }

        .btn-add-cart i {
            margin-right: 0.5rem;
        }

        .pagination-container {
            margin-top: 2.5rem;
        }

        .page-link {
            color: var(--text-color);
            border-radius: 5px;
            margin: 0 8px;
            padding: 0.5rem 1rem;
            border: 1px solid var(--border-color);
            background-color: white;
            cursor: pointer;
        }

        .page-link:hover {
            background-color: #e9ecef;
            color: var(--text-color);
            border-color: var(--border-color);
        }

        .page-item.disabled .page-link {
            color: #6c757d;
            background-color: transparent;
            cursor: not-allowed;
        }

        .page-text {
            color: var(--text-color);
            font-size: 1rem;
            margin: 0 1rem;
        }

        .btn-filter {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 0.6rem 1.5rem;
            border-radius: 5px;
            font-weight: 600;
        }

        .btn-filter:hover {
            background-color: #444444;
        }

        .btn-reset {
            background-color: transparent;
            color: var(--text-color);
            border: 1px solid var(--border-color);
            padding: 0.6rem 1.5rem;
            border-radius: 5px;
            font-weight: 600;
        }

        .btn-reset:hover {
            background-color: #e9ecef;
        }

        @media (max-width: 991.98px) {
            .filter-sidebar {
                position: static;
                margin-bottom: 2rem;
            }

            .shop-header {
                padding: 1rem 0;
            }

            .shop-title {
                font-size: 1.5rem;
            }

            .search-container {
                max-width: 100%;
            }
        }

        @media (max-width: 767.98px) {
            .search-input,
            .sort-select {
                height: 40px;
            }

            .product-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 1rem;
            }

            .product-card {
                height: 320px;
            }

            .card-body {
                padding: 0.8rem;
            }

            .product-title {
                font-size: 0.9rem;
                height: 2.4rem;
            }

            .current-price {
                font-size: 1rem;
            }
        }
    </style>
</head>

<body>
    <%- include("../../views/partials/user/header") %>

        <!-- Shop Header -->
        <div class="shop-header">
            <div class="max-w-7xl mx-auto px-4">
                <nav aria-label="breadcrumb">
                    <ol class="flex space-x-2 text-sm">
                        <li><a href="/" class="text-blue-600 hover:underline">Home</a></li>
                        <li class="flex items-center"><span class="mx-2">></span><span class="text-gray-500">Shop</span>
                        </li>
                    </ol>
                </nav>
            </div>
        </div>

        <div class="max-w-7xl mx-auto px-4 mb-5">
            <!-- Search and Sort Row -->
            <div class="flex flex-wrap -mx-2 mb-4">
                <div class="w-full md:w-8/12 px-2 mb-3 md:mb-0">
                    <form id="searchForm" action="/shop" method="GET">
                        <div class="search-container">
                            <i class="fas fa-search search-icon"></i>
                            <input type="text" class="search-input w-full" id="searchInput" name="search"
                                placeholder="Search for products..." value="<%= filters.search %>">
                            <% if (filters.search) { %>
                                <button type="button" class="search-clear" id="clearSearch">
                                    <i class="fas fa-times"></i>
                                </button>
                                <% } %>
                        </div>
                    </form>
                </div>
                <div class="w-full md:w-3/12 px-2 ml-auto">
                    <div class="relative">
                        <i class="fas fa-sort-amount-down sort-icon"></i>
                        <select name="sort by" id="sortSelect" class="sort-select w-full">
                            <option value disabled selected>sort by</option>
                            <option value="new" <%=filters.sort==='new' ? 'selected' : '' %>>New Arrivals</option>
                            <option value="featured" <%=filters.sort==='featured' ? 'selected' : '' %>>Featured</option>
                            <option value="price-asc" <%=filters.sort==='price-asc' ? 'selected' : '' %>>Price: Low to
                                High</option>
                            <option value="price-desc" <%=filters.sort==='price-desc' ? 'selected' : '' %>>Price: High
                                to Low</option>
                            <option value="name-asc" <%=filters.sort==='name-asc' ? 'selected' : '' %>>Name: A to Z
                            </option>
                            <option value="name-desc" <%=filters.sort==='name-desc' ? 'selected' : '' %>>Name: Z to A
                            </option>
                            <option value="popularity" <%=filters.sort==='popularity' ? 'selected' : '' %>>Best Selling
                            </option>
                            <option value="rating" <%=filters.sort==='rating' ? 'selected' : '' %>>Top Rated</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="flex flex-wrap -mx-3">
                <!-- Filter Sidebar -->
                <div class="w-full lg:w-3/12 px-3">
                    <div class="filter-sidebar">
                        <h4>Filter Products</h4>
                        <form id="filterForm" action="/shop" method="GET">
                            <% if (filters.search) { %>
                                <input type="hidden" name="search" value="<%= filters.search %>">
                                <% } %>
                                    <input type="hidden" id="sortInput" name="sort" value="<%= filters.sort %>">
                                    <!-- Category Filter -->
                                    <div class="filter-group">
                                        <h5>Categories</h5>
                                        <div class="form-check">
                                            <input class="form-check-input category-filter" type="radio" name="category"
                                                id="categoryAll" value="all" <%=filters.category==='all' ? 'checked'
                                                : '' %>>
                                            <label class="form-check-label" for="categoryAll">All Categories</label>
                                        </div>
                                        <% category.forEach(function(cat) { %>
                                            <div class="form-check">
                                                <input class="form-check-input category-filter" type="radio"
                                                    name="category" id="category<%= cat._id %>" value="<%= cat._id %>"
                                                    <%=filters.category===cat._id.toString() ? 'checked' : '' %>>
                                                <label class="form-check-label" for="category<%= cat._id %>">
                                                    <%= cat.name %>
                                                </label>
                                            </div>
                                            <% }); %>
                                    </div>
                                    <!-- Price Range Filter -->
                                    <div class="filter-group">
                                        <h5>Price Range</h5>
                                        <div class="price-range-inputs">
                                            <div class="flex items-center">
                                                <span class="text-gray-600 mr-2">₹</span>
                                                <input type="number" class="form-control w-full" id="minPrice"
                                                    name="minPrice" value="<%= filters.minPrice %>"
                                                    min="<%= priceRange.min %>" max="<%= priceRange.max %>"
                                                    placeholder="Min">
                                            </div>
                                            <div class="flex items-center">
                                                <span class="text-gray-600 mr-2">₹</span>
                                                <input type="number" class="form-control w-full" id="maxPrice"
                                                    name="maxPrice" value="<%= filters.maxPrice %>"
                                                    min="<%= priceRange.min %>" max="<%= priceRange.max %>"
                                                    placeholder="Max">
                                            </div>
                                        </div>
                                        <div class="price-slider-values mt-2 flex justify-between">
                                            <small>₹<%= priceRange.min %></small>
                                            <small>₹<%= priceRange.max %></small>
                                        </div>
                                    </div>
                                    <!-- Brand Filter -->
                                    <div class="filter-group">
                                        <h5>Brands</h5>
                                        <div class="form-check">
                                            <input class="form-check-input brand-filter" type="radio" name="brand"
                                                id="brandAll" value="all" <%=filters.brand==='all' ? 'checked' : '' %>>
                                            <label class="form-check-label" for="brandAll">All Brands</label>
                                        </div>
                                        <% brand.forEach(function(b) { %>
                                            <div class="form-check">
                                                <input class="form-check-input brand-filter" type="radio" name="brand"
                                                    id="brand<%= b._id %>" value="<%= b._id %>"
                                                    <%=filters.brand===b._id.toString() ? 'checked' : '' %>>
                                                <label class="form-check-label" for="brand<%= b._id %>">
                                                    <%= b.name %>
                                                </label>
                                            </div>
                                            <% }); %>
                                    </div>
                                    <div class="grid gap-2">
                                        <button type="submit" class="btn btn-filter">Apply Filters</button>
                                        <a href="/shop" class="btn btn-reset">Reset All</a>
                                    </div>
                        </form>
                    </div>
                </div>
                <!-- Products Section -->
                <div class="w-full lg:w-9/12 px-3">
                    <div class="flex justify-between items-center mb-4">
                        <p class="product-count mb-0">
                            <%= totalProducts %> products found
                        </p>
                    </div>
                    <% if (products.length===0) { %>
                        <div class="bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4">
                            <i class="fas fa-info-circle mr-2"></i>
                            No products found matching your criteria. Try adjusting your filters.
                        </div>
                        <% } else { %>
                            <div class="product-grid">
                                <% products.forEach(function(product) { %>
                                    <div class="product-card">
                                        <div class="product-img-container">
                                            <% if (product.isNew) { %>
                                                <span class="product-badge">New</span>
                                                <% } else if (product.regularPrice && product.price) { %>
                                                    <% const discount=Math.round((product.regularPrice - product.price)
                                                        / product.regularPrice * 100); %>
                                                        <% if (discount> 0) { %>
                                                            <span class="product-badge">
                                                                <%= discount %>% OFF
                                                            </span>
                                                            <% } %>
                                                                <% } %>
                                                                    <button class="wishlist-btn add-to-wishlist"
                                                                        data-product-id="<%= product._id %>">
                                                                        <i class="far fa-heart"></i>
                                                                    </button>
                                                                    <a href="/productDetails?id=<%= product._id %>">
                                                                        <img src="<%= product.productImage && product.productImage[0] || product.images && product.images[0] || '/images/default-product.jpg' %>"
                                                                            class="product-img"
                                                                            alt="<%= product.name || product.productName %>">
                                                                    </a>
                                        </div>
                                        <div class="card-body">
                                            <a href="/productDetails?id=<%= product._id %>">
                                                <div class="product-category">
                                                    <%= product.category ? product.category.name : 'All Categories' %>
                                                </div>
                                                <h3 class="product-title">
                                                    <%= product.name || product.productName %>
                                                </h3>
                                                <% if (product.averageRating) { %>
                                                    <div class="product-rating">
                                                        <span class="rating-stars">
                                                            <% for(let i=1; i <=5; i++) { %>
                                                                <% if (i <=Math.floor(product.averageRating)) { %>
                                                                    <i class="fas fa-star"></i>
                                                                    <% } else if (i <=Math.floor(product.averageRating)
                                                                        + 0.5) { %>
                                                                        <i class="fas fa-star-half-alt"></i>
                                                                        <% } else { %>
                                                                            <i class="far fa-star"></i>
                                                                            <% } %>
                                                                                <% } %>
                                                        </span>
                                                        <% if (product.ratingCount) { %>
                                                            <span class="rating-count">(<%= product.ratingCount %>
                                                                    )</span>
                                                            <% } %>
                                                    </div>
                                                    <% } %>
                                                        <div class="product-price">
                                                            <span class="current-price">₹<%= (product.price ||
                                                                    product.salePrice).toLocaleString('en-IN') %></span>
                                                            <% if (product.regularPrice && product.regularPrice>
                                                                (product.price || product.salePrice)) { %>
                                                                <span class="original-price">₹<%=
                                                                        product.regularPrice.toLocaleString('en-IN') %>
                                                                </span>
                                                                <% const discount=Math.round((product.regularPrice -
                                                                    (product.price || product.salePrice)) /
                                                                    product.regularPrice * 100); %>
                                                                    <span class="discount-percentage">
                                                                        <%= discount %>% off
                                                                    </span>
                                                                    <% } %>
                                                        </div>
                                            </a>
                                        </div>
                                        <div class="card-footer">
                                            <%if(product.quantity===0){%>
                                            <button class="btn btn-add-cart add-to-cart"
                                                data-product-id="<%= product._id %>" <%= product.quantity === 0 ? 'disabled' : '' %> >
                                                 <i class="fas fa-times-circle mr-2"></i>Out of stock
                                            </button>
                                            <%}else{%>
                                                 <button class="btn btn-add-cart add-to-cart"
                                                data-product-id="<%= product._id %>">
                                                <i class="fas fa-shopping-cart"></i> Add to Cart
                                            </button>
                                                <%}%>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                            <% } %>
                                <!-- Pagination -->
                                <% if (totalPages> 1) { %>
                                    <div class="pagination-container flex justify-center items-center mt-10">
                                        <nav aria-label="Page navigation">
                                            <ul class="flex items-center space-x-2">
                                                <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                                                    <a class="page-link" href="/shop?page=<%= currentPage - 1 %>"
                                                        aria-label="Previous" data-scroll-to-top>
                                                        <i class="fas fa-chevron-left"></i>
                                                    </a>
                                                </li>
                                                <li class="page-item">
                                                    <span class="page-text">Page <%= currentPage %> of <%= totalPages %></span>
                                                </li>
                                                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                                    <a class="page-link" href="/shop?page=<%= currentPage + 1 %>"
                                                        aria-label="Next" data-scroll-to-top>
                                                        <i class="fas fa-chevron-right"></i>
                                                    </a>
                                                </li>
                                            </ul>
                                        </nav>
                                    </div>
                                    <% } %>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                initializeCartButtons()
                initializeWishlistButtons();

                const sortSelect = document.getElementById('sortSelect');
                sortSelect.addEventListener('change', function () {
                    const url = new URL(window.location.href);
                    const params = new URLSearchParams(url.search);
                    params.set('sort', this.value);
                    params.set('page', '1');
                    window.location.href = `${url.pathname}?${params.toString()}`;
                });

                const clearSearchBtn = document.getElementById('clearSearch');
                if (clearSearchBtn) {
                    clearSearchBtn.addEventListener('click', function () {
                        document.getElementById('searchInput').value = '';
                        document.getElementById('searchForm').submit();
                    });
                }

                const searchInput = document.getElementById('searchInput');
                searchInput.addEventListener('keypress', function (e) {
                    if (e.key === 'Enter') {
                        document.getElementById('searchForm').submit();
                    }
                });

                // Scroll to top on pagination click
                document.querySelectorAll('[data-scroll-to-top]').forEach(link => {
                    link.addEventListener('click', function (e) {
                        window.scrollTo({ top: 0, behavior: 'smooth' });
                    });
                });

                // Add to cart
                const addToCartButtons = document.querySelectorAll('.add-to-cart');
                addToCartButtons.forEach(button => {
                    button.addEventListener('click', function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        const productId = this.getAttribute('data-product-id');
                        addToCart(productId, this);
                    });
                });

                const wishlistButtons = document.querySelectorAll('.add-to-wishlist');
                wishlistButtons.forEach(button => {
                    button.addEventListener('click', function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        if (this.disabled) return;
                        const productId = this.getAttribute('data-product-id');
                        toggleWishlist(productId, this);
                    });
                });

                function initializeCartButtons() {
                    const cartButtons = document.querySelectorAll('.add-to-cart');
                    const productIds = Array.from(cartButtons).map(btn => btn.getAttribute('data-product-id')).filter(Boolean);

                    if (productIds.length === 0) return;

                    fetch('/cart/status', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productIds })
                    })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                cartButtons.forEach(button => {
                                    const productId = button.getAttribute('data-product-id');
                                    if (data.cartStatus[productId]) {
                                        button.innerHTML = '<i class="fas fa-shopping-cart"></i> Go to Cart';
                                        button.classList.add('bg-black');

                                        const newButton = button.cloneNode(true);
                                        button.parentNode.replaceChild(newButton, button);

                                        newButton.addEventListener('click', () => {
                                            window.location.href = '/cart';
                                        });
                                    }
                                });
                            }
                        })
                        .catch(err => console.error('Cart status error:', err));
                }

                function initializeWishlistButtons() {
                    const wishlistButtons = document.querySelectorAll('.add-to-wishlist');
                    const productIds = Array.from(wishlistButtons).map(btn => btn.getAttribute('data-product-id')).filter(Boolean);
                    if (productIds.length === 0) return;

                    fetch('/wishlist/status', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productIds: productIds })
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                wishlistButtons.forEach(button => {
                                    const productId = button.getAttribute('data-product-id');
                                    if (data.wishlistStatus[productId]) {
                                        button.innerHTML = '<i class="fas fa-heart"></i>';
                                        button.classList.add('active');
                                    } else {
                                        button.innerHTML = '<i class="far fa-heart"></i>';
                                        button.classList.remove('active');
                                    }
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Error fetching wishlist status:', error);
                            wishlistButtons.forEach(button => {
                                button.innerHTML = '<i class="far fa-heart"></i>';
                                button.classList.remove('active');
                            });
                        });
                }

                function addToCart(productId, button) {
                    if (!productId) {
                        showToast('Invalid product ID', 'error');
                        return;
                    }

                    fetch('/cart/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId, quantity: 1 })
                    })
                        .then(response => {
                            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                showToast('Product added to cart!', 'success');

                                updateCartCounter(data.cartCount);

                                if (button) {
                                    button.innerHTML = '<i class="fas fa-shopping-cart"></i> Go to Cart';
                                    button.classList.add('bg-black');

                                    const newButton = button.cloneNode(true);
                                    button.parentNode.replaceChild(newButton, button);

                                    newButton.addEventListener('click', () => {
                                        window.location.href = '/cart';
                                    });
                                }
                            } else {
                                showToast(data.message || 'Failed to add product to cart', 'error');
                                if (data.message?.includes('login')) {
                                    setTimeout(() => window.location.href = '/login', 2000);
                                }
                            }
                        })
                        .catch(error => {
                            console.error('Add to cart error:', error);
                            showToast('Please login & try again', 'error');
                            setTimeout(() => window.location.href = '/login', 2000);
                        });
                }

                function toggleWishlist(productId, button) {
                    if (!productId) {
                        showToast('Invalid product ID', 'error');
                        return;
                    }

                    button.disabled = true;
                    const originalHTML = button.innerHTML;
                    const wasActive = button.classList.contains('active');

                    if (wasActive) {
                        button.innerHTML = '<i class="far fa-heart"></i>';
                        button.classList.remove('active');
                    } else {
                        button.innerHTML = '<i class="fas fa-heart"></i>';
                        button.classList.add('active');
                    }

                    const url = wasActive ? `/wishlist/remove/${productId}` : '/addtowishlist';
                    const method = wasActive ? 'DELETE' : 'POST';

                    const fetchOptions = {
                        method: method,
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        ...(method === 'POST' && { body: JSON.stringify({ productId }) })
                    };

                    fetch(url, fetchOptions)
                        .then(response => {
                            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                updateWishlistCounter(data.wishlistCount);
                            } else {
                                button.innerHTML = originalHTML;
                                if (wasActive) button.classList.add('active');
                                else button.classList.remove('active');

                                if (data.message?.includes('login')) {
                                    showToast('Please login to manage wishlist', 'error');
                                    setTimeout(() => window.location.href = '/login', 2000);
                                } else if (data.message?.includes('blocked')) {
                                    showToast('Your account is blocked', 'error');
                                    setTimeout(() => window.location.href = '/login', 2000);
                                } else {
                                    showToast(data.message || 'Wishlist update failed', 'error');
                                }
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            button.innerHTML = originalHTML;
                            if (wasActive) button.classList.add('active');
                            else button.classList.remove('active');
                            showToast('Please login & try again.', 'error');
                            if (error) {
                                setTimeout(() => {
                                    window.location.href = '/login';
                                }, 2000);
                            }
                        })
                        .finally(() => {
                            button.disabled = false;
                        });
                }

                function showToast(message, type = 'info') {
                    let toastContainer = document.querySelector('.toast-container');
                    if (!toastContainer) {
                        toastContainer = document.createElement('div');
                        toastContainer.className = 'toast-container';
                        toastContainer.style.position = 'fixed';
                        toastContainer.style.top = '20px';
                        toastContainer.style.right = '20px';
                        toastContainer.style.zIndex = '9999';
                        toastContainer.style.display = 'flex';
                        toastContainer.style.flexDirection = 'column';
                        toastContainer.style.gap = '10px';
                        document.body.appendChild(toastContainer);
                    }

                    const toastId = 'toast-' + Date.now();
                    const toast = document.createElement('div');

                    let bgColor, borderColor;
                    switch (type) {
                        case 'success':
                            bgColor = '#15803d';
                            borderColor = '#15803d';
                            break;
                        case 'error':
                            bgColor = '#dc2626';
                            borderColor = '#dc2626';
                            break;
                        case 'info':
                        default:
                            bgColor = '#2563eb';
                            borderColor = '#2563eb';
                    }

                    toast.style.cssText = `
                        display: flex;
                        align-items: center;
                        justify-content: space-between;
                        background-color: ${bgColor};
                        border-left: 4px solid ${borderColor};
                        color: white;
                        padding: 8px 16px;
                        border-radius: 5px;
                        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                        max-width: 400px;
                        width: 100%;
                        opacity: 0;
                        transform: translateY(20px);
                        transition: opacity 0.3s ease, transform 0.3s ease;
                    `;

                    toast.id = toastId;
                    toast.setAttribute('role', 'alert');
                    toast.setAttribute('aria-live', 'assertive');
                    toast.setAttribute('aria-atomic', 'true');

                    toast.innerHTML = `
                        <div style="flex: 1; font-size: 14px;">${message}</div>
                        <button type="button" style="margin-left: 12px; background: none; border: none; color: white; font-size: 16px; cursor: pointer;" data-toast-id="${toastId}">
                            ×
                        </button>
                    `;

                    toastContainer.appendChild(toast);

                    setTimeout(() => {
                        toast.style.opacity = '1';
                        toast.style.transform = 'translateY(0)';
                    }, 100);

                    const closeButton = toast.querySelector(`[data-toast-id="${toastId}"]`);
                    closeButton.addEventListener('click', () => {
                        toast.style.opacity = '0';
                        toast.style.transform = 'translateY(20px)';
                        setTimeout(() => toast.remove(), 300);
                    });

                    setTimeout(() => {
                        toast.style.opacity = '0';
                        toast.style.transform = 'translateY(20px)';
                        setTimeout(() => toast.remove(), 300);
                    }, 1500);
                }

                function updateCartCounter(count) {
                    const cartCounter = document.querySelector('.cart-counter');
                    if (cartCounter) {
                        cartCounter.textContent = count || 0;
                        cartCounter.classList.toggle('d-none', count <= 0);
                    }
                }

                function updateWishlistCounter(count) {
                    const wishlistCounter = document.querySelector('.wishlist-counter');
                    if (wishlistCounter) {
                        wishlistCounter.textContent = count || 0;
                        wishlistCounter.classList.toggle('d-none', count <= 0);
                    }
                }
            });
        </script>
        <%- include("../../views/partials/user/footer") %>
</body>

</html>