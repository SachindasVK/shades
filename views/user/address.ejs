<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Addresses - SHADES</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .page-body {
            background-color: #f3f4f7;
        }
        .containeer {
            max-width: 95%; 
            margin-left: auto; 
            margin-right: auto;
            display: flex; 
            gap: 2rem;
            padding: 10px;
        }
        .sidebar {
            width: 20rem;
            background-color: #ffffff;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            height: fit-content;
        }
        .profile-header {
            padding: 1.5rem;
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            position: relative;
        }
        .profile-icon {
            width: 3rem;
            height: 3rem;
            background-color: #a1a1a1;
            border-radius: 9999px;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        }
        .profile-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 9999px;
        }
        .profile-icon i {
            color: #ffffff;
            font-size: 1.125rem;
        }
        .greeting {
            color: #6b7280;
            font-size: 0.875rem;
        }
        .username {
            color: #1f2937;
            font-weight: 600;
        }
        .menu {
            padding-top: 0;
            padding-bottom: 0;
        }
        .menu-list {
            margin: 0;
        }
        .menu-item {
            border-bottom: 1px solid #f3f4f6;
        }
        .menu-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: #4b5563;
            font-size: 0.875rem;
        }
        .menu-link:hover {
            background-color: #f9fafb;
        }
        .menu-link.active {
            background-color: #eff6ff;
            color: #2563eb;
        }
        .menu-icon {
            width: 1.25rem;
            margin-right: 0.75rem;
        }
        .logout-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: #dc2626;
            font-size: 0.875rem;
        }
        .logout-link:hover {
            background-color: #fef2f2;
        }
        .main-content {
            flex: 1;
            background-color: #ffffff;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            padding: 2rem;
        }
        .section-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 1.5rem;
        }
        .form-group {
            margin-bottom: 1.25rem;
        }
        .form-label {
            font-size: 0.80rem;
            font-weight: 500;
            color: #1f2937;
            margin-bottom: 0.25rem;
        }
        .required {
            color: #ef4444;
        }
        .form-input, .form-select {
            margin-top: 0.25rem;
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #d1d5db;
            border-radius: 0.5rem;
            font-size: 0.90rem;
            transition: all 0.2s ease;
        }
        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #000000;
            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
        }
        .form-input:invalid:not(:placeholder-shown) {
            border-color: #ef4444;
        }
        .radio-group, .checkbox-group {
            display: flex;
            gap: 1rem;
            align-items: center;
            margin-top: 0.5rem;
        }
        .radio-label, .checkbox-label {
            font-size: 0.8125rem;
            color: #1f2937;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .form-radio, .form-checkbox {
            accent-color: #002fff;
            margin-right: 0.5rem;
        }
        .form-row {
            display: flex;
            gap: 2rem;
            flex-wrap: wrap;
        }
        .form-row .form-group {
            flex: 1;
            min-width: 180px;
        }
        .button-group {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.75rem;
            justify-content: flex-end;
        }
        .btn {
            width: auto;
            max-width: 30rem;
            padding: 0.80rem 1.40rem;
            border-radius: 0.25rem;
            font-size: 0.90rem;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .btn-primary {
            background-color: #000000;
            color: white;
            border: none;
        }
        .btn-primary:hover {
            background-color: #272727;
        }
        .btn-secondary {
            border: 1px solid #ffffff;
            color: #ffffff;
            background-color: gray;
        }
        .btn-secondary:hover {
            background-color: #9c9c9c;
        }
        .btn-danger {
            background-color: #ef4444;
            color: white;
        }
        .btn-danger:hover {
            background-color: #dc2626;
        }
        .add-button {
            width: auto;
            max-width: 30rem;
            border: 2px dashed #4495ff;
            color: #006eff;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            background-color: transparent;
            cursor: pointer;
            font-size: 0.90rem;
            text-align: center;
            transition: all 0.2s ease;
            display: block;
            margin-bottom: 1rem;
        }
        .add-button:hover {
            background-color: #f3f4f6;
            border-color: #0e44f5;
            color: #0e44f5;
        }
        .address-item {
            display: flex;
            align-items: flex-start;
            background-color: #f9fafb;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-bottom: 0.75rem;
            border: 1px solid #e5e7eb;
            transition: all 0.3s ease;
        }
        .address-details {
            margin-left: 0.75rem;
            flex: 1;
        }
        .address-actions {
            display: flex;
            gap: 0.5rem;
        }
        .action-button {
            color: #000000;
            text-decoration: none;
            font-size: 0.90rem;
            background: none;
            border: none;
            cursor: pointer;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            transition: all 0.2s ease;
        }
        .action-button:hover {
            background-color: #ede9fe;
        }
        .address-type-badge {
            font-size: 0.6875rem;
            padding: 0.2rem 0.5rem;
            border-radius: 0.25rem;
            margin-left: 0.5rem;
            background-color: #919191;
            color: white;
        }
        .default-badge {
            font-size: 0.6875rem;
            padding: 0.2rem 0.5rem;
            border-radius: 0.25rem;
            margin-left: 0.5rem;
            background-color: #1f2937;
            color: white;
        }
        .address-radio {
            margin-top: 0.25rem;
            accent-color: #1a29ff;
        }
        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        .modal-content {
            background-color: white;
            padding: 1.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
            width: 100%;
            max-width: 40rem;
            max-height: 90vh;
            overflow-y: auto;
        }
        .modal-overlay.modal-visible {
            display: flex;
        }
        .modal-header {
            padding-bottom: 1rem;
            margin-bottom: 1.5rem;
        }
        .modal-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1f2937;
        }
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            min-width: 250px;
            background-color: #1f2937;
            color: white;
            padding: 1rem;
            border-radius: 4px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 2000;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }
        .toast.show {
            opacity: 1;
            transform: translateY(0);
        }
        .toast.success {
            background-color: #22c55e;
        }
        .toast.error {
            background-color: #ef4444;
        }
        .bg-black-logo {
            background-color: #000000;
        }
        .gucci-style-large {
            display: flex;
            justify-content: center;
            margin: 0 auto;
            max-width: 1400px;
        }
        .gucci-style-large .letter {
            font-family: 'Times New Roman', serif;
            font-weight: 100;
            color: #ffffff;
            font-size: 15rem;
            line-height: 1;
            letter-spacing: 0.10em;
            text-transform: uppercase;
            padding: 0 0.08em;
        }
        .footer-heading {
            color: #8C8C8C;
            font-size: 0.875rem;
            font-weight: 500;
            letter-spacing: 0.05em;
            margin-bottom: 1.5rem;
            text-transform: uppercase;
        }
        .footer-link {
            color: white;
            display: block;
            font-size: 0.875rem;
            margin-bottom: 1rem;
            text-decoration: none;
            transition: color 0.3s ease;
        }
        .footer-link:hover {
            color: #8C8C8C;
            text-decoration: underline;
        }
        .error-message {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }
        .input-field {
            background-color: transparent;
            border: none;
            border-bottom: 1px solid #555;
            color: white;
            padding: 0.5rem 0;
            width: 100%;
        }
        .input-field:focus {
            border-bottom: 1px solid white;
            outline: none;
        }
        .input-button {
            background-color: transparent;
            border: none;
            color: white;
            cursor: pointer;
            position: absolute;
            right: 0;
            top: 0.5rem;
        }
        .font-playfair {
            font-family: 'Playfair Display', serif;
        }
        .dropdown-content {
            display: none;
        }
        .dropdown-content.show {
            display: block;
        }
        .hidden:not(.md\:flex) {
            display: none !important;
        }
        @media (min-width: 768px) {
            .hidden.md\:flex {
                display: flex !important;
            }
        }
        .shop-header {
            background-color: white;
            border-bottom: 1px solid var(--border-color);
            padding: 1.5rem 0;
            margin-bottom: 2rem;
        }
        .breadcrumb-item+.breadcrumb-item::before {
            content: ">";
        }
    </style>
</head>
<body class="page-body">
    <!-- Header Partial -->
    <%- include("../../views/partials/user/header") %>
    <div class="shop-header">
        <div class="max-w-7xl mx-auto px-4">
            <nav aria-label="breadcrumb">
                <ol class="flex space-x-2 text-sm">
                    <li><a href="/" class="text-blue-600 hover:underline">Home</a></li>
                    <li><a href="/shop" class="text-blue-600 hover:underline"><span class="mx-2 text-black">></span>Shop</a></li>
                    <li class="flex items-center"><span class="mx-2">></span><span class="text-gray-500">Order</span></li>
                </ol>
            </nav>
        </div>
    </div>
    <div class="containeer">
        <div class="sidebar">
            <div class="profile-header">
                <div class="profile-icon">
                    <% if (user.image) { %>
                        <img src="/Uploads/userProfileimages/<%= user.image %>" alt="Profile Image" class="profile-image">
                    <% } else { %>
                        <i class="fas fa-user" style="color: #ffffff; font-size: 1.125rem;"></i>
                    <% } %>
                </div>
                <div>
                    <div class="greeting">Hello,</div>
                    <div class="username"><%= user.name %></div>
                </div>
            </div>
            <nav class="menu">
                <ul class="menu-list">
                    <li class="menu-item">
                        <a href="/profile" class="menu-link">
                            <i class="fas fa-user menu-icon"></i>
                            Profile Information
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/orders" class="menu-link">
                            <i class="fas fa-box menu-icon"></i>
                            My orders
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/address" class="menu-link active">
                            <i class="fas fa-home menu-icon"></i>
                            Manage Addresses
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/wallet" class="menu-link">
                            <i class="fas fa-wallet menu-icon"></i>
                            My Wallet
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/wishlist" class="menu-link">
                            <i class="fas fa-heart menu-icon"></i>
                            My Wishlist
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/referals" class="menu-link">
                            <i class="fas fa-users menu-icon"></i>
                            Refer Friends
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/changepassword" class="menu-link">
                            <i class="fas fa-lock menu-icon"></i>
                            Change Password
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/logout" class="logout-link">
                            <i class="fas fa-sign-out-alt menu-icon"></i>
                            Log out
                        </a>
                    </li>
                </ul>
            </nav>
        </div>

        <!-- Main Content (Updated UI for Manage Addresses Section) -->
        <div class="main-content">
            <h2 class="section-title">Manage Addresses</h2>
            <button class="add-button" onclick="openAddAddressModal()">+ Add New Address</button>
            <div id="addressList">
                <% if (user.addresses && user.addresses.length > 0) { %>
                    <% user.addresses.forEach((address, index) => { %>
                        <div class="address-item" data-id="<%= address._id %>">
                            <input type="radio" name="address" id="address<%= index %>" class="address-radio" <%= address.isDefault ? 'checked' : '' %>>
                            <div class="address-details">
                                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.25rem;">
                                    <div>
                                        <span style="font-weight: 600; font-size: 0.9375rem; color: #1f2937;"><%= address.fullName %></span>
                                        <span class="address-type-badge"><%= address.addressType.toUpperCase() %></span>
                                        <% if (address.isDefault) { %>
                                            <span class="default-badge">Default</span>
                                        <% } %>
                                    </div>
                                    <div class="address-actions">
                                        <button class="action-button" onclick="openEditAddressModal('<%= address._id %>', '<%= address.fullName %>', '<%= address.phone %>', '<%= address.flat %>', '<%= address.area %>', '<%= address.pincode %>', '<%= address.landmark %>', '<%= address.city %>', '<%= address.state %>', '<%= address.addressType %>', '<%= address.isDefault %>')">Edit</button>
                                        <button class="action-button" onclick="openDeleteAddressModal('<%= address._id %>')">Delete</button>
                                    </div>
                                </div>
                                <p style="color: #4b5563; font-size: 1rem; margin: 0.2rem 0;"><%= address.flat %>, <%= address.area %>, <%= address.landmark ? address.landmark + ',' : '' %> <%= address.city %>, <%= address.state %></p>
                                <p style="color: #4b5563; font-size: 1rem; margin: 0.2rem 0;">PIN: <%= address.pincode %></p>
                                <p style="color: #4b5563; font-size: 1rem; margin: 0.2rem 0;">Phone: <%= address.phone %></p>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p class="text-gray-500 italic">No addresses found. Add a new address to get started.</p>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Add/Edit Address Modal -->
    <div id="addressModal" class="modal-overlay hidden">
        <div class="modal-content">
            <h3 class="section-title" id="addressModalTitle">Add Address</h3>
            <form id="addressForm" class="form">
                <input type="hidden" id="addressId">
                <div class="form-group">
                    <label class="form-label" for="fullName">Full Name <span class="required">*</span></label>
                    <input type="text" id="fullName" class="form-input" placeholder="Enter your full name" required>
                    <span class="error-message" id="error-fullName"></span>
                </div>
                <div class="form-group">
                    <label class="form-label" for="phone">Phone Number <span class="required">*</span> (10 digit mobile number)</label>
                    <input type="tel" id="phone" class="form-input" placeholder="10 digit mobile number" required pattern="\d{10}" title="Please enter a 10-digit mobile number">
                    <span class="error-message" id="error-phone"></span>
                </div>
                <div class="form-group">
                    <label class="form-label" for="flat">Flat, House no., Building, Company <span class="required">*</span></label>
                    <input type="text" id="flat" class="form-input" placeholder="Enter house details" required>
                    <span class="error-message" id="error-flat"></span>
                </div>
                <div class="form-group">
                    <label class="form-label" for="area">Area, Street, Sector, Village <span class="required">*</span></label>
                    <input type="text" id="area" class="form-input" placeholder="Enter area details" required>
                    <span class="error-message" id="error-area"></span>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="pincode">Pincode <span class="required">*</span> (6 digits [0-9] PIN code)</label>
                        <input type="text" id="pincode" class="form-input" placeholder="6 digits [0-9] PIN code" required pattern="\d{6}" title="Please enter a 6-digit PIN code">
                        <span class="error-message" id="error-pincode"></span>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="landmark">Landmark (optional)</label>
                        <input type="text" id="landmark" class="form-input" placeholder="e.g., near Apollo Hospital">
                        <span class="error-message" id="error-landmark"></span>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="city">City/Town <span class="required">*</span></label>
                        <input type="text" id="city" class="form-input" placeholder="Enter city/town" required>
                        <span class="error-message" id="error-city"></span>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="state">State <span class="required">*</span></label>
                        <select id="state" class="form-select" required>
                            <option value="">Select your state</option>
                            <option value="Andhra Pradesh">Andhra Pradesh</option>
                            <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                            <option value="Assam">Assam</option>
                            <option value="Bihar">Bihar</option>
                            <option value="Chhattisgarh">Chhattisgarh</option>
                            <option value="Goa">Goa</option>
                            <option value="Gujarat">Gujarat</option>
                            <option value="Haryana">Haryana</option>
                            <option value="Himachal Pradesh">Himachal Pradesh</option>
                            <option value="Jharkhand">Jharkhand</option>
                            <option value="Karnataka">Karnataka</option>
                            <option value="Kerala">Kerala</option>
                            <option value="Madhya Pradesh">Madhya Pradesh</option>
                            <option value="Maharashtra">Maharashtra</option>
                            <option value="Manipur">Manipur</option>
                            <option value="Meghalaya">Meghalaya</option>
                            <option value="Mizoram">Mizoram</option>
                            <option value="Nagaland">Nagaland</option>
                            <option value="Odisha">Odisha</option>
                            <option value="Punjab">Punjab</option>
                            <option value="Rajasthan">Rajasthan</option>
                            <option value="Sikkim">Sikkim</option>
                            <option value="Tamil Nadu">Tamil Nadu</option>
                            <option value="Telangana">Telangana</option>
                            <option value="Tripura">Tripura</option>
                            <option value="Uttar Pradesh">Uttar Pradesh</option>
                            <option value="Uttarakhand">Uttarakhand</option>
                            <option value="West Bengal">West Bengal</option>
                            <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                            <option value="Chandigarh">Chandigarh</option>
                            <option value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and Daman and Diu</option>
                            <option value="Delhi">Delhi</option>
                            <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                            <option value="Ladakh">Ladakh</option>
                            <option value="Lakshadweep">Lakshadweep</option>
                            <option value="Puducherry">Puducherry</option>
                        </select>
                        <span class="error-message" id="error-state"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">Address Type</label>
                    <div class="radio-group">
                        <label class="radio-label">
                            <input type="radio" name="addressType" value="Home" class="form-radio" required> Home
                        </label>
                        <label class="radio-label">
                            <input type="radio" name="addressType" value="Work" class="form-radio"> Work
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="checkbox-group">
                        <label class="checkbox-label">
                            <input type="checkbox" id="isDefault" class="form-checkbox"> Make this my default address
                        </label>
                    </div>
                </div>
                <div class="button-group">
                    <button type="button" class="btn btn-secondary" onclick="closeAddressModal()">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Address</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Delete Address Confirmation Modal -->
    <div id="deleteAddressModal" class="modal-overlay hidden">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Confirm Deletion</h3>
            </div>
            <p class="modal-message">Are you sure you want to delete this address?</p>
            <div class="button-group">
                <button type="button" class="btn btn-secondary" onclick="closeDeleteAddressModal()">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDeleteAddress()">Confirm</button>
            </div>
        </div>
    </div>

    <!-- Toast Container -->
    <div id="toastContainer"></div>

    <!-- Footer Partial -->
    <%- include("../../views/partials/user/footer") %>

    <script>
        let currentAddressId = '';

        function showToast(message, type = 'success') {
            const toastContainer = document.getElementById('toastContainer');
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            toastContainer.appendChild(toast);
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    toast.remove();
                }, 300);
            }, 3000);
        }

        function openAddAddressModal() {
            document.getElementById('addressModalTitle').textContent = 'Add Address';
            document.getElementById('addressId').value = '';
            document.getElementById('fullName').value = '';
            document.getElementById('phone').value = '';
            document.getElementById('flat').value = '';
            document.getElementById('area').value = '';
            document.getElementById('pincode').value = '';
            document.getElementById('landmark').value = '';
            document.getElementById('city').value = '';
            document.getElementById('state').value = '';
            document.querySelector('input[name="addressType"][value="Home"]').checked = true;
            document.getElementById('isDefault').checked = false;
            document.getElementById('addressModal').classList.remove('hidden');
            document.getElementById('addressModal').classList.add('modal-visible');
            document.getElementById('fullName').focus();
            ['fullName', 'phone', 'flat', 'area', 'pincode', 'landmark', 'city', 'state'].forEach(id => {
                const errorEl = document.getElementById(`error-${id}`);
                if (errorEl) {
                    errorEl.textContent = '';
                    errorEl.style.display = 'none';
                }
            });
        }

        function openEditAddressModal(id, fullName, phone, flat, area, pincode, landmark, city, state, addressType, isDefault) {
            document.getElementById('addressModalTitle').textContent = 'Edit Address';
            document.getElementById('addressId').value = id;
            document.getElementById('fullName').value = fullName;
            document.getElementById('phone').value = phone;
            document.getElementById('flat').value = flat;
            document.getElementById('area').value = area;
            document.getElementById('pincode').value = pincode;
            document.getElementById('landmark').value = landmark || '';
            document.getElementById('city').value = city;
            document.getElementById('state').value = state;
            document.querySelector(`input[name="addressType"][value="${addressType}"]`).checked = true;
            document.getElementById('isDefault').checked = isDefault === 'true';
            document.getElementById('addressModal').classList.remove('hidden');
            document.getElementById('addressModal').classList.add('modal-visible');
            document.getElementById('fullName').focus();
            ['fullName', 'phone', 'flat', 'area', 'pincode', 'landmark', 'city', 'state'].forEach(id => {
                const errorEl = document.getElementById(`error-${id}`);
                if (errorEl) {
                    errorEl.textContent = '';
                    errorEl.style.display = 'none';
                }
            });
        }

        function closeAddressModal() {
            document.getElementById('addressModal').classList.add('hidden');
            document.getElementById('addressModal').classList.remove('modal-visible');
            ['fullName', 'phone', 'flat', 'area', 'pincode', 'landmark', 'city', 'state'].forEach(id => {
                const errorEl = document.getElementById(`error-${id}`);
                if (errorEl) {
                    errorEl.textContent = '';
                    errorEl.style.display = 'none';
                }
            });
        }

        function openDeleteAddressModal(id) {
            currentAddressId = id;
            document.getElementById('deleteAddressModal').classList.remove('hidden');
            document.getElementById('deleteAddressModal').classList.add('modal-visible');
        }

        function closeDeleteAddressModal() {
            document.getElementById('deleteAddressModal').classList.add('hidden');
            document.getElementById('deleteAddressModal').classList.remove('modal-visible');
            currentAddressId = '';
        }

        function confirmDeleteAddress() {
            fetch(`/address/delete/${currentAddressId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    showToast('Address deleted successfully', 'success');
                    document.querySelector(`.address-item[data-id="${currentAddressId}"]`).remove();
                    if (!document.querySelector('.address-item')) {
                        document.getElementById('addressList').innerHTML = '<p class="text-gray-500 italic">No addresses found. Add a new address to get started.</p>';
                    }
                } else {
                    showToast(data.message || 'Failed to delete address', 'error');
                }
                closeDeleteAddressModal();
            })
            .catch(err => {
                console.error('Delete address error:', err);
                showToast('Failed to delete address', 'error');
                closeDeleteAddressModal();
            });
        }

        function validateAddressForm() {
            let isValid = true;

            function setError(id, message) {
                const errorEl = document.getElementById(`error-${id}`);
                if (errorEl) {
                    errorEl.textContent = message;
                    errorEl.classList.add('text-red-500', 'text-sm');
                    errorEl.style.display = 'block';
                }
                isValid = false;
            }

            function clearError(id) {
                const errorEl = document.getElementById(`error-${id}`);
                if (errorEl) {
                    errorEl.textContent = '';
                    errorEl.style.display = 'none';
                }
            }

            ['fullName', 'phone', 'flat', 'area', 'pincode', 'landmark', 'city', 'state'].forEach(clearError);

            const fullName = document.getElementById('fullName').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const flat = document.getElementById('flat').value.trim();
            const area = document.getElementById('area').value.trim();
            const pincode = document.getElementById('pincode').value.trim();
            const landmark = document.getElementById('landmark').value.trim();
            const city = document.getElementById('city').value.trim();
            const state = document.getElementById('state').value;
            const addressType = document.querySelector('input[name="addressType"]:checked');

            if (!fullName) {
                setError('fullName', 'Full Name is required');
            } else if (fullName.length < 2) {
                setError('fullName', 'Full Name must be at least 2 characters long');
            } else if (!/^[a-zA-Z\s.]+$/.test(fullName)) {
                setError('fullName', 'Full Name can only contain letters, spaces, and periods');
            }

            if (!phone) {
                setError('phone', 'Phone number is required');
            } else if (!/^\d{10}$/.test(phone)) {
                setError('phone', 'Enter a valid 10-digit mobile number');
            }

            if (!flat) {
                setError('flat', 'Flat/House number is required');
            } else if (flat.length < 2) {
                setError('flat', 'Flat/House number must be at least 2 characters');
            }

            if (!area) {
                setError('area', 'Area/Street is required');
            } else if (area.length < 3) {
                setError('area', 'Area/Street must be at least 3 characters');
            }

            if (!pincode) {
                setError('pincode', 'Pincode is required');
            } else if (!/^\d{6}$/.test(pincode)) {
                setError('pincode', 'Enter a valid 6-digit PIN code');
            }

            if (!city) {
                setError('city', 'City is required');
            } else if (city.length < 2) {
                setError('city', 'City must be at least 2 characters');
            } else if (!/^[a-zA-Z\s]+$/.test(city)) {
                setError('city', 'City can only contain letters and spaces');
            }

            if (!state) {
                setError('state', 'Please select a state');
            }

            if (!addressType) {
                showToast('Please select an address type', 'error');
                isValid = false;
            }

            if (landmark && landmark.length < 3) {
                setError('landmark', 'Landmark must be at least 3 characters if provided');
            }

            return isValid;
        }

        document.getElementById('addressForm').addEventListener('submit', function(e) {
            e.preventDefault();

            if (!validateAddressForm()) {
                showToast('Please fix the errors in the form', 'error');
                return;
            }

            const id = document.getElementById('addressId').value;
            const fullName = document.getElementById('fullName').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const flat = document.getElementById('flat').value.trim();
            const area = document.getElementById('area').value.trim();
            const pincode = document.getElementById('pincode').value.trim();
            const landmark = document.getElementById('landmark').value.trim();
            const city = document.getElementById('city').value.trim();
            const state = document.getElementById('state').value;
            const addressType = document.querySelector('input[name="addressType"]:checked').value;
            const isDefault = document.getElementById('isDefault').checked;

            const addressData = { fullName, phone, flat, area, pincode, landmark, city, state, addressType, isDefault };
            const method = id ? 'PUT' : 'POST';
            const url = id ? `/address/update/${id}` : '/address/add';

            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(addressData)
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    showToast(id ? 'Address updated successfully' : 'Address added successfully', 'success');
                    location.reload();
                } else {
                    showToast(data.message || (id ? 'Failed to update address' : 'Failed to add address'), 'error');
                }
                closeAddressModal();
            })
            .catch(err => {
                console.error('Address save error:', err);
                showToast(id ? 'Failed to update address' : 'Failed to add address', 'error');
                closeAddressModal();
            });
        });

        document.getElementById('addressModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeAddressModal();
            }
        });

        document.getElementById('deleteAddressModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeDeleteAddressModal();
            }
        });

        window.addEventListener('click', function(event) {
            const dropdowns = document.querySelectorAll('.dropdown-content');
            dropdowns.forEach(dropdown => {
                if (dropdown.classList.contains('show') && !event.target.closest('.dropdown')) {
                    dropdown.classList.remove('show');
                }
            });
        });

        function toggleDropdown(dropdownId) {
            event.stopPropagation();
            const dropdowns = document.querySelectorAll('.dropdown-content');
            dropdowns.forEach(dropdown => {
                if (dropdown.id !== dropdownId && dropdown.classList.contains('show')) {
                    dropdown.classList.remove('show');
                }
            });
            document.getElementById(dropdownId).classList.toggle('show');
        }

        function toggleMobileMenu() {
            console.log('Mobile menu toggled');
        }
    </script>
</body>
</html>