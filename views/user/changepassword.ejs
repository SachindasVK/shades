<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password - SHADES</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .page-body {
            background-color: #ffffff;
        }
        .container {
            max-width: 95%;
            margin-left: auto;
            margin-right: auto;
            display: flex;
            padding: 1px;
        }
        .sidebar {
            width: 20rem;
            background-color: #ffffff;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            height: fit-content;
        }
        .profile-header {
            padding: 1.5rem;
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            position: relative;
        }
        .profile-icon {
            width: 3rem;
            height: 3rem;
            background-color: #a1a1a1;
            border-radius: 9999px;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        }
        .profile-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 9999px;
        }
        .profile-icon i {
            color: #ffffff;
            font-size: 1.125rem;
        }
        .greeting {
            color: #6b7280;
            font-size: 0.875rem;
        }
        .username {
            color: #1f2937;
            font-weight: 600;
        }
        .menu {
            padding-top: 0;
            padding-bottom: 0;
        }
        .menu-list {
            margin: 0;
        }
        .menu-item {
            border-bottom: 1px solid #f3f4f6;
        }
        .menu-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: #000000;
            font-size: 0.875rem;
            text-decoration: none;
            transition: background-color 0.2s ease;
        }
        .menu-link:hover {
            background-color: #f9fafb;
        }
        .menu-link.active {
            background-color: #eff6ff;
            color: #2563eb;
        }
        .menu-icon {
            width: 1.25rem;
            margin-right: 0.75rem;
        }
        .logout-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: #dc2626;
            font-size: 0.875rem;
            text-decoration: none;
            transition: background-color 0.2s ease;
        }
        .logout-link:hover {
            background-color: #fef2f2;
        }
        .main-content {
            flex: 1;
            background-color: #ffffff;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            padding: 2rem;
        }
        .section-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 1.5rem;
        }
        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }
        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #374151;
        }
        .form-input {
            width: 100%;
            padding: 0.625rem;
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            font-size: 1rem;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }
        .form-input:focus {
            outline: none;
            border-color: #2563eb;
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }
        .form-input.error {
            border-color: #ef4444;
        }
        .form-input.success {
            border-color: #22c55e;
        }
        .password-input-container {
            position: relative;
        }
        .password-toggle {
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #6b7280;
            cursor: pointer;
            padding: 0.25rem;
            transition: color 0.2s ease;
        }
        .password-toggle:hover {
            color: #374151;
        }
        .password-match-indicator {
            margin-top: 0.5rem;
            padding: 0.5rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            display: none;
        }
        .match-success {
            background-color: #f0fdf4;
            color: #16a34a;
            border: 1px solid #bbf7d0;
        }
        .match-error {
            background-color: #fef2f2;
            color: #dc2626;
            border: 1px solid #fecaca;
        }
        .error-message {
            margin-top: 0.25rem;
            font-size: 0.875rem;
        }
        .button-group {
            display: flex;
            justify-content: flex-end;
            margin-top: 2rem;
        }
        .btn {
            padding: 0.625rem 1.5rem;
            border: none;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        .btn-primary {
            background-color: #000000;
            color: white;
        }
        .btn-primary:hover:not(:disabled) {
            background-color: #333333;
        }
        .btn-primary:disabled .loading-spinner {
            display: inline-block;
        }
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            min-width: 300px;
            max-width: 500px;
            background-color: #1f2937;
            color: white;
            padding: 1rem;
            border-radius: 0.5rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            z-index: 2000;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }
        .toast.show {
            опция: 1;
            transform: translateY(0);
        }
        .toast.success {
            background-color: #16a34a;
        }
        .toast.error {
            background-color: #dc2626;
        }
        .toast-content {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        .toast-icon {
            font-size: 1.125rem;
        }
        .loading-spinner {
            width: 1rem;
            height: 1rem;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            display: none;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .font-playfair {
            font-family: 'Playfair Display', serif;
        }
        .shop-header {
            background-color: white;
            padding: 1.5rem 0;
        }
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
                gap: 1rem;
                padding: 0.5rem;
            }
            .sidebar {
                width: 100%;
            }
            .main-content {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body class="page-body">
    <%- include("../../views/partials/user/header") %>
    <div class="shop-header">
        <div class="max-w-7xl mx-auto px-4">
            <nav aria-label="breadcrumb">
                <ol class="flex space-x-2 text-sm">
                    <li><a href="/" class="text-blue-600 hover:underline">Home</a></li>
                    <li><a href="/shop" class="text-blue-600 hover:underline"><span class="mx-2 text-black">></span>Shop</a></li>
                    <li class="flex items-center"><span class="mx-2">></span><span class="text-gray-500">Change Password</span></li>
                </ol>
            </nav>
        </div>
    </div>
    <div class="container">
        <div class="sidebar">
            <div class="profile-header">
                <div class="profile-icon">
                    <% if (user.image) { %>
                        <img src="/Uploads/userProfileimages/<%= user.image %>" alt="Profile Image" class="profile-image">
                    <% } else { %>
                        <i class="fas fa-user" style="color: #ffffff; font-size: 1.125rem;"></i>
                    <% } %>
                </div>
                <div>
                    <div class="greeting">Hello,</div>
                    <div class="username"><%= user.name %></div>
                </div>
            </div>
            <nav class="menu">
                <ul class="menu-list">
                    <li class在天
                        <a href="/profile" class="menu-link">
                            <i class="fas fa-user menu-icon"></i>
                            Profile Information
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/orders" class="menu-link">
                            <i class="fas fa-box menu-icon"></i>
                            My Orders
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/address" class="menu-link">
                            <i class="fas fa-home menu-icon"></i>
                            Manage Addresses
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/wallet" class="menu-link">
                            <i class="fas fa-wallet menu-icon"></i>
                            My Wallet
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/wishlist" class="menu-link">
                            <i class="fas fa-heart menu-icon"></i>
                            My Wishlist
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/referrals" class="menu-link">
                            <i class="fas fa-users menu-icon"></i>
                            Refer Friends
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/changepassword" class="menu-link active">
                            <i class="fas fa-lock menu-icon"></i>
                            Change Password
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="/logout" class="logout-link">
                            <i class="fas fa-sign-out-alt menu-icon"></i>
                            Log Out
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="main-content">
            <h2 class="section-title">
                <i class="fas fa-lock mr-2 text-gray-700"></i> Change Password
            </h2>
            <form id="changePasswordForm">
                <div class="form-group">
                    <label class="form-label" for="currentPassword">Current Password</label>
                    <div class="password-input-container">
                        <input type="password" id="currentPassword" class="form-input" placeholder="Enter your current password" required aria-describedby="errorCurrent">
                        <div id="errorCurrent" class="error-message text-sm text-red-500 mt-1"></div>
                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('currentPassword')">
                            <i class="fas fa-eye" id="currentPasswordToggleIcon"></i>
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label" for="newPassword">New Password</label>
                    <div class="password-input-container">
                        <input type="password" id="newPassword" class="form-input" placeholder="Enter your new password" required aria-describedby="errorNew">
                        <div id="errorNew" class="error-message text-sm text-red-500 mt-1"></div>
                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('newPassword')">
                            <i class="fas fa-eye" id="newPasswordToggleIcon"></i>
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label" for="confirmNewPassword">Confirm New Password</label>
                    <div class="password-input-container">
                        <input type="password" id="confirmNewPassword" class="form-input" placeholder="Confirm your new password" required aria-describedby="errorConfirm passwordMatch">
                        <div id="errorConfirm" class="error-message text-sm text-red-500 mt-1"></div>
                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('confirmNewPassword')">
                            <i class="fas fa-eye" id="confirmNewPasswordToggleIcon"></i>
                        </button>
                    </div>
                    <div id="passwordMatch" class="password-match-indicator"></div>
                </div>
                <div class="button-group">
                    <button type="submit" id="submitButton" class="btn btn-primary">
                        <span id="submitText">Change Password</span>
                        <span class="loading-spinner"></span>
                    </button>
                </div>
            </form>
        </div>
    </div>
    <div id="toastContainer"></div>
    <%- include("../../views/partials/user/footer") %>
    <script>
        function showToast(message, type = 'info') {
            const toastContainer = document.getElementById('toastContainer');
            const toastId = 'toast-' + Date.now();
            const toast = document.createElement('div');
            toast.id = toastId;
            toast.className = `toast ${type}`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            toast.innerHTML = `
                <div class="toast-content">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} toast-icon"></i>
                    <span>${message}</span>
                    <button type="button" style="margin-left: 12px; background: none; border: none; color: white; font-size: 16px; cursor: pointer;" data-toast-id="${toastId}">
                        ×
                    </button>
                </div>
            `;
            toastContainer.appendChild(toast);
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            const closeButton = toast.querySelector(`[data-toast-id="${toastId}"]`);
            closeButton.addEventListener('click', () => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            });
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        function togglePasswordVisibility(inputId) {
            const input = document.getElementById(inputId);
            const icon = document.getElementById(inputId + 'ToggleIcon');
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        function checkPasswordMatch() {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmNewPassword').value;
            const matchIndicator = document.getElementById('passwordMatch');
            const confirmInput = document.getElementById('confirmNewPassword');
            if (confirmPassword.length > 0) {
                matchIndicator.style.display = 'flex';
                if (newPassword === confirmPassword) {
                    matchIndicator.className = 'password-match-indicator match-success';
                    matchIndicator.innerHTML = `
                        <i class="fas fa-check"></i>
                        <span>Passwords match</span>
                    `;
                    confirmInput.classList.remove('error');
                    confirmInput.classList.add('success');
                } else {
                    matchIndicator.className = 'password-match-indicator match-error';
                    matchIndicator.innerHTML = `
                        <i class="fas fa-times"></i>
                        <span>Passwords do not match</span>
                    `;
                    confirmInput.classList.remove('success');
                    confirmInput.classList.add('error');
                }
            } else {
                matchIndicator.style.display = 'none';
                confirmInput.classList.remove('error', 'success');
            }
        }

        function validateChangePasswordForm() {
            const currentPassword = document.getElementById('currentPassword').value.trim();
            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmNewPassword = document.getElementById('confirmNewPassword').value.trim();
            const errorCurrent = document.getElementById('errorCurrent');
            const errorNew = document.getElementById('errorNew');
            const errorConfirm = document.getElementById('errorConfirm');
            const currentInput = document.getElementById('currentPassword');
            const newInput = document.getElementById('newPassword');
            const confirmInput = document.getElementById('confirmNewPassword');
            let isValid = true;
            errorCurrent.textContent = '';
            errorNew.textContent = '';
            errorConfirm.textContent = '';
            currentInput.classList.remove('error', 'success');
            newInput.classList.remove('error', 'success');
            confirmInput.classList.remove('error', 'success');
            const passwordRegex = /^(?=.*[A-Za-z])(?=.*[^A-Za-z0-9]).{8,}$/;
            if (!currentPassword) {
                errorCurrent.textContent = 'Current password is required';
                currentInput.classList.add('error');
                isValid = false;
            }
            if (!newPassword) {
                errorNew.textContent = 'New password is required';
                newInput.classList.add('error');
                isValid = false;
            } else if (!passwordRegex.test(newPassword)) {
                errorNew.textContent = 'Password must be at least 8 characters with at least one letter and one special character';
                newInput.classList.add('error');
                isValid = false;
            } else if (currentPassword === newPassword) {
                errorNew.textContent = 'New password must be different from current password';
                newInput.classList.add('error');
                isValid = false;
            }
            if (!confirmNewPassword) {
                errorConfirm.textContent = 'Please confirm your new password';
                confirmInput.classList.add('error');
                isValid = false;
            } else if (newPassword !== confirmNewPassword) {
                errorConfirm.textContent = 'Passwords do not match';
                confirmInput.classList.add('error');
                isValid = false;
            }
            return isValid;
        }

        async function handleFormSubmission(e) {
            e.preventDefault();
            const submitButton = document.getElementById('submitButton');
            const submitText = document.getElementById('submitText');
            submitButton.disabled = true;
            submitText.textContent = 'Changing...';
            try {
                const isValid = validateChangePasswordForm();
                if (!isValid) {
                    submitButton.disabled = false;
                    submitText.textContent = 'Change Password';
                    return;
                }
                const currentPassword = document.getElementById('currentPassword').value.trim();
                const newPassword = document.getElementById('newPassword').value.trim();
                const response = await fetch('/changepassword', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ currentPassword, newPassword })
                });
                const data = await response.json();
                if (data.success) {
                    showToast('Password changed successfully!', 'success');
                    document.getElementById('changePasswordForm').reset();
                    document.getElementById('passwordMatch').style.display = 'none';
                    document.querySelectorAll('.form-input').forEach(input => input.classList.remove('error', 'success'));
                } else {
                    const message = response.status === 401 ? 'Incorrect current password' : data.message || 'Failed to change password';
                    showToast(message, 'error');
                }
            } catch (error) {
                console.error('Change password error:', error);
                showToast('Network error. Please check your connection and try again.', 'error');
            } finally {
                submitButton.disabled = false;
                submitText.textContent = 'Change Password';
            }
        }

        function setupEventListeners() {
            const confirmPasswordInput = document.getElementById('confirmNewPassword');
            const newPasswordInput = document.getElementById('newPassword');
            const form = document.getElementById('changePasswordForm');
            confirmPasswordInput.addEventListener('input', checkPasswordMatch);
            newPasswordInput.addEventListener('input', checkPasswordMatch);
            form.addEventListener('submit', handleFormSubmission);
        }

        document.addEventListener('DOMContentLoaded', setupEventListeners);
    </script>
</body>
</html>