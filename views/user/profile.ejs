<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - Shades Store</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            min-height: 100vh;
            background-color: #f3f4f6;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .header {
            background-color: #ffffff;
            border-bottom: 1px solid #d1d5db;
            padding: 1rem 1.5rem;
        }

        .header-container {
            max-width: 80rem;
            margin: 0 auto;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .header-title {
            font-family: 'Times New Roman', Times, serif;
            font-size: 1.875rem;
            font-weight: 700;
            color: #000000;
            text-align: center;
            flex-grow: 1;
        }

        .logout-button {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background-color: #000000;
            color: #ffffff;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            transition: all 300ms;
            border: none;
            cursor: pointer;
            text-decoration: none;
        }

        .logout-button:hover {
            background-color: #1f2937;
        }

        .main-container {
            max-width: 80rem;
            margin: 0 auto;
            padding: 2rem 1.5rem;
        }

        .profile-card {
            background-color: #ffffff;
            border-radius: 1rem;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .profile-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1.5rem;
        }

        @media (min-width: 768px) {
            .profile-header {
                flex-direction: row;
                align-items: flex-start;
            }
        }

        .profile-image-container {
            position: relative;
            cursor: pointer;
        }

        .profile-image {
            width: 8rem;
            height: 8rem;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #000000;
        }

        .camera-icon {
            position: absolute;
            bottom: 0;
            right: 0;
            background-color: #000000;
            border-radius: 50%;
            padding: 0.5rem;
            color: #ffffff;
            font-size: 0.875rem;
        }

        .profile-info {
            text-align: center;
            flex: 1;
        }

        @media (min-width: 768px) {
            .profile-info {
                text-align: left;
            }
        }

        .profile-name {
            font-family: 'Times New Roman', Times, serif;
            font-size: 1.875rem;
            font-weight: 700;
            margin-bottom: 1rem;
            color: #000000;
        }

        .info-container {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            color: #4b5563;
            margin-bottom: 0.5rem;
        }

        .profile-buttons {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            min-width: 150px;
        }

        .edit-button, .password-button {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            transition: all 300ms;
            cursor: pointer;
            border: none;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .edit-button {
            background-color: #000000;
            color: #ffffff;
        }

        .edit-button:hover {
            background-color: #1f2937;
        }

        .password-button {
            background-color: #ffffff;
            color: #000000;
            border: 1px solid #000000;
        }

        .password-button:hover {
            background-color: #f3f4f6;
        }

        .grid-container {
            display: grid;
            gap: 2rem;
        }

        @media (min-width: 1024px) {
            .grid-container {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        .section-card {
            background-color: #ffffff;
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .section-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1.5rem;
        }

        .section-title {
            font-size: 1.25rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            color: #000000;
        }

        .add-button {
            background-color: #000000;
            color: #ffffff;
            padding: 0.5rem;
            border-radius: 0.5rem;
            transition: all 300ms;
            border: none;
            cursor: pointer;
            width: 2.5rem;
            height: 2.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .add-button:hover {
            background-color: #1f2937;
        }

        .address-list, .orders-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .address-card, .order-card {
            background-color: #f9fafb;
            border-radius: 0.5rem;
            padding: 1rem;
            border: 1px solid #e5e7eb;
        }

        .empty-state {
            text-align: center;
            padding: 2rem;
            color: #6b7280;
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.5rem;
        }

        .order-id {
            font-weight: 600;
            color: #000000;
            font-size: 0.875rem;
        }

        .order-status {
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            rounded: 0.25rem;
            font-weight: 500;
        }

        .status-delivered { background-color: #dcfce7; color: #16a34a; }
        .status-processing { background-color: #dbeafe; color: #2563eb; }
        .status-pending { background-color: #fef3c7; color: #d97706; }
        .status-cancelled { background-color: #fee2e2; color: #dc2626; }

        /* Modal Styles */
        .modal {
            position: fixed;
            inset: 0;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 50;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

        .modal.show {
            display: flex;
        }

        .modal-content {
            background-color: #ffffff;
            border-radius: 1rem;
            padding: 2rem;
            width: 100%;
            max-width: 28rem;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1.5rem;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #000000;
        }

        .close-button {
            color: #4b5563;
            font-size: 1.25rem;
            cursor: pointer;
            background: none;
            border: none;
            padding: 0.25rem;
        }

        .close-button:hover {
            color: #000000;
        }

        .form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-label {
            font-size: 0.875rem;
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: #000000;
        }

        .form-input {
            width: 100%;
            background-color: #f9fafb;
            border: 1px solid #d1d5db;
            border-radius: 0.5rem;
            padding: 0.75rem 1rem;
            transition: border-color 200ms;
        }

        .form-input:focus {
            outline: none;
            border-color: #000000;
            box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
        }

        .form-buttons {
            display: flex;
            gap: 0.75rem;
            padding-top: 1rem;
        }

        .save-button, .cancel-modal-button {
            flex: 1;
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            font-weight: 500;
            transition: all 300ms;
            cursor: pointer;
            border: none;
        }

        .save-button {
            background-color: #000000;
            color: #ffffff;
        }

        .save-button:hover {
            background-color: #1f2937;
        }

        .cancel-modal-button {
            background-color: #e5e7eb;
            color: #000000;
        }

        .cancel-modal-button:hover {
            background-color: #d1d5db;
        }

        .file-input {
            display: none;
        }

        .loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .success-message, .error-message {
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            margin-bottom: 1rem;
            font-size: 0.875rem;
        }

        .success-message {
            background-color: #dcfce7;
            color: #16a34a;
            border: 1px solid #bbf7d0;
        }

        .error-message {
            background-color: #fee2e2;
            color: #dc2626;
            border: 1px solid #fecaca;
        }
    </style>
</head>

<body>

    <%- include("../../views/partials/user/header") %>
    <!-- Header -->
    <div class="header">
        <div class="header-container">
            <h1 class="header-title">My Profile</h1>
            <a href="/logout" class="logout-button">
                <i class="fas fa-sign-out-alt"></i> Logout
            </a>
        </div>
    </div>

    <div class="main-container">
        <!-- Profile Header -->
        <div class="profile-card">
            <div class="profile-header">
                <div class="profile-image-container" onclick="triggerImageUpload()">
                    <img id="profileImage" src="/uploads/userProfileimages/<%= user.image || 'default.png' %>" alt="Profile" class="profile-image" />
                    <div class="camera-icon">
                        <i class="fas fa-camera"></i>
                    </div>
                </div>
                <div class="profile-info">
                    <h2 id="userName" class="profile-name"><%= user.name || 'N/A' %></h2>
                    <div class="info-container">
                        <i class="fas fa-envelope"></i>
                        <span id="userEmail"><%= user.email || 'N/A' %></span>
                    </div>
                    <div class="info-container">
                        <i class="fas fa-phone"></i>
                        <span id="userPhone"><%= user.phone || 'Not provided' %></span>
                    </div>
                </div>
                <div class="profile-buttons">
                    <button onclick="editProfile()" class="edit-button">
                        <i class="fas fa-edit"></i>
                        <span>Edit Profile</span>
                    </button>
                    <button onclick="changePassword()" class="password-button">
                        <i class="fas fa-lock"></i>
                        <span>Change Password</span>
                    </button>
                </div>
            </div>
        </div>

        <div class="grid-container">
            <!-- Addresses Section -->
            <div class="section-card">
                <div class="section-header">
                    <h3 class="section-title">
                        <i class="fas fa-map-marker-alt"></i>
                        Addresses
                    </h3>
                    <button class="add-button" onclick="addAddress()">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
                <div id="addressList" class="address-list">
                    <% if (user.addresses && user.addresses.length > 0) { %>
                        <% user.addresses.forEach((address, index) => { %>
                            <div class="address-card">
                                <p><%= address %></p>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="empty-state">
                            <i class="fas fa-map-marker-alt"></i>
                            <p>No addresses added yet</p>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Orders Section -->
            <div class="section-card">
                <div class="section-header">
                    <h3 class="section-title">
                        <i class="fas fa-box"></i>
                        Recent Orders
                    </h3>
                </div>
                <div id="ordersList" class="orders-list">
                    <% if (user.orderHistory && user.orderHistory.length > 0) { %>
                        <% user.orderHistory.slice(0, 5).forEach(order => { %>
                            <div class="order-card">
                                <div class="order-header">
                                    <div>
                                        <p class="order-id">Order #<%= order._id.toString().slice(-8) %></p>
                                    </div>
                                    <span class="order-status status-<%= order.status.toLowerCase() %>">
                                        <%= order.status %>
                                    </span>
                                </div>
                                <p style="color: #6b7280; font-size: 0.875rem;">
                                    <%= new Date(order.createdAt || order.orderDate).toLocaleDateString() %>
                                </p>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="empty-state">
                            <i class="fas fa-box"></i>
                            <p>No orders yet</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Profile Modal -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Edit Profile</h3>
                <button onclick="closeModal()" class="close-button">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div id="modalMessage"></div>
            <form id="editForm" class="form" enctype="multipart/form-data">
                <div class="form-group">
                    <label class="form-label">Profile Image</label>
                    <input type="file" id="imageInput" name="image" accept="image/*" class="form-input">
                </div>
                <div class="form-group">
                    <label class="form-label">Name</label>
                    <input type="text" id="editName" name="name" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Email</label>
                    <input type="email" id="editEmail" name="email" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Phone</label>
                    <input type="tel" id="editPhone" name="phone" class="form-input">
                </div>
                <div class="form-buttons">
                    <button type="submit" class="save-button">Save Changes</button>
                    <button type="button" onclick="closeModal()" class="cancel-modal-button">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Hidden file input for image upload -->
    <input type="file" id="hiddenImageInput" class="file-input" accept="image/*">

    <script>
        // Get user data from server
        const userData = {
            id: '<%= user._id %>',
            name: '<%= user.name || "" %>',
            email: '<%= user.email || "" %>',
            phone: '<%= user.phone || "" %>'
        };

        function triggerImageUpload() {
            document.getElementById('hiddenImageInput').click();
        }

        function editProfile() {
            document.getElementById('editName').value = userData.name;
            document.getElementById('editEmail').value = userData.email;
            document.getElementById('editPhone').value = userData.phone;
            document.getElementById('modalMessage').innerHTML = '';
            document.getElementById('editModal').classList.add('show');
        }

        function closeModal() {
            document.getElementById('editModal').classList.remove('show');
            document.getElementById('editForm').reset();
            document.getElementById('modalMessage').innerHTML = '';
        }

        function changePassword() {
            // Implement change password functionality
            alert('Change password functionality will be implemented');
        }

        function addAddress() {
            // Implement add address functionality
            alert('Add address functionality will be implemented');
        }

        function showMessage(message, type = 'success') {
            const messageDiv = document.getElementById('modalMessage');
            messageDiv.innerHTML = `<div class="${type}-message">${message}</div>`;
            
            if (type === 'success') {
                setTimeout(() => {
                    closeModal();
                    location.reload(); // Refresh to show updated data
                }, 1500);
            }
        }

        // Handle profile image upload (direct upload)
        document.getElementById('hiddenImageInput').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const formData = new FormData();
                formData.append('image', file);
                
                // Show loading state
                document.body.classList.add('loading');
                
                fetch(`/edit-profile/${userData.id}`, {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    document.body.classList.remove('loading');
                    if (data.success) {
                        // Update the profile image
                        const timestamp = new Date().getTime();
                        document.getElementById('profileImage').src = `/uploads/userProfileimages/${file.name}?t=${timestamp}`;
                        alert('Profile image updated successfully!');
                    } else {
                        alert('Error updating profile image: ' + data.message);
                    }
                })
                .catch(error => {
                    document.body.classList.remove('loading');
                    console.error('Error:', error);
                    alert('Error updating profile image');
                });
            }
        });

        // Handle form submission
        document.getElementById('editForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            
            // Show loading state
            const submitButton = this.querySelector('.save-button');
            const originalText = submitButton.textContent;
            submitButton.textContent = 'Saving...';
            submitButton.disabled = true;
            
            fetch(`/edit-profile/${userData.id}`, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                submitButton.textContent = originalText;
                submitButton.disabled = false;
                
                if (data.success) {
                    // Update userData and UI
                    userData.name = formData.get('name');
                    userData.email = formData.get('email');
                    userData.phone = formData.get('phone');
                    
                    document.getElementById('userName').textContent = userData.name;
                    document.getElementById('userEmail').textContent = userData.email;
                    document.getElementById('userPhone').textContent = userData.phone || 'Not provided';
                    
                    showMessage('Profile updated successfully!', 'success');
                } else {
                    showMessage('Error: ' + data.message, 'error');
                }
            })
            .catch(error => {
                submitButton.textContent = originalText;
                submitButton.disabled = false;
                console.error('Error:', error);
                showMessage('An error occurred while updating profile', 'error');
            });
        });

        // Close modal when clicking outside
        document.getElementById('editModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });
    </script>
    <%- include("../../views/partials/user/footer") %>
</body>
</html>