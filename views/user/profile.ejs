<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>SHADES - Profile</title>
  <script defer src="/script/script.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <link rel="icon" href="favicon/favicon.ico" type="ico">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap" rel="stylesheet" />
  <style>
    :root {
      --light-bg: #f5f5f5;
      --text-color: #333;
      --primary-color: #191a1d;
    }
    
    body {
      font-family: "Inter", sans-serif;
      background-color: var(--light-bg);
      color: var(--text-color);
      line-height: 1.6;
    }
    .page-body {
      background-color: #ffffff;
    }
    .container {
      max-width: 95%;
      margin-left: auto;
      margin-right: auto;
      padding: 0.5rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    .sidebar {
      width: 100%;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      height: fit-content;
      display: none;
    }
    .sidebar.active {
      display: block;
    }
    .sidebar-toggle {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0.5rem;
      background-color: var(--primary-color);
      color: white;
      border-radius: 0.25rem;
      cursor: pointer;
      font-size: 0.9rem;
      touch-action: manipulation;
    }
    .profile-header {
      padding: 0.75rem;
      border-bottom: 1px solid #e5e7eb;
      display: flex;
      align-items: center;
      gap: 0.4rem;
    }
    .profile-icon {
      width: 2rem;
      height: 2rem;
      background-color: #a1a1a1;
      border-radius: 9999px;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }
    .profile-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 9999px;
    }
    .profile-icon i {
      color: #ffffff;
      font-size: 0.9rem;
    }
    .greeting,
    .username {
      font-size: 0.75rem;
    }
    .username {
      color: #1f2937;
      font-weight: 600;
    }
    .greeting {
      color: #6b7280;
    }
    .menu {
      padding: 0;
    }
    .menu-list {
      margin: 0;
    }
    .menu-item {
      border-bottom: 1px solid #f3f4f6;
    }
    .menu-link {
      display: flex;
      align-items: center;
      padding: 0.6rem 0.8rem;
      color: #000000;
      font-size: 0.75rem;
      text-decoration: none;
      transition: background-color 0.2s ease;
      touch-action: manipulation;
    }
    .menu-link:hover {
      background-color: #f9fafb;
    }
    .menu-link.active {
      background-color: #eff6ff;
      color: var(--primary-color);
    }
    .menu-icon {
      width: 0.9rem;
      margin-right: 0.4rem;
    }
    .logout-link {
      display: flex;
      align-items: center;
      padding: 0.6rem 0.8rem;
      color: #dc2626;
      font-size: 0.75rem;
      text-decoration: none;
      transition: background-color 0.2s ease;
      touch-action: manipulation;
    }
    .logout-link:hover {
      background-color: #fef2f2;
    }
    .main-content {
      flex: 1;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      padding: 1rem;
    }
    .section-title {
      font-size: 0.9rem;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 0.75rem;
      display: flex;
      align-items: center;
      gap: 0.4rem;
    }
    .profile-container {
      width: 4rem;
      height: 4rem;
      border-radius: 50%;
      background-color: #e5e7eb;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      overflow: hidden;
      margin: 0 auto 0.5rem;
    }
    .profile-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 50%;
    }
    .default-icon {
      font-size: 1.5rem;
      color: #9ca3af;
    }
 .profile-camera {
  position: absolute;
  bottom: 4px; /* Slightly increased for better positioning */
  right: 4px; /* Slightly increased for better positioning */
  background: #ffffff;
  border-radius: 50%;
  cursor: pointer;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px; /* Explicit width */
  height: 24px; /* Explicit height */
  transition: background-color 0.2s ease;
  z-index: 10;
}

.profile-camera i {
  font-size: 14px; /* Adjusted for visibility */
  color: #333;
}

/* Responsive adjustments */
@media (min-width: 768px) {
  .profile-camera {
    width: 30px; /* Slightly larger for medium screens */
    height: 30px;
    bottom: 6px;
    right: 6px;
  }
  .profile-camera i {
    font-size: 16px;
  }
}

@media (max-width: 479px) {
  .profile-camera {
    width: 20px; /* Smaller for mobile */
    height: 20px;
    bottom: 2px;
    right: 2px;
  }
  .profile-camera i {
    font-size: 12px;
  }
}

    .image-action-button {
      display: inline-block;
      border-radius: 9999px;
      padding: 0.3rem 0.6rem;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      cursor: pointer;
      font-size: 0.75rem;
      font-weight: 500;
      color: #000000;
      text-align: center;
      transition: background-color 0.2s ease;
      touch-action: manipulation;
    }
    .image-action-button:hover {
      background-color: #f3f4f6;
    }
    .info-item {
      padding: 0.5rem 0;
      border-bottom: 1px solid #e5e7eb;
    }
    .field-content {
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 0.4rem;
    }
    .field-label {
      font-weight: 600;
      color: #374151;
      font-size: 0.85rem;
      margin-bottom: 0.2rem;
    }
    .field-value,
    .field-value-empty,
    .address-main {
      color: #111827;
      font-size: 0.8rem;
    }
    .field-value-empty {
      color: #9ca3af;
      font-style: italic;
    }
    .edit-icon {
      font-size: 0.75rem;
      color: #6b7280;
      cursor: pointer;
      transition: color 0.2s;
    }
    .edit-icon:hover {
      color: #1f2937;
    }
    .action-button {
      color: #6b7280;
      font-size: 0.75rem;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 0.2rem;
      background: none;
      border: none;
      cursor: pointer;
      padding: 0;
    }
    .address-display {
      display: flex;
      flex-direction: column;
      gap: 0.2rem;
      margin-bottom: 0.5rem;
    }
    .address-type-badge {
      display: inline-block;
      background-color: #dbeafe;
      color: #1e3a8a;
      padding: 0.15rem 0.3rem;
      border-radius: 0.25rem;
      font-size: 0.65rem;
      font-weight: 500;
      text-transform: uppercase;
    }
    .address-actions {
      margin-top: 0.2rem;
    }
    .manage-address-link {
      display: inline-flex;
      align-items: center;
      gap: 0.2rem;
      color: var(--primary-color);
      text-decoration: none;
      font-size: 0.75rem;
      font-weight: 500;
      padding: 0.2rem 0.4rem;
      border: 1px solid #e5e7eb;
      border-radius: 0.25rem;
      transition: all 0.2s ease;
      touch-action: manipulation;
    }
    .manage-address-link:hover {
      background-color: #eff6ff;
      border-color: var(--primary-color);
    }
    .manage-address-link i {
      font-size: 0.75rem;
    }
    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.6);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
    }
    .modal-content {
      background: white;
      padding: 0.75rem;
      border-radius: 8px;
      width: 95%;
      max-width: 350px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
      max-height: 80vh;
      overflow-y: auto;
    }
    .modal-header {
      margin-bottom: 0.5rem;
      display: flex;
      align-items: center;
      gap: 0.4rem;
    }
    .modal-title {
      font-size: 1.125rem;
      font-weight: 600;
      color: #1f2937;
    }
    .modal-message {
      font-size: 0.85rem;
      color: #374151;
      margin-bottom: 0.5rem;
    }
    .form-group {
      margin-bottom: 0.5rem;
    }
    .form-label {
      display: block;
      margin-bottom: 0.2rem;
      font-weight: 500;
      font-size: 0.85rem;
      color: #374151;
    }
    .form-input {
      width: 100%;
      padding: 0.3rem;
      border: 1px solid #d1d5db;
      border-radius: 4px;
      font-size: 0.85rem;
    }
    .form-input:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }
    .button-group {
      display: flex;
      gap: 0.4rem;
      justify-content: flex-end;
      margin-top: 0.5rem;
    }
    .btn {
      padding: 0.3rem 0.6rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 0.75rem;
      font-weight: 500;
      touch-action: manipulation;
    }
    .btn-primary {
      background-color: var(--primary-color);
      color: white;
    }
    .btn-primary:hover {
      background-color: #1d4ed8;
    }
    .btn-secondary {
      background-color: #6b7280;
      color: white;
    }
    .btn-secondary:hover {
      background-color: #4b5563;
    }
    .btn-danger {
      background-color: #ef4444;
      color: white;
    }
    .btn-danger:hover {
      background-color: #dc2626;
    }
    .toast-container {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 9999;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    .toast {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background-color: #2563eb;
      border-left: 4px solid #2563eb;
      color: white;
      padding: 8px 16px;
      border-radius: 5px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      max-width: 300px;
      width: 100%;
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.3s ease, transform 0.3s ease;
    }
    .toast.show {
      opacity: 1;
      transform: translateY(0);
    }
    .toast.success {
      background-color: #15803d;
      border-left-color: #15803d;
    }
    .toast.error {
      background-color: #dc2626;
      border-left-color: #dc2626;
    }
    @media (min-width: 768px) {
      .container {
        flex-direction: row;
        padding: 1rem;
        gap: 1rem;
      }
      .sidebar {
        width: 20rem;
        display: block;
      }
      .sidebar-toggle {
        display: none;
      }
      .main-content {
        padding: 1.5rem;
      }
      .section-title {
        font-size: 1.125rem;
        margin-bottom: 1.25rem;
        gap: 0.5rem;
      }
      .profile-container {
        width: 7rem;
        height: 7rem;
      }
      .default-icon {
        font-size: 2.5rem;
      }
      .profile-camera {
        padding: 5px;
      }
      .profile-camera i {
        font-size: 14px;
      }
      .image-action-button {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
      }
      .info-item {
        padding: 1rem 0;
      }
      .field-content {
        gap: 0.5rem;
      }
      .field-label {
        font-size: 0.95rem;
        margin-bottom: 0.25rem;
      }
      .field-value,
      .field-value-empty,
      .address-main {
        font-size: 0.9rem;
      }
      .edit-icon {
        font-size: 0.8rem;
      }
      .action-button {
        font-size: 0.8rem;
        gap: 0.25rem;
      }
      .address-display {
        gap: 0.25rem;
        margin-bottom: 0.75rem;
      }
      .address-type-badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
      }
      .address-actions {
        margin-top: 0.25rem;
      }
      .manage-address-link {
        font-size: 0.875rem;
        padding: 0.375rem 0.75rem;
      }
      .manage-address-link i {
        font-size: 0.875rem;
      }
      .modal-content {
        padding: 1.5rem;
        max-width: 500px;
      }
      .modal-header {
        margin-bottom: 0.75rem;
        gap: 0.5rem;
      }
      .modal-title {
        font-size: 1.5rem;
      }
      .modal-message {
        font-size: 1rem;
        margin-bottom: 0.75rem;
      }
      .form-group {
        margin-bottom: 0.75rem;
      }
      .form-label {
        font-size: 1rem;
        margin-bottom: 0.25rem;
      }
      .form-input {
        padding: 0.5rem;
        font-size: 1rem;
      }
      .button-group {
        gap: 0.75rem;
        margin-top: 0.75rem;
      }
      .btn {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
      }
      .profile-header {
        padding: 1.25rem;
        gap: 0.75rem;
      }
      .profile-icon {
        width: 3rem;
        height: 3rem;
      }
      .profile-icon i {
        font-size: 1.125rem;
      }
      .greeting,
      .username {
        font-size: 0.875rem;
      }
      .menu-link,
      .logout-link {
        padding: 1rem 1.25rem;
        font-size: 0.875rem;
      }
      .menu-icon {
        width: 1.25rem;
        margin-right: 0.75rem;
      }
    }
    @media (min-width: 1024px) {
      .sidebar {
        width: 20rem;
      }
    }
    @media (max-width: 479px) {
      .section-title {
        font-size: 0.85rem;
      }
      .profile-container {
        width: 3.5rem;
        height: 3.5rem;
      }
      .default-icon {
        font-size: 1.25rem;
      }
      .profile-camera {
        padding: 3px;
      }
      .profile-camera i {
        font-size: 10px;
      }
      .image-action-button {
        padding: 0.20rem 0.5rem;
        font-size: 0.6rem;
      }
      .info-item {
        padding: 0.4rem 0;
      }
      .field-content {
        gap: 0.3rem;
      }
      .field-label {
        font-size: 0.8rem;
        margin-bottom: 0.15rem;
      }
      .field-value,
      .field-value-empty,
      .address-main {
        font-size: 0.75rem;
      }
      .edit-icon {
        font-size: 0.7rem;
      }
      .action-button {
        font-size: 0.7rem;
        gap: 0.15rem;
      }
      .address-display {
        gap: 0.15rem;
        margin-bottom: 0.4rem;
      }
      .address-type-badge {
        font-size: 0.6rem;
        padding: 0.1rem 0.25rem;
      }
      .address-actions {
        margin-top: 0.15rem;
      }
      .manage-address-link {
        font-size: 0.7rem;
        padding: 0.15rem 0.3rem;
      }
      .manage-address-link i {
        font-size: 0.7rem;
      }
      .modal-content {
        padding: 0.5rem;
        max-width: 320px;
      }
      .modal-header {
        margin-bottom: 0.4rem;
        gap: 0.3rem;
      }
      .modal-title {
        font-size: 1rem;
      }
      .modal-message {
        font-size: 0.8rem;
        margin-bottom: 0.4rem;
      }
      .form-group {
        margin-bottom: 0.4rem;
      }
      .form-label {
        font-size: 0.8rem;
        margin-bottom: 0.15rem;
      }
      .form-input {
        padding: 0.25rem;
        font-size: 0.8rem;
      }
      .button-group {
        gap: 0.3rem;
        margin-top: 0.4rem;
      }
      .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.7rem;
      }
    }
  </style>
</head>
<body class="page-body">
  <%- include("../../views/partials/user/header") %>
  <div class="container">
    <button class="sidebar-toggle md:hidden" onclick="toggleSidebar()">
      <i class="fas fa-bars mr-2"></i> Menu
    </button>
    <div class="sidebar" id="sidebar">
      <div class="profile-header">
        <div class="profile-icon">
          <% if (user.image) { %>
            <img src="<%= user.image %>" alt="Profile Image" class="profile-image"
              onerror="this.src='https://via.placeholder.com/80?text=Profile'" />
          <% } else { %>
            <i class="fas fa-user"></i>
          <% } %>
        </div>
        <div>
          <div class="greeting">Hello,</div>
          <div class="username"><%= user.name %></div>
        </div>
      </div>
      <nav class="menu">
        <ul class="menu-list">
          <li class="menu-item">
            <a href="/profile" class="menu-link active">
              <i class="fas fa-user menu-icon"></i> Profile Information
            </a>
          </li>
          <li class="menu-item">
            <a href="/orders" class="menu-link">
              <i class="fas fa-box menu-icon"></i> My Orders
            </a>
          </li>
          <li class="menu-item">
            <a href="/address" class="menu-link">
              <i class="fas fa-home menu-icon"></i> Manage Addresses
            </a>
          </li>
          <li class="menu-item">
            <a href="/wallet" class="menu-link">
              <i class="fas fa-wallet menu-icon"></i> My Wallet
            </a>
          </li>
          <li class="menu-item">
            <a href="/wishlist" class="menu-link">
              <i class="fas fa-heart menu-icon"></i> My Wishlist
            </a>
          </li>
          <li class="menu-item">
            <a href="/referrals" class="menu-link">
              <i class="fas fa-users menu-icon"></i> Refer Friends
            </a>
          </li>
          <li class="menu-item">
            <a href="/changepassword" class="menu-link">
              <i class="fas fa-lock menu-icon"></i> Change Password
            </a>
          </li>
          <li class="menu-item">
            <a href="/logout" class="logout-link">
              <i class="fas fa-sign-out-alt menu-icon"></i> Log Out
            </a>
          </li>
        </ul>
      </nav>
    </div>
    <div class="main-content">
      <h2 class="section-title">
        <i class="fas fa-address-card mr-2 text-blue-600"></i> Account Information
      </h2>
      <div style="display: flex; flex-direction: column; align-items: center">
        <div class="profile-container">
          <% if (user.image) { %>
            <img
              id="profileImage"
              src="<%= user.image %>"
              alt="Profile Image"
              class="profile-image"
              onerror="this.src='https://via.placeholder.com/80?text=Profile'"
            />
          <% } else { %>
            <i class="fas fa-user-circle w-25 h-25 text-gray-400" style="font-size: 110px;"></i>
          <% } %>
          <label for="imageUpload" class="profile-camera">
            <i class="fas fa-camera"></i>
          </label>
        </div>
        <button class="image-action-button" onclick="toggleImageAction('<%= user._id %>', <%- user.image ? true : false %>)">
          <span id="toggleText"><%= user.image ? 'Remove' : 'Upload' %></span>
        </button>
        <input
          type="file"
          id="imageUpload"
          accept="image/*"
          onchange="handleImageUpload(event)"
          style="display: none"
        />
      </div>
      <div style="border: 1px solid #e5e7eb; border-radius: 0.5rem; padding: 2rem; background-color: #ffffff;">
        <div style="display: grid; gap: 0.5rem">
          <div class="info-item" data-field="name">
            <div class="field-label">Full Name</div>
            <div class="field-content">
              <span class="field-value"><%= user.name %></span>
              <button class="action-button" onclick="editField('name', '<%= user.name %>')">
                <i class="fas fa-edit edit-icon"></i> Edit
              </button>
            </div>
          </div>
          <div class="info-item">
            <div class="field-label">Email Address</div>
            <div class="field-value"><%= user.email %></div>
          </div>
          <% if (user.phone) { %>
            <div class="info-item">
              <div class="field-label">Phone Number</div>
              <div class="field-value"><%= user.phone %></div>
            </div>
          <% } %>
          <div class="info-item">
            <div class="field-label">Joined Date</div>
            <div class="field-value">
              <%= user.createdOn.toLocaleDateString('en-GB') %>
            </div>
          </div>
          <div class="info-item">
            <div class="field-label">Default Address</div>
            <div class="address-display">
              <% if (user.defaultAddress) { %>
                <div class="address-main"><%= user.defaultAddress.complete %></div>
                <div class="address-type-badge">
                  <i class="fas fa-map-marker-alt mr-1"></i> <%= user.defaultAddress.addressType %>
                </div>
              <% } else { %>
                <div class="field-value-empty">
                  No saved address was found in your account
                </div>
              <% } %>
              <div class="address-actions">
                <a href="/address" class="manage-address-link">
                  <i class="fas fa-cog mr-1"></i> Manage Addresses
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="editModal" class="modal-overlay hidden">
    <div class="modal-content">
      <div class="modal-header">
        <i class="fas fa-user-edit text-blue-500 mr-2"></i>
        <h2 class="modal-title">Edit Profile Name</h2>
      </div>
      <form id="editForm">
        <div class="form-group">
          <label for="fieldInput" class="form-label" id="fieldLabel">Field</label>
          <input type="text" id="fieldInput" class="form-input" required />
          <input type="hidden" id="fieldName" />
        </div>
        <div class="button-group">
          <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-save mr-1"></i>Save
          </button>
        </div>
      </form>
    </div>
  </div>
 <div id="removeImageModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center hidden z-50">
  <div class="bg-white rounded-lg p-3 sm:p-4 lg:p-6 w-full max-w-[320px] sm:max-w-md">
    <div class="flex items-center mb-2 sm:mb-3 lg:mb-4">
      <i class="fas fa-user-times text-red-500 mr-2"></i>
      <h2 class="text-sm sm:text-base lg:text-lg font-semibold">Confirm Removal</h2>
    </div>
    <p class="text-xs sm:text-sm lg:text-base text-gray-700 mb-2 sm:mb-3 lg:mb-4">
      Are you sure you want to remove your profile image?
    </p>
    <div class="flex justify-end gap-2 sm:gap-3">
      <button type="button"
        class="px-2 sm:px-3 lg:px-4 py-1 sm:py-1.5 lg:py-2 bg-gray-300 text-gray-700 rounded text-xs sm:text-sm lg:text-base hover:bg-gray-400"
        onclick="closeRemoveImageModal()">Cancel</button>
      <button type="button"
        class="px-2 sm:px-3 lg:px-4 py-1 sm:py-1.5 lg:py-2 bg-red-600 text-white rounded text-xs sm:text-sm lg:text-base hover:bg-red-700 flex items-center"
        onclick="confirmRemoveImage()">
        <i class="fas fa-trash-alt mr-1"></i>Confirm
      </button>
    </div>
  </div>
</div>

  <div id="toastContainer" class="toast-container"></div>
  <%- include("../../views/partials/user/footer") %>
  <script>
    let currentEditField = "";
    let currentUserId = "";
    function toggleSidebar() {
      const sidebar = document.getElementById("sidebar");
      sidebar.classList.toggle("active");
    }
    
    function toggleImageAction(userId, hasImage) {
      if (hasImage) {
        currentUserId = userId;
        document.getElementById("removeImageModal").classList.remove("hidden");
      } else {
        const imageUploadInput = document.getElementById("imageUpload");
        if (imageUploadInput) {
          imageUploadInput.click();
        } else {
          showToast("Image upload functionality is unavailable", "error");
        }
      }
    }
    function confirmRemoveImage() {
      fetch(`/remove-profile/${currentUserId}`, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" }
      })
        .then((res) => res.json())
        .then((data) => {
          closeRemoveImageModal();
          if (data.success) {
            showToast("Profile image removed successfully", "success");
            setTimeout(() => location.reload(), 1000);
          } else {
            showToast(data.message || "Failed to remove profile image", "error");
          }
        })
        .catch((err) => {
          console.error("Error removing image:", err);
          closeRemoveImageModal();
          showToast("Something went wrong while removing the image!", "error");
        });
    }
    function closeRemoveImageModal() {
      document.getElementById("removeImageModal").classList.add("hidden");
      currentUserId = "";
    }
    function handleImageUpload(event) {
      const file = event.target.files[0];
      if (!file) {
        showToast("No file selected", "error");
        return;
      }
      const formData = new FormData();
      formData.append("image", file);
      fetch("/profile/upload", {
        method: "POST",
        body: formData
      })
        .then((res) => res.json())
        .then((data) => {
          if (data.success) {
            showToast("Profile image uploaded successfully", "success");
            setTimeout(() => location.reload(), 1000);
          } else {
            showToast(data.message || "Failed to upload profile image", "error");
          }
        })
        .catch((err) => {
          console.error("Upload error:", err);
          showToast("Failed to upload profile image.", "error");
        });
    }
    function editField(fieldName, currentValue) {
      currentEditField = fieldName;
      const modal = document.getElementById("editModal");
      const fieldLabel = document.getElementById("fieldLabel");
      const fieldInput = document.getElementById("fieldInput");
      const fieldNameInput = document.getElementById("fieldName");
      fieldLabel.textContent = fieldName.charAt(0).toUpperCase() + fieldName.slice(1);
      fieldInput.value = currentValue || "";
      fieldNameInput.value = fieldName;
      modal.classList.remove("hidden");
      fieldInput.focus();
    }
    function closeEditModal() {
      document.getElementById("editModal").classList.add("hidden");
      currentEditField = "";
    }
    document.getElementById("editForm").addEventListener("submit", async function (e) {
      e.preventDefault();
      const fieldName = document.getElementById("fieldName").value;
      const fieldValue = document.getElementById("fieldInput").value.trim();
      if (!fieldValue) {
        showToast(`Please enter a valid ${fieldName}`, "error");
        return;
      }
      try {
        const response = await fetch(`/edit-profile/<%= user._id %>`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ [fieldName]: fieldValue })
        });
        const data = await response.json();
        if (data.success) {
          const elementToUpdate = document.querySelector(`[data-field="${fieldName}"] .field-value`);
          if (elementToUpdate) elementToUpdate.textContent = fieldValue;
          closeEditModal();
          showToast(`${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} updated successfully!`, "success");
          setTimeout(() => location.reload(), 1000);
        } else {
          showToast(data.message || "Update failed", "error");
        }
      } catch (err) {
        console.error("Update error:", err);
        showToast("Server error", "error");
      }
    });
    document.getElementById("editModal").addEventListener("click", function (e) {
      if (e.target === this) closeEditModal();
    });
    document.getElementById("removeImageModal").addEventListener("click", function (e) {
      if (e.target === this) closeRemoveImageModal();
    });
    window.addEventListener("click", function (event) {
      const dropdowns = document.querySelectorAll(".dropdown-content");
      dropdowns.forEach((dropdown) => {
        if (dropdown.classList.contains("show") && !event.target.closest(".dropdown")) {
          dropdown.classList.remove("show");
        }
      });
    });
    function toggleDropdown(dropdownId) {
      event.stopPropagation();
      const dropdowns = document.querySelectorAll(".dropdown-content");
      dropdowns.forEach((dropdown) => {
        if (dropdown.id !== dropdownId && dropdown.classList.contains("show")) {
          dropdown.classList.remove("show");
        }
      });
      document.getElementById(dropdownId).classList.toggle("show");
    }
  </script>
</body>
</html>