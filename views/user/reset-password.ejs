<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SHADES - Reset Password</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
      rel="stylesheet"
    />
    <style>
        body {
            font-family: "Montserrat", sans-serif;
            background-color: #000000;
            position: relative;
            overflow: hidden;
        }
        
        .background-text {
            position: absolute;
            font-size: 25vw;
            font-weight: 700;
            opacity: 0.05;
            letter-spacing: -0.05em;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            white-space: nowrap;
            pointer-events: none;
            z-index: 0;
        }
        
        .glass-effect {
            background: rgba(0, 0, 0, 0.151);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .form-input:focus {
            border-color: #636363;
            box-shadow: 0 0 0 1px rgba(99, 102, 241, 0.2);
        }
        
        .error-message {
            color: rgb(255, 37, 37);
            font-size: 0.75rem;
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
            display: none;
        }

       
        
        .password-toggle {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #6B7280;
        }

        .server-alert {
            border-radius: 4px;
            padding: 5px;
            margin-bottom: 16px;
            font-size: 0.875rem;
        }
        
        .server-alert.error {
            background-color: rgba(255, 0, 0, 0.164);
            border: 1px solid rgba(220, 38, 38, 0.2);
            color: rgb(255, 255, 255);
        }
        
        .server-alert.success {
            background-color: rgba(5, 150, 105, 0.1);
            border: 1px solid rgba(5, 150, 105, 0.2);
            color: rgb(5, 150, 105);
        }

        .password-strength {
            height: 4px;
            border-radius: 2px;
            margin-top: 4px;
            transition: all 0.3s ease;
        }

        .password-strength-text {
            font-size: 0.7rem;
            text-align: right;
            margin-top: 2px;
            transition: all 0.3s ease;
        }
    </style>
</head>
<body class="text-white min-h-screen flex items-center justify-center p-4">
    <div class="background-text text-white">SHADES</div>
    
    <div class="glass-effect w-full max-w-md p-8 rounded-lg shadow-xl z-10 relative">
        <div class="text-center mb-8">
            <h2 class="text-3xl font-semibold text-white">Reset Password</h2>
            <div class="gradient-line my-2 mx-auto w-16"></div>
            <p class="text-sm text-white mt-2" id="reset-instructions">Enter your new password below</p>
        </div>
        
        <!-- Server-side message display -->
        <div id="server-message" class="server-alert" style="display: none;"></div>
        
        <form class="space-y-4"id="resetPasswordForm" onsubmit="return submitResetPasswordForm(event)">
            <div class="relative">
                <input 
                    type="password" 
                    placeholder="New Password" 
                    name="newPassword" 
                    id="newPassword" 
                    class="form-input w-full px-4 py-3 bg-black border border-gray-700 rounded-md focus:outline-none text-sm text-white" 
                    required
                >
                <div id="error1" class="error-message"></div>
            </div>
            
            <div class="relative">
                <input 
                    type="password" 
                    placeholder="Confirm Password" 
                    name="confirmPassword" 
                    id="confirmPassword" 
                    class="form-input w-full px-4 py-3 bg-black border border-gray-700 rounded-md focus:outline-none text-sm text-white" 
                    required
                >
                <div id="error2" class="error-message"></div>
            </div>
            
            <button 
                type="submit" 
                class="w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-500 transition duration-300 text-sm font-medium mt-6"
                id="reset-btn"
            >
                Reset Password
            </button>
        </form>
        
        <div class="text-center mt-6">
            <a href="/login" class="text-blue-500 text-sm hover:underline">Return to Login</a>
        </div>
    </div>

    <!-- jQuery and SweetAlert2 Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Password strength checker
        const passwordInput = document.getElementById('newPassword');

        // Form validation
        const resetPasswordForm = document.getElementById('resetPasswordForm');
        const confirmPassword = document.getElementById('confirmPassword');
        const error1 = document.getElementById('error1');
        const error2 = document.getElementById('error2');
        
        resetPasswordForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const newPasswordValue = passwordInput.value;
            const confirmPasswordValue = confirmPassword.value;
            const isPasswordValid = validatePassword(newPasswordValue);
            const doPasswordsMatch = validatePasswordsMatch(newPasswordValue, confirmPasswordValue);
            
            if (isPasswordValid && doPasswordsMatch) {
                submitResetPasswordForm();
            }
        });
        
        function validatePassword(password) {
            const alpha = /[A-Za-z]/;
            const digit = /\d/;
            let isValid = true;
            
            if (password.length < 8) {
                error1.style.display = 'block';
                error1.innerHTML = 'Password should contain at least 8 characters';
                isValid = false;
            } else if (!alpha.test(password) || !digit.test(password)) {
                error1.style.display = 'block';
                error1.innerHTML = 'Password should contain both letters and numbers';
                isValid = false;
            } else {
                error1.style.display = 'none';
            }
            
            return isValid;
        }
        
        function validatePasswordsMatch(password, confirmPassword) {
            if (password !== confirmPassword) {
                error2.style.display = 'block';
                error2.innerHTML = 'Passwords do not match';
                return false;
            } else {
                error2.style.display = 'none';
                return true;
            }
        }
        
        // Add blur event listeners for real-time validation
        passwordInput.addEventListener('blur', function() {
            validatePassword(this.value);
        });
        
        confirmPassword.addEventListener('blur', function() {
            validatePasswordsMatch(passwordInput.value, this.value);
        });
        
        function submitResetPasswordForm() {
            // Disable button to prevent multiple submissions
              event.preventDefault();   
            const resetBtn = document.getElementById('reset-btn');
            resetBtn.disabled = true;
            resetBtn.textContent = 'Processing...';
            
            // Get the token from URL if it exists (for email reset flow)
            const urlParams = new URLSearchParams(window.location.search);
            const token = urlParams.get('token');
            
            // Prepare data for submission
          const formData = {
    newPassword: document.getElementById('newPassword').value,
    confirmPassword: document.getElementById('confirmPassword').value,
    token: token || null
};

            
            // Submit using AJAX
            $.ajax({
                type: "POST",
                url: "/reset-password",
                data: formData,
                  xhrFields: { 
                    withCredentials: true 
                },
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Password Reset Successful',
                            text: 'Your password has been updated successfully.',
                            confirmButtonText: 'Go to Login',
                            customClass: {
                                popup: 'bg-white rounded-lg shadow-lg p-6',
                                title: 'text-2xl font-bold text-green-600',
                                content: 'text-gray-700',
                                confirmButton: 'bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600'
                            },
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/login';
                            }
                        });
                    } else {
                        showServerError(response.message || 'Failed to reset password.');
                    }
                },
                error: function(xhr) {
                    let errorMessage = 'Something went wrong. Please try again.';
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMessage = xhr.responseJSON.message;
                    }
                    showServerError(errorMessage);
                },
                complete: function() {
                    // Re-enable button
                    resetBtn.disabled = false;
                    resetBtn.textContent = 'Reset Password';
                }
            });
            return false
        }
        
        function showServerError(message) {
            const serverMessage = document.getElementById('server-message');
            serverMessage.className = 'server-alert error';
            serverMessage.style.display = 'block';
            serverMessage.textContent = message;
            
            // Scroll to top to show error message
            window.scrollTo(0, 0);
        }
    </script>
</body>
</html>