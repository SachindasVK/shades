<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHADES - Forgot Password</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" href="favicon/favicon.ico" type="ico">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link
        href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap"
        rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/auth.css">
    <style>
    .hide-section {
        display: none;
    }
</style>
</head>

<body>
    <%-include('../../views/partials/user/authHeader')%>
    <!-- Main Content -->
    <main class="main-content text-white">
        <div class="background-text text-white">SHADES</div>

        <div class="glass-effect w-full max-w-xl p-8 rounded-lg shadow-xl z-10 relative">
            <!-- Email Input Section -->
            <div id="email-section">
                <div class="text-center mb-8">
                    <h2 class="text-3xl font-semibold text-white">Forgot Password</h2>
                    <div class="gradient-line my-2 mx-auto w-16"></div>
                    <p class="text-sm text-white mt-4">
                        Enter your email address to receive a verification code
                    </p>
                </div>

                <form method="post" action="/forgot-email-valid" class="space-y-6" id="forgot-password-form">
                    <div>
                        <input type="email" placeholder="Email Address" name="email" id="email"
                            class="form-input w-full px-4 py-3 bg-black border border-gray-700 rounded-md focus:outline-none text-sm text-white"
                            required />
                        <div id="email-error" class="error-message"></div>
                    </div>

                    <button type="submit"
                        class="w-full bg-blue-500 text-white py-3 px-4 rounded-md hover:bg-blue-600 transition duration-300 text-sm font-medium mt-4"
                        id="verify-btn">
                        Send Verification Code
                    </button>
                    
                    <!-- Server message placeholder -->
                    <div id="server-message" class="bg-red-600 border border-gray-700 text-white px-2 py-0.3 rounded text-center" style="display: none;">
                        <!-- Server message would go here -->
                    </div>
                </form>

                <p class="text-center text-xs text-gray-500 mt-8">
                    Don't have an account?
                    <a href="/signup" class="text-blue-500 font-medium hover:underline">Sign up</a>
                </p>
            </div>

            <!-- Password Reset Section -->
            <div id="reset-section" class="hide-section">
                <div class="text-center mb-8">
                    <h2 class="text-3xl font-semibold text-white">Reset Password</h2>
                    <div class="gradient-line my-2 mx-auto w-16"></div>
                    <p class="text-sm text-white mt-4">
                        Create a new password for your account
                    </p>
                </div>

                <form method="post" action="/post-new-password" class="space-y-6" id="reset-password-form">
                    <div>
                        <input type="password" placeholder="New Password" name="newPass1" id="password"
                            class="form-input w-full px-4 py-3 bg-black border border-gray-700 rounded-md focus:outline-none text-sm text-white"
                            required />
                        <div id="password-error" class="error-message"></div>
                    </div>

                    <div>
                        <input type="password" placeholder="Confirm Password" name="newPass2" id="confirm-password"
                            class="form-input w-full px-4 py-3 bg-black border border-gray-700 rounded-md focus:outline-none text-sm text-white"
                            required />
                        <div id="confirm-password-error" class="error-message"></div>
                    </div>

                    <button type="submit"
                        class="w-full bg-blue-500 text-white py-3 px-4 rounded-md hover:bg-blue-600 transition duration-300 text-sm font-medium mt-4">
                        Reset Password
                    </button>
                    
                    <div id="reset-message" class="alert alert-danger mt-3 text-red-500 text-sm text-center" style="display: none;">
                        <!-- Reset message would go here -->
                    </div>
                </form>
            </div>
        </div>
    </main>
      <%-include("../../views/partials/user/footer")%>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Header dropdown functionality
        window.addEventListener('click', function (event) {
            const dropdowns = document.querySelectorAll('.dropdown-content');
            dropdowns.forEach(dropdown => {
                if (dropdown.classList.contains('show') && !event.target.closest('.dropdown')) {
                    dropdown.classList.remove('show');
                }
            });
        });

        function toggleDropdown(dropdownId) {
            event.stopPropagation();

            const dropdowns = document.querySelectorAll('.dropdown-content');
            dropdowns.forEach(dropdown => {
                if (dropdown.id !== dropdownId && dropdown.classList.contains('show')) {
                    dropdown.classList.remove('show');
                }
            });

            document.getElementById(dropdownId).classList.toggle('show');
        }

        function toggleMobileMenu() {
            console.log('Mobile menu toggled');
        }

        // Email validation
        const emailField = document.getElementById("email");
        const emailError = document.getElementById("email-error");

        if (emailField) {
            emailField.addEventListener("input", validateEmail);
        }

        function validateEmail() {
            const emailValue = emailField.value.trim();
            const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

            if (emailValue === "") {
                showError(emailError, "Please enter your email address");
                return false;
            } else if (!emailPattern.test(emailValue)) {
                showError(emailError, "Invalid email format");
                return false;
            } else {
                hideError(emailError);
                return true;
            }
        }

        function showError(element, message) {
            element.style.display = "block";
            element.textContent = message;
        }

        function hideError(element) {
            element.style.display = "none";
        }

        // OTP input handling
        const otpInputs = document.querySelectorAll(".otp-input");
        const otpHiddenField = document.getElementById("otp-hidden-field");
        
        otpInputs.forEach((input, index) => {
            input.addEventListener("input", (e) => {
                // Ensure input is numeric only
                e.target.value = e.target.value.replace(/[^0-9]/g, "");

                const value = e.target.value;
                if (value.length === 1 && index < otpInputs.length - 1) {
                    otpInputs[index + 1].focus();
                }
                
                // Update hidden field with combined OTP
                updateOtpHiddenField();
            });

            input.addEventListener("keydown", (e) => {
                if (e.key === "Backspace" && !e.target.value && index > 0) {
                    otpInputs[index - 1].focus();
                }
            });
        });
        
        function updateOtpHiddenField() {
            if (otpHiddenField) {
                const combinedOtp = Array.from(otpInputs).map(input => input.value).join("");
                otpHiddenField.value = combinedOtp;
            }
        }

        // Password validation
        const passwordField = document.getElementById("password");
        const confirmPasswordField = document.getElementById("confirm-password");
        const passwordError = document.getElementById("password-error");
        const confirmPasswordError = document.getElementById("confirm-password-error");
        const resetForm = document.getElementById("reset-password-form");

        if (passwordField && confirmPasswordField) {
            passwordField.addEventListener("input", validatePassword);
            confirmPasswordField.addEventListener("input", validateConfirmPassword);
            
            if (resetForm) {
                resetForm.addEventListener("submit", function(event) {
                    if (!validatePassword() || !validateConfirmPassword()) {
                        event.preventDefault();
                    }
                });
            }
        }

        function validatePassword() {
            if (!passwordField) return true;
            
            const passwordValue = passwordField.value;
            const alpha = /[A-Za-z]/;
            const digit = /\d/;

            if (passwordValue.length < 8) {
                showError(passwordError, "Password should contain at least 8 characters");
                return false;
            } else if (!alpha.test(passwordValue) || !digit.test(passwordValue)) {
                showError(passwordError, "Password should contain both letters and numbers");
                return false;
            } else {
                hideError(passwordError);
                return true;
            }
        }

        function validateConfirmPassword() {
            if (!passwordField || !confirmPasswordField) return true;
            
            const passwordValue = passwordField.value;
            const confirmValue = confirmPasswordField.value;

            if (passwordValue !== confirmValue) {
                showError(confirmPasswordError, "Passwords do not match");
                return false;
            } else {
                hideError(confirmPasswordError);
                return true;
            }
        }
    </script>
</body>

</html>