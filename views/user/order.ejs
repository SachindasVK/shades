<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Orders - SHADES</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script defer src="/script/script.js"></script>
 <link rel="icon" href="favicon/favicon.ico" type="ico">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap"
    rel="stylesheet" />
  <style>
    :root {
      --primary-color: #191a1d;
    }

    body {
      font-family: "Inter", sans-serif;
      background-color: #f5f5f5;
      color: #333;
    }

    .page-body {
      background-color: #ffffff;
    }

    .container {
      max-width: 95%;
      margin-left: auto;
      margin-right: auto;
      padding: 0.5rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .sidebar {
      width: 100%;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      height: fit-content;
      display: none;
    }

    .sidebar.active {
      display: block;
    }

    .sidebar-toggle {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0.5rem;
      background-color: var(--primary-color);
      color: white;
      border-radius: 0.25rem;
      cursor: pointer;
      font-size: 0.9rem;
      touch-action: manipulation;
    }

    .profile-header {
      padding: 1rem;
      border-bottom: 1px solid #e5e7eb;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .profile-icon {
      width: 2.5rem;
      height: 2.5rem;
      background-color: #a1a1a1;
      border-radius: 9999px;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .profile-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 9999px;
    }

    .profile-icon i {
      color: #ffffff;
      font-size: 1rem;
    }

    .greeting {
      color: #6b7280;
      font-size: 0.8rem;
    }

    .username {
      color: #1f2937;
      font-weight: 600;
      font-size: 0.9rem;
    }

    .menu {
      padding: 0;
    }

    .menu-list {
      margin: 0;
    }

    .menu-item {
      border-bottom: 1px solid #f3f4f6;
    }

    .menu-link {
      display: flex;
      align-items: center;
      padding: 0.8rem 1rem;
      color: #000000;
      font-size: 0.8rem;
      touch-action: manipulation;
    }

    .menu-link:hover {
      background-color: #f9fafb;
    }

    .menu-link.active {
      background-color: #eff6ff;
      color: var(--primary-color);
    }

    .menu-icon {
      width: 1rem;
      margin-right: 0.5rem;
    }

    .logout-link {
      display: flex;
      align-items: center;
      padding: 0.8rem 1rem;
      color: #dc2626;
      font-size: 0.8rem;
      touch-action: manipulation;
    }

    .logout-link:hover {
      background-color: #fef2f2;
    }

    .main-content {
      flex: 1;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      padding: 1rem;
    }

    .section-title {
      font-size: 1rem;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .filter-group {
      display: flex;
      flex-wrap: wrap;
      gap: 0.75rem;
      margin-bottom: 1rem;
    }

    .form-label {
      display: block;
      margin-bottom: 0.25rem;
      font-weight: 500;
      font-size: 0.8rem;
      color: #1f2937;
    }

    .form-select {
      width: 100%;
      max-width: 160px;
      padding: 0.4rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      font-size: 0.8rem;
      color: #1f2937;
    }

    .form-select:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    .order-item {
      background-color: #ffffff;
      border: 2px solid #e0d4f5;
      border-radius: 12px;
      padding: 0;
      margin-bottom: 1rem;
      overflow: hidden;
    }

    .order-header {
      background-color: #e4daf5;
      padding: 0.5rem 1rem;
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: center;
      gap: 0.5rem;
    }

    .order-date,
    .order-id,
    .view-link,
    .retry-payment-btn {
      font-size: 0.8rem;
      color: #1f2937;
      font-weight: 500;
    }

    .view-link {
      color: var(--primary-color);
      text-decoration: none;
      touch-action: manipulation;
    }

    .view-link:hover {
      text-decoration: underline;
    }

    .retry-payment-btn {
      color: #eb2525;
      font-weight: 500;
      background: none;
      border: none;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
      padding: 0;
      touch-action: manipulation;
    }

    .retry-payment-btn:hover {
      text-decoration: underline;
    }

    .order-content {
      padding: 0.75rem;
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .product-items {
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      gap: 0.75rem;
      flex: 1;
    }

    .product-item {
      display: flex;
      align-items: flex-start;
      gap: 0.75rem;
    }

    .product-item:last-of-type {
      border-bottom: none;
      margin-bottom: 0;
      padding-bottom: 0;
    }

    .order-image {
      width: 120px;
      height: 80px;
      object-fit: contain;
      flex-shrink: 0;
    }

    .product-info {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 0.4rem;
    }

    .product-name {
      font-weight: 600;
      font-size: 0.9rem;
      color: #1f2937;
      line-height: 1.4;
      margin-bottom: 0.25rem;
    }

    .product-details-row {
      display: flex;
      flex-wrap: wrap;
      width: max-content;
      gap: 0.75rem;
    }

    .product-detail {
      font-size: 0.8rem;
      color: #6b7280;
    }

    .order-summary {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 0.75rem;
      padding-left: 0.75rem;
      min-width: 120px;
    }

    .total-section,
    .status-section {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }

    .total-label,
    .status-label {
      font-size: 0.8rem;
      color: #6b7280;
      margin-bottom: 0.25rem;
    }

    .total-amount {
      font-size: 1rem;
      font-weight: 700;
      color: #1f2937;
    }

    .order-status {
      font-size: 0.85rem;
      font-weight: 600;
      padding: 0.2rem 0.75rem;
      border-radius: 20px;
      display: inline-block;
    }

    .order-status.pending {
      color: #d3a200;
      background-color: #ffae0028;
    }

    .order-status.confirmed {
      color: #1e40af;
      background-color: rgba(187, 197, 255, 0.39);
    }

    .order-status.shipped {
      color: #7f02c7;
      background-color: #eeb6ff23;
    }

    .order-status.delivered {
      color: green;
      background-color: rgba(169, 255, 169, 0.219);
    }

    .order-status.return_requested,
    .order-status.returned {
      color: #c27e00;
      background-color: rgba(255, 229, 181, 0.137);
    }

    .order-status.cancelled,
    .order-status.failed {
      color: red;
      background-color: rgba(255, 170, 170, 0.171);
    }

    .order-status.processing {
      color: #0369a1;
      background-color: rgba(3, 105, 161, 0.1);
    }

    .cancelled-item {
      opacity: 0.6;
      background-color: #f9fafb;
    }

    .cancel-reason {
      font-size: 0.7rem;
      color: red;
      margin-top: 0.25rem;
    }

    .pagination {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: 0.75rem;
      margin-top: 1rem;
      flex-wrap: wrap;
    }

    .pagination-btn {
      padding: 0.2rem 0.6rem;
      border: 1px solid #d1d5db;
      border-radius: 4px;
      background-color: #ffffff;
      color: #374151;
      font-size: 0.8rem;
      cursor: pointer;
      transition: background-color 0.2s ease, border-color 0.2s ease;
      touch-action: manipulation;
    }

    .pagination-btn:hover:not(.disabled) {
      background-color: #f9fafb;
      border-color: var(--primary-color);
    }

    .pagination-btn.disabled {
      color: #9ca3af;
      border-color: #d1d5db;
      cursor: not-allowed;
    }

    .pagination-info {
      font-size: 0.8rem;
      color: #374151;
    }

    .no-orders {
      text-align: center;
      padding: 2rem 0.5rem;
      color: #6b7280;
      font-size: 1rem;
    }

    .no-orders i {
      font-size: 2rem;
      margin-bottom: 0.75rem;
      color: #d1d5db;
    }

    /* Responsive Styles */
    @media (min-width: 768px) {
      .container {
        flex-direction: row;
        padding: 1rem;
        gap: 1rem;
      }

      .sidebar {
        width: 20rem;
        display: block;
      }

      .sidebar-toggle {
        display: none;
      }

      .main-content {
        padding: 1.5rem;
      }

      .section-title {
        font-size: 1.125rem;
        margin-bottom: 1.25rem;
      }

      .filter-group {
        gap: 1rem;
        margin-bottom: 1.25rem;
      }

      .form-label {
        font-size: 0.875rem;
      }

      .form-select {
        max-width: 180px;
        padding: 0.5rem;
        font-size: 0.875rem;
      }

      .order-item {
        margin-bottom: 1.25rem;
      }

      .order-header {
        padding: 0.75rem 1.25rem;
        gap: 1rem;
      }

      .order-date,
      .order-id,
      .view-link,
      .retry-payment-btn {
        font-size: 0.875rem;
      }

      .order-content {
        padding: 1rem;
        flex-direction: row;
        gap: 1rem;
      }

      .product-items {
        gap: 1rem;
      }

      .product-item {
        gap: 1rem;
      }

      .order-image {
        width: 140px;
        height: 90px;
      }

      .product-name {
        font-size: 1rem;
        margin-bottom: 0.25rem;
      }

      .product-detail {
        font-size: 0.875rem;
      }

      .order-summary {
        padding-left: 1rem;
        align-items: flex-end;
        min-width: 140px;
      }

      .total-label,
      .status-label {
        font-size: 0.875rem;
        margin-bottom: 0.25rem;
      }

      .total-amount {
        font-size: 1.125rem;
      }

      .order-status {
        font-size: 0.875rem;
        padding: 0.25rem 1rem;
      }

      .cancel-reason {
        font-size: 0.75rem;
      }

      .pagination {
        gap: 1rem;
        margin-top: 1.25rem;
      }

      .pagination-btn {
        padding: 0.25rem 0.75rem;
        font-size: 0.875rem;
      }

      .pagination-info {
        font-size: 0.875rem;
      }

      .no-orders {
        padding: 2.5rem 1rem;
        font-size: 1.1rem;
      }

      .no-orders i {
        font-size: 2.5rem;
      }

      .profile-header {
        padding: 1.25rem;
        gap: 0.75rem;
      }

      .profile-icon {
        width: 3rem;
        height: 3rem;
      }

      .profile-icon i {
        font-size: 1.125rem;
      }

      .greeting {
        font-size: 0.875rem;
      }

      .username {
        font-size: 1rem;
      }

      .menu-link,
      .logout-link {
        padding: 1rem 1.25rem;
        font-size: 0.875rem;
      }

      .menu-icon {
        width: 1.25rem;
        margin-right: 0.75rem;
      }
    }

    @media (max-width: 479px) {
      .section-title {
        font-size: 0.9rem;
      }

      .filter-group {
        gap: 0.5rem;
      }

      .form-label {
        font-size: 0.75rem;
      }

      .form-select {
        max-width: 140px;
        padding: 0.3rem;
        font-size: 0.75rem;
      }

      .order-item {
        margin-bottom: 0.75rem;
      }

      .order-header {
        padding: 0.4rem 0.75rem;
        gap: 0.4rem;
      }

      .order-date,
      .order-id,
      .view-link,
      .retry-payment-btn {
        font-size: 0.75rem;
      }

      .order-content {
        padding: 0.5rem;
        gap: 0.5rem;
      }

      .product-items {
        gap: 0.5rem;
      }

      .product-item {
        gap: 0.5rem;
      }

      .order-image {
        width: 100px;
        height: 60px;
      }

      .product-name {
        font-size: 0.85rem;
      }

      .product-detail {
        font-size: 0.75rem;
      }

      .order-summary {
        padding-left: 0.5rem;
        gap: 0.5rem;
        min-width: 100px;
      }

      .total-label,
      .status-label {
        font-size: 0.75rem;
      }

      .total-amount {
        font-size: 0.9rem;
      }

      .order-status {
        font-size: 0.8rem;
        padding: 0.15rem 0.6rem;
      }

      .cancel-reason {
        font-size: 0.65rem;
      }

      .pagination {
        gap: 0.5rem;
        margin-top: 0.75rem;
      }

      .pagination-btn {
        padding: 0.15rem 0.5rem;
        font-size: 0.75rem;
      }

      .pagination-info {
        font-size: 0.75rem;
      }

      .no-orders {
        padding: 1.5rem 0.5rem;
        font-size: 0.9rem;
      }

      .no-orders i {
        font-size: 1.5rem;
      }

      .profile-header {
        padding: 0.75rem;
      }

      .profile-icon {
        width: 2rem;
        height: 2rem;
      }

      .profile-icon i {
        font-size: 0.9rem;
      }

      .greeting,
      .username {
        font-size: 0.75rem;
      }

      .menu-link,
      .logout-link {
        padding: 0.6rem 0.8rem;
        font-size: 0.75rem;
      }

      .menu-icon {
        width: 0.9rem;
        margin-right: 0.4rem;
      }
    }
  </style>
</head>
<body class="page-body">
  <!-- Header Partial -->
  <%- include("../../views/partials/user/header") %>

  <div class="container">
    <button class="sidebar-toggle md:hidden" onclick="toggleSidebar()">
      <i class="fas fa-bars mr-2"></i> Menu
    </button>
    <div class="sidebar" id="sidebar">
      <div class="profile-header">
        <div class="profile-icon">
          <% if (user && user.image) { %>
            <img src="<%= user.image %>" alt="Profile Image" class="profile-image" 
                 onerror="this.src='https://via.placeholder.com/80?text=Profile'" />
          <% } else { %>
            <i class="fas fa-user"></i>
          <% } %>
        </div>
        <div>
          <div class="greeting">Hello,</div>
          <div class="username">
            <%= user ? user.name : 'User' %>
          </div>
        </div>
      </div>
      <nav class="menu">
        <ul class="menu-list">
          <li class="menu-item">
            <a href="/profile" class="menu-link">
              <i class="fas fa-user menu-icon"></i>
              Profile Information
            </a>
          </li>
          <li class="menu-item">
            <a href="/orders" class="menu-link active">
              <i class="fas fa-box menu-icon"></i>
              My Orders
            </a>
          </li>
          <li class="menu-item">
            <a href="/address" class="menu-link">
              <i class="fas fa-home menu-icon"></i>
              Manage Addresses
            </a>
          </li>
          <li class="menu-item">
            <a href="/wallet" class="menu-link">
              <i class="fas fa-wallet menu-icon"></i>
              My Wallet
            </a>
          </li>
          <li class="menu-item">
            <a href="/wishlist" class="menu-link">
              <i class="fas fa-heart menu-icon"></i>
              My Wishlist
            </a>
          </li>
          <li class="menu-item">
            <a href="/referrals" class="menu-link">
              <i class="fas fa-users menu-icon"></i>
              Refer Friends
            </a>
          </li>
          <li class="menu-item">
            <a href="/changepassword" class="menu-link">
              <i class="fas fa-lock menu-icon"></i>
              Change Password
            </a>
          </li>
          <li class="menu-item">
            <a href="/logout" class="logout-link">
              <i class="fas fa-sign-out-alt menu-icon"></i>
              Log out
            </a>
          </li>
        </ul>
      </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content">
      <h2 class="section-title">
        <i class="fas fa-box-open mr-2 text-black"></i>My Orders
      </h2>

      <div class="filter-group">
        <div>
          <label class="form-label" for="statusFilter">Filter by Status</label>
          <select id="statusFilter" class="form-select" onchange="applyFilters(1)">
            <option value="All">All Statuses</option>
            <option value="pending">Pending</option>
            <option value="confirmed">Confirmed</option>
            <option value="shipped">Shipped</option>
            <option value="delivered">Delivered</option>
            <option value="return_requested">Return Requested</option>
            <option value="returned">Returned</option>
            <option value="cancelled">Cancelled</option>
            <option value="failed">Failed</option>
          </select>
        </div>
        <div>
          <label class="form-label" for="timeFilter">Filter by Time</label>
          <select id="timeFilter" class="form-select" onchange="applyFilters(1)">
            <option value="All">All Time</option>
            <option value="Last30Days">Last 30 Days</option>
            <option value="Last3Months">Last 3 Months</option>
            <option value="Last6Months">Last 6 Months</option>
          </select>
        </div>
      </div>
      <div id="orderList">
        <% if (orders && orders.length > 0) { %>
          <% orders.forEach((order) => { %>
            <div class="order-item" data-id="<%= order._id %>" data-status="<%= order.status %>"
                 data-date="<%= order.createdOn %>">
              <div class="order-header">
                <div class="order-date">
                  Order-Date: <%= new Date(order.createdOn).toLocaleDateString('en-GB', { 
                    day: 'numeric', month: 'short', year: 'numeric' }) %>
                </div>
                <div class="order-id">Order Id- #<%= order.orderId %></div>
                <a href="/order/details/<%= order._id %>" class="view-link">View Order Details</a>
              </div>
              <div class="order-content">
                <div class="product-items">
                  <% if (order.orderedItems && order.orderedItems.length > 0) { %>
                    <% order.orderedItems.forEach((item) => { %>
                      <div class="product-item <%= item.status === 'cancelled' ? 'cancelled-item' : '' %>">
                        <img
                          src="<%= item.productImages && item.productImages[0] ? item.productImages[0] : 'default-image.jpg' %>"
                          alt="Product Image" class="order-image" 
                          onerror="this.src='/default-image.jpg';" />
                        <div class="product-info">
                          <div class="product-name">
                            <%= item.productName || 'Product Name' %>
                          </div>
                          <div class="product-details-row">
                            <div class="product-detail">
                              Quantity: <%= item.quantity || 1 %>
                            </div>
                            <div class="product-detail">
                              Payment Method: <%= order.paymentMethod || 'N/A' %>
                            </div>
                            <% if (item.status !== 'cancelled') { %>
                              <div class="product-detail">
                                Expected Delivery by: <%= order.expectedDelivery ? new
                                  Date(order.expectedDelivery).toLocaleDateString('en-GB', { 
                                  day: 'numeric', month: 'short', year: 'numeric' }) : 'TBD' %>
                              </div>
                            <% } %>
                          </div>
                          <% if (order.status === 'cancelled' && order.cancelReason) { %>
                            <div class="cancel-reason">
                              Cancelled: <%= order.cancelReason %>
                            </div>
                          <% } else if (item.status === 'cancelled' && item.cancelReason) { %>
                            <div class="cancel-reason">
                              Cancelled: <%= item.cancelReason %>
                            </div>
                          <% } %>
                        </div>
                      </div>
                    <% }) %>
                  <% } %>
                </div>
                <div class="order-summary">
                  <div class="total-section">
                    <div class="total-label">Total Amount</div>
                    <div class="total-amount">
                      ₹<%= order.finalAmount || order.totalAmount || 0 %>
                    </div>
                  </div>
                  <div class="status-section">
                    <div class="status-label">Order Status</div>
                    <div class="order-status <%= (order.status || '').toLowerCase() %>">
                      <%= order.status || 'Unknown' %>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="no-orders">
            <i class="fas fa-box-open"></i>
            <p>No orders found.</p>
          </div>
        <% } %>
      </div>
      <div id="pagination" class="pagination"></div>
    </div>
  </div>

  <!-- Toast Container -->
  <div id="toastContainer"></div>

  <!-- Footer Partial -->
  <%- include("../../views/partials/user/footer") %>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    let currentPage = 1;
    const ordersPerPage = 5;

    function toggleSidebar() {
      const sidebar = document.getElementById("sidebar");
      sidebar.classList.toggle("active");
    }

    document.addEventListener("DOMContentLoaded", () => {
      applyFilters(1);
    });

    async function applyFilters(page = 1) {
      const statusFilter = document.getElementById("statusFilter").value;
      const timeFilter = document.getElementById("timeFilter").value;

      try {
        const params = new URLSearchParams();
        if (statusFilter !== "All") params.append("status", statusFilter);
        if (timeFilter !== "All") params.append("timeFilter", timeFilter);
        params.append("page", page);
        params.append("limit", ordersPerPage);

        const response = await fetch(`/orders?${params}`, {
          method: "GET",
          headers: {
            Accept: "application/json",
            "X-Requested-With": "XMLHttpRequest",
          },
        });

        if (!response.ok) {
          throw new Error("Failed to fetch orders");
        }

        const data = await response.json();

        if (data.success) {
          currentPage = page;
          renderOrders(data.orders);
          updatePaginationControls(data.pagination);
          window.scrollTo({ top: 0, behavior: 'smooth' });
        } else {
          showToast("Error loading orders", "error");
          renderNoOrders();
        }
      } catch (error) {
        console.error("Filter error:", error);
        showToast("Error loading orders", "error");
        renderNoOrders();
      }
    }

    function renderOrders(orders) {
      const orderList = document.getElementById("orderList");
      orderList.innerHTML = "";

      if (!orders || orders.length === 0) {
        renderNoOrders();
        return;
      }

      orders.forEach((order) => {
        const orderElement = document.createElement("div");
        orderElement.className = "order-item";
        orderElement.setAttribute("data-id", order._id);
        orderElement.setAttribute("data-status", order.status);
        orderElement.setAttribute("data-date", order.createdOn);

        const formattedDate = new Date(order.createdOn).toLocaleDateString('en-GB', {
          day: 'numeric',
          month: 'short',
          year: 'numeric'
        });

        const expectedDelivery = order.expectedDelivery
          ? new Date(order.expectedDelivery).toLocaleDateString('en-GB', { 
            day: 'numeric', month: 'short', year: 'numeric' })
          : 'TBD';

        let actionButton = `<a href="/order/details/${order._id}" class="view-link">View Order Details</a>`;

        orderElement.innerHTML = `
          <div class="order-header">
            <div class="order-date">Order-Date: ${formattedDate}</div>
            <div class="order-id">Order Id- #${order.orderId}</div>
            ${actionButton}
          </div>
          <div class="order-content">
            <div class="product-items">
              ${order.orderedItems.map(item => `
                <div class="product-item ${item.status === 'cancelled' ? 'cancelled-item' : ''}">
                  <img src="${item.productImages && item.productImages[0] ? item.productImages[0] : 'default-image.jpg'}" 
                       alt="Product Image" class="order-image" 
                       onerror="this.src='/default-image.jpg';" />
                  <div class="product-info">
                    <div class="product-name">${item.productName || 'Product Name'}</div>
                    <div class="product-details-row">
                      <div class="product-detail">Quantity: ${item.quantity || 1}</div>
                      <div class="product-detail">Payment Method: ${order.paymentMethod || 'N/A'}</div>
                      ${item.status !== 'cancelled' ? `<div class="product-detail">Expected Delivery by: ${expectedDelivery}</div>` : ''}
                    </div>
                    ${order.status === 'cancelled' && order.cancelReason ? 
                      `<div class="cancel-reason">Cancelled: ${order.cancelReason}</div>` :
                      item.status === 'cancelled' && item.cancelReason ? 
                      `<div class="cancel-reason">Cancelled: ${item.cancelReason}</div>` : ''}
                  </div>
                </div>
              `).join('')}
            </div>
            <div class="order-summary">
              <div class="total-section">
                <div class="total-label">Total Amount</div>
                <div class="total-amount">₹${order.finalAmount || order.totalAmount || 0}</div>
              </div>
              <div class="status-section">
                <div class="status-label">Order Status</div>
                <div class="order-status ${order.status.toLowerCase()}">${order.status || 'Unknown'}</div>
              </div>
            </div>
          </div>
        `;

        orderList.appendChild(orderElement);
      });
    }

    function renderNoOrders() {
      const orderList = document.getElementById("orderList");
      orderList.innerHTML = `
        <div class="no-orders">
          <i class="fas fa-box-open"></i>
          <p>No orders found.</p>
        </div>
      `;
      document.getElementById("pagination").innerHTML = "";
    }

    function updatePaginationControls(pagination) {
      const paginationDiv = document.getElementById("pagination");
      paginationDiv.innerHTML = "";

      if (!pagination || !pagination.totalOrders) {
        return;
      }

      const totalPages = pagination.totalPages || 1;
      const totalOrders = pagination.totalOrders || 0;
      const startIndex = (currentPage - 1) * ordersPerPage + 1;
      const endIndex = Math.min(currentPage * ordersPerPage, totalOrders);

      const prevBtn = document.createElement("button");
      prevBtn.className = `pagination-btn ${currentPage === 1 ? "disabled" : ""}`;
      prevBtn.textContent = "Previous";
      prevBtn.onclick = () => {
        if (currentPage > 1) {
          applyFilters(currentPage - 1);
        }
      };
      paginationDiv.appendChild(prevBtn);

      const nextBtn = document.createElement("button");
      nextBtn.className = `pagination-btn ${currentPage >= totalPages ? "disabled" : ""}`;
      nextBtn.textContent = "Next";
      nextBtn.onclick = () => {
        if (currentPage < totalPages) {
          applyFilters(currentPage + 1);
        }
      };
      paginationDiv.appendChild(nextBtn);

      const pageInfo = document.createElement("span");
      pageInfo.className = "pagination-info";
      pageInfo.textContent = `Showing ${startIndex}-${endIndex} of ${totalOrders} orders`;
      paginationDiv.appendChild(pageInfo);
    }
  </script>
</body>
</html>