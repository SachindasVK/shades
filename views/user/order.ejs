<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Orders - SHADES</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap"
    rel="stylesheet" />

  <style>
    body {
      font-family: "Inter", sans-serif;
    }

    .page-body {
      background-color: #ffffff;
    }

    .container {
      margin-left: auto;
      margin-right: auto;
      display: flex;
      padding: 1px;
    }

    .sidebar {
      width: 20rem;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      height: fit-content;
    }

    .profile-header {
      padding: 1.5rem;
      border-bottom: 1px solid #e5e7eb;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      position: relative;
    }

    .profile-icon {
      width: 3rem;
      height: 3rem;
      background-color: #a1a1a1;
      border-radius: 9999px;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      overflow: hidden;
    }

    .profile-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 9999px;
    }

    .profile-icon i {
      color: #ffffff;
      font-size: 1.125rem;
    }

    .greeting {
      color: #6b7280;
      font-size: 0.875rem;
    }

    .username {
      color: #1f2937;
      font-weight: 600;
    }

    .menu {
      padding-top: 0;
      padding-bottom: 0;
    }

    .menu-list {
      margin: 0;
    }

    .menu-item {
      border-bottom: 1px solid #f3f4f6;
    }

    .menu-link {
      display: flex;
      align-items: center;
      padding: 1rem 1.5rem;
      color: #000000;
      font-size: 0.875rem;
    }

    .menu-link:hover {
      background-color: #f9fafb;
    }

    .menu-link.active {
      background-color: #eff6ff;
      color: #2563eb;
    }

    .menu-icon {
      width: 1.25rem;
      margin-right: 0.75rem;
    }

    .logout-link {
      display: flex;
      align-items: center;
      padding: 1rem 1.5rem;
      color: #dc2626;
      font-size: 0.875rem;
    }

    .logout-link:hover {
      background-color: #fef2f2;
    }

    .main-content {
      flex: 1;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      padding: 2rem;
    }

    .section-title {
      font-size: 1.125rem;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 1.5rem;
    }

    .filter-group {
      display: flex;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }

    .form-label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      font-size: 0.875rem;
      color: #1f2937;
    }

    .form-select {
      width: 100%;
      max-width: 200px;
      padding: 0.5rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      font-size: 0.875rem;
      color: #1f2937;
    }

    .form-select:focus {
      outline: none;
      border-color: #2563eb;
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    .order-item {
      background-color: #ffffff;
      border: 2px solid #e0d4f5;
      border-radius: 12px;
      padding: 0;
      margin-bottom: 1.5rem;
      overflow: hidden;
    }

    .order-header {
      background-color: #e4daf5;
      padding: 6px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 0;
    }

    .order-date {
      font-size: 0.875rem;
      color: #1f2937;
      font-weight: 500;
    }

    .order-id {
      font-size: 0.875rem;
      color: #1f2937;
      font-weight: 500;
    }

    .view-link {
      color: #2563eb;
      font-size: 0.875rem;
      text-decoration: none;
      font-weight: 500;
    }

    .view-link:hover {
      text-decoration: underline;
    }

    .retry-payment-btn {
      color: #eb2525;
      font-size: 0.875rem;
      font-weight: 500;
      background: none;
      border: none;
      cursor: pointer;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
      padding: 0;
    }

    .retry-payment-btn:hover {
      text-decoration: underline;
    }

    .order-content {
      padding: 10px;
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
    }

    .product-items {
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      gap: 20px;
      flex: 1;
    }

    .product-item {
      display: flex;
      align-items: flex-start;
      gap: 15px;
      width: calc(50% - 10px);
      box-sizing: border-box;
    }

    .product-item:last-of-type {
      border-bottom: none;
      margin-bottom: 0;
      padding-bottom: 0;
    }

    .order-image {
      width: 150px;
      height: 100px;
      object-fit: contain;
      flex-shrink: 0;
    }

    .product-info {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 6px;
    }

    .product-name {
      font-weight: 600;
      font-size: 1rem;
      color: #1f2937;
      line-height: 1.4;
      margin-bottom: 4px;
    }

    .product-details-row {
      display: flex;
      flex-wrap: wrap;
      width: max-content;
      gap: 1rem;
    }

    .product-detail {
      font-size: 0.875rem;
      color: #6b7280;
    }

    .order-summary {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      gap: 1rem;
      padding-left: 20px;
      min-width: 150px;
    }

    .total-section {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }

    .total-label {
      font-size: 0.875rem;
      color: #6b7280;
      margin-bottom: 4px;
    }

    .total-amount {
      font-size: 1.25rem;
      font-weight: 700;
      color: #1f2937;
    }

    .status-section {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }

    .status-label {
      font-size: 0.875rem;
      color: #6b7280;
      margin-bottom: 4px;
    }

    .order-status {
      font-size: 0.9rem;
      font-weight: 600;
      padding: 1px 15px;
      border-radius: 20px;
      display: inline-block;
    }

    .order-status.pending {
      color: #df3400;
      background-color: #ffae0028;
    }

    .order-status.confirmed {
      color: rgb(4, 0, 253);
      background-color: rgba(187, 187, 255, 0.11);
    }

    .order-status.shipped {
      color: #0284c7;
      background-color: #b6e7ff23;
    }

    .order-status.delivered {
      color: green;
      background-color: rgba(169, 255, 169, 0.219);
    }

    .order-status.return_requested {
      color: orangered;
      background-color: rgba(255, 201, 181, 0.137);
    }

  
    .order-status.cancelled {
      color: red;
      background-color: rgba(255, 170, 170, 0.171);
    }

    .order-status.failed {
      color: red;
      background-color: rgba(255, 170, 170, 0.171);
    }

    .cancelled-item {
      opacity: 0.6;
      background-color: #f9fafb;
    }

    .cancel-reason {
      font-size: 0.75rem;
      color: red;
      margin-top: 4px;
    }

    .pagination {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: 1rem;
      margin-top: 1.5rem;
    }

    .pagination-btn {
      padding: 0.25rem 0.75rem;
      border: 1px solid #d1d5db;
      border-radius: 4px;
      background-color: #ffffff;
      color: #374151;
      font-size: 0.875rem;
      cursor: pointer;
      transition: background-color 0.2s ease, border-color 0.2s ease;
    }

    .pagination-btn:hover:not(.disabled) {
      background-color: #f9fafb;
      border-color: #2563eb;
    }

    .pagination-btn.disabled {
      color: #9ca3af;
      border-color: #d1d5db;
      cursor: not-allowed;
    }

    .pagination-info {
      font-size: 0.875rem;
      color: #374151;
    }

    .no-orders {
      text-align: center;
      padding: 3rem 1rem;
      color: #6b7280;
      font-size: 1.1rem;
    }

    .order-status.processing {
      color: #0369a1;
      background-color: rgba(3, 105, 161, 0.1);
    }

    @media (max-width: 768px) {
      .order-content {
        flex-direction: column;
      }

      .product-item {
        width: 100%;
      }

      .order-summary {
        align-items: flex-start;
        padding-left: 0;
        margin-top: 1rem;
      }
    }
  </style>
</head>

<body class="page-body">
  <!-- Header Partial -->
  <%- include("../../views/partials/user/header") %>


    <div class="container">
      <div class="sidebar">
        <div class="profile-header">
          <div class="profile-icon">
            <% if (user && user.image) { %>
              <img src="/Uploads/userProfileimages/<%= user.image %>" alt="Profile Image" class="profile-image" />
              <% } else { %>
                <i class="fas fa-user" style="color: #ffffff; font-size: 1.125rem"></i>
                <% } %>
          </div>
          <div>
            <div class="greeting">Hello,</div>
            <div class="username">
              <%= user ? user.name : 'User' %>
            </div>
          </div>
        </div>
        <nav class="menu">
          <ul class="menu-list">
            <li class="menu-item">
              <a href="/profile" class="menu-link">
                <i class="fas fa-user menu-icon"></i>
                Profile Information
              </a>
            </li>
            <li class="menu-item">
              <a href="/orders" class="menu-link active">
                <i class="fas fa-box menu-icon"></i>
                My Orders
              </a>
            </li>
            <li class="menu-item">
              <a href="/address" class="menu-link">
                <i class="fas fa-home menu-icon"></i>
                Manage Addresses
              </a>
            </li>
            <li class="menu-item">
              <a href="/wallet" class="menu-link">
                <i class="fas fa-wallet menu-icon"></i>
                My Wallet
              </a>
            </li>
            <li class="menu-item">
              <a href="/wishlist" class="menu-link">
                <i class="fas fa-heart menu-icon"></i>
                My Wishlist
              </a>
            </li>
            <li class="menu-item">
              <a href="/referrals" class="menu-link">
                <i class="fas fa-users menu-icon"></i>
                Refer Friends
              </a>
            </li>
            <li class="menu-item">
              <a href="/changepassword" class="menu-link">
                <i class="fas fa-lock menu-icon"></i>
                Change Password
              </a>
            </li>
            <li class="menu-item">
              <a href="/logout" class="logout-link">
                <i class="fas fa-sign-out-alt menu-icon"></i>
                Log out
              </a>
            </li>
          </ul>
        </nav>
      </div>

      <!-- Main Content -->
      <div class="main-content">
        <h2 class="section-title">
          <i class="fas fa-box-open mr-2 text-black"></i>My Orders
        </h2>

        <div class="filter-group">
          <div>
            <label class="form-label" for="statusFilter">Filter by Status</label>
            <select id="statusFilter" class="form-select" onchange="applyFilters(1)">
              <option value="All">All Statuses</option>
              <option value="pending">Pending</option>
              <option value="confirmed">Confirmed</option>
              <option value="shipped">Shipped</option>
              <option value="delivered">Delivered</option>
                <option value="return_requested">Return requested</option>
              <option value="returned">Returned</option>
              <option value="cancelled">Cancelled</option>
              <option value="failed">Failed</option>
            </select>
          </div>
          <div>
            <label class="form-label" for="timeFilter">Filter by Time</label>
            <select id="timeFilter" class="form-select" onchange="applyFilters(1)">
              <option value="All">All Time</option>
              <option value="Last30Days">Last 30 Days</option>
              <option value="Last3Months">Last 3 Months</option>
              <option value="Last6Months">Last 6 Months</option>
            </select>
          </div>
        </div>
        <div id="orderList">
          <% if (orders && orders.length> 0) { %>
            <% orders.forEach((order)=> { %>
              <div class="order-item" data-id="<%= order._id %>" data-status="<%= order.status %>"
                data-date="<%= order.createdOn %>">
                <div class="order-header">
                  <div class="order-date">
                    Order-Date: <%= new Date(order.createdOn).toLocaleDateString('en-GB', { day: 'numeric' ,
                      month: 'short' , year: 'numeric' }) %>
                  </div>
                  <div class="order-id">Order Id- #<%= order.orderId %>
                  </div>




                  <a href="/order/details/<%= order._id %>" class="view-link">View Order Details</a>


                </div>

                <div class="order-content">
                  <div class="product-items">
                    
                    <% if (order.orderedItems && order.orderedItems.length> 0) { %>
                      <% order.orderedItems.forEach((item)=> { %>
                        <div class="product-item <%= item.status === 'cancelled' ? 'cancelled-item' : '' %>">
                          <img
                            src="/<%= item.productImages && item.productImages[0] ? item.productImages[0] : 'default-image.jpg' %>"
                            alt="Product Image" class="order-image" onerror="this.src='/default-image.jpg';" />
                          <div class="product-info">
                            <div class="product-name">
                              <%= item.productName || 'Product Name' %>
                            </div>
                            <div class="product-details-row">
                              <div class="product-detail">
                                Quantity: <%= item.quantity || 1 %>
                              </div>
                              <div class="product-detail">
                                Payment Method: <%= order.paymentMethod || 'N/A' %>
                              </div>
                              <% if (item.status !=='cancelled' ) { %>
                                <div class="product-detail">
                                  Expected Delivery by: <%= order.expectedDelivery ? new
                                    Date(order.expectedDelivery).toLocaleDateString('en-GB', { day: 'numeric' ,
                                    month: 'short' , year: 'numeric' }) : 'TBD' %>
                                </div>
                                <% } %>
                            </div>
                            
                            <% if (order.status==='cancelled' && order.cancelReason) { %>
                              <div class="cancel-reason">
                                Cancelled: <%= order.cancelReason %>
                              </div>
                              <% } else if (item.status==='cancelled' && item.cancelReason) { %>
                                <div class="cancel-reason">
                                  Cancelled: <%= item.cancelReason %>
                                </div>
                                <% } %>
                          </div>
                          
                        </div>
                        <% }) %>
                          <% } %>
                  </div>
                  <div class="order-summary">
                    <div class="total-section">
                      <div class="total-label">Total Amount</div>
                      <div class="total-amount">
                        ₹<%= order.finalAmount || order.totalAmount || 0 %>
                      </div>
                    </div>
                    <div class="status-section">
                      <div class="status-label">Order Status</div>
                      <div class="order-status <%= (order.status || '').toLowerCase() %>">
                        <%= order.status || 'Unknown' %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <% }) %>
                <% } else { %>
                  <div class="no-orders">
                    <i class="fas fa-box-open" style="font-size: 3rem; margin-bottom: 1rem; color: #d1d5db"></i>
                    <p>No orders found.</p>
                  </div>
                  <% } %>
        </div>
        <div id="pagination" class="pagination"></div>
      </div>
    </div>

    <!-- Toast Container -->
    <div id="toastContainer"></div>

    <!-- Footer Partial -->
    <%- include("../../views/partials/user/footer") %>
      <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

      <script>
        let currentPage = 1;
        const ordersPerPage = 5;
        document.addEventListener("DOMContentLoaded", () => {
          applyFilters(1);
        });
        function showToast(message, type = 'info') {
          let toastContainer = document.querySelector('.toast-container') || document.getElementById('toastContainer');
          if (!toastContainer) {
            toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container';
            toastContainer.style.position = 'fixed';
            toastContainer.style.top = '20px';
            toastContainer.style.right = '20px';
            toastContainer.style.zIndex = '9999';
            toastContainer.style.display = 'flex';
            toastContainer.style.flexDirection = 'column';
            toastContainer.style.gap = '10px';
            document.body.appendChild(toastContainer);
          }

          const toastId = 'toast-' + Date.now();
          const toast = document.createElement('div');

          let bgColor, borderColor;
          switch (type) {
            case 'success':
              bgColor = '#15803d';
              borderColor = '#15803d';
              break;
            case 'error':
              bgColor = '#dc2626';
              borderColor = '#dc2626';
              break;
            case 'info':
            default:
              bgColor = '#2563eb';
              borderColor = '#2563eb';
          }

          toast.style.cssText = `
          display: flex;
          align-items: center;
          justify-content: space-between;
          background-color: ${bgColor};
          border-left: 4px solid ${borderColor};
          color: white;
          padding: 8px 16px;
          border-radius: 5px;
          box-shadow: 0 4px 6px rgba(0,0,0,0.1);
          max-width: 400px;
          width: 100%;
          opacity: 0;
          transform: translateY(20px);
          transition: opacity 0.3s ease, transform 0.3s ease;
        `;

          toast.id = toastId;
          toast.setAttribute('role', 'alert');
          toast.setAttribute('aria-live', 'assertive');
          toast.setAttribute('aria-atomic', 'true');

          toast.innerHTML = `
          <div style="flex: 1; font-size: 14px;">${message}</div>
          <button type="button" style="margin-left: 12px; background: none; border: none; color: white; font-size: 16px; cursor: pointer;" data-toast-id="${toastId}">
            ×
          </button>
        `;

          toastContainer.appendChild(toast);

          setTimeout(() => {
            toast.style.opacity = '1';
            toast.style.transform = 'translateY(0)';
          }, 100);

          const closeButton = toast.querySelector(`[data-toast-id="${toastId}"]`);
          closeButton.addEventListener('click', () => {
            toast.style.opacity = '0';
            toast.style.transform = 'translateY(20px)';
            setTimeout(() => toast.remove(), 300);
          });

          setTimeout(() => {
            toast.style.opacity = '0';
            toast.style.transform = 'translateY(20px)';
            setTimeout(() => toast.remove(), 300);
          }, 1500);
        }



        async function applyFilters(page = 1) {
          const statusFilter = document.getElementById("statusFilter").value;
          const timeFilter = document.getElementById("timeFilter").value;

          try {
            const params = new URLSearchParams();
            if (statusFilter !== "All") params.append("status", statusFilter);
            if (timeFilter !== "All") params.append("timeFilter", timeFilter);
            params.append("page", page);
            params.append("limit", ordersPerPage);

            const response = await fetch(`/orders?${params}`, {
              method: "GET",
              headers: {
                Accept: "application/json",
                "X-Requested-With": "XMLHttpRequest",
              },
            });

            if (!response.ok) {
              throw new Error("Failed to fetch orders");
            }

            const data = await response.json();

            if (data.success) {
              currentPage = page;
              renderOrders(data.orders);
              updatePaginationControls(data.pagination);
              // Scroll to top of the page
              window.scrollTo({ top: 0, behavior: 'smooth' });
            } else {
              showToast("Error loading orders", "error");
              renderNoOrders();
            }
          } catch (error) {
            console.error("Filter error:", error);
            showToast("Error loading orders", "error");
            renderNoOrders();
          }
        }

        function renderOrders(orders) {
          const orderList = document.getElementById("orderList");
          orderList.innerHTML = "";

          if (!orders || orders.length === 0) {
            renderNoOrders();
            return;
          }

          orders.forEach((order) => {
            const orderElement = document.createElement("div");
            orderElement.className = "order-item";
            orderElement.setAttribute("data-id", order._id);
            orderElement.setAttribute("data-status", order.status);
            orderElement.setAttribute("data-date", order.createdOn);

            const formattedDate = new Date(order.createdOn).toLocaleDateString('en-GB', {
              day: 'numeric',
              month: 'short',
              year: 'numeric'
            });

            const expectedDelivery = order.expectedDelivery
              ? new Date(order.expectedDelivery).toLocaleDateString('en-GB', { day: 'numeric', month: 'short', year: 'numeric' })
              : 'TBD';

            let actionButton = '';

            actionButton = `<a href="/order/details/${order._id}" class="view-link">View Order Details</a>`;


            orderElement.innerHTML = `
            <div class="order-header">
              <div class="order-date">Order-Date: ${formattedDate}</div>
              <div class="order-id">Order Id- #${order.orderId}</div>
              ${actionButton}
            </div>
            <div class="order-content">
              <div class="product-items">
                ${order.orderedItems.map(item => `
                  <div class="product-item ${item.status === 'cancelled' ? 'cancelled-item' : ''}">
                    <img src="/${item.productImages && item.productImages[0] ? item.productImages[0] : 'default-image.jpg'}" alt="Product Image" class="order-image" onerror="this.src='/default-image.jpg';" />
                    <div class="product-info">
                      <div class="product-name">${item.productName || 'Product Name'}</div>
                      <div class="product-details-row">
                        <div class="product-detail">Quantity: ${item.quantity || 1}</div>
                        <div class="product-detail">Payment Method: ${order.paymentMethod || 'N/A'}</div>
                        ${item.status !== 'cancelled' ? `<div class="product-detail">Expected Delivery by: ${expectedDelivery}</div>` : ''}
                      </div>
                      ${order.status === 'cancelled' && order.cancelReason ? `<div class="cancel-reason">Cancelled: ${order.cancelReason}</div>` :
                item.status === 'cancelled' && item.cancelReason ? `<div class="cancel-reason">Cancelled: ${item.cancelReason}</div>` : ''}
                    </div>
                  </div>
                `).join('')}
              </div>
              <div class="order-summary">
                <div class="total-section">
                  <div class="total-label">Total Amount</div>
                  <div class="total-amount">₹${order.finalAmount || order.totalAmount || 0}</div>
                </div>
                <div class="status-section">
                  <div class="status-label">Order Status</div>
                  <div class="order-status ${order.status.toLowerCase()}">${order.status || 'Unknown'}</div>
                </div>
              </div>
            </div>
          `;

            orderList.appendChild(orderElement);
          });
        }

        function renderNoOrders() {
          const orderList = document.getElementById("orderList");
          orderList.innerHTML = `
          <div class="no-orders">
            <i class="fas fa-box-open" style="font-size: 3rem; margin-bottom: 1rem; color: #d1d5db"></i>
            <p>No orders found.</p>
          </div>
        `;
          document.getElementById("pagination").innerHTML = "";
        }

        function updatePaginationControls(pagination) {
          const paginationDiv = document.getElementById("pagination");
          paginationDiv.innerHTML = "";

          if (!pagination || !pagination.totalOrders) {
            return;
          }

          const totalPages = pagination.totalPages || 1;
          const totalOrders = pagination.totalOrders || 0;
          const startIndex = (currentPage - 1) * ordersPerPage + 1;
          const endIndex = Math.min(currentPage * ordersPerPage, totalOrders);

          // Previous Button
          const prevBtn = document.createElement("button");
          prevBtn.className = `pagination-btn ${currentPage === 1 ? "disabled" : ""}`;
          prevBtn.textContent = "Previous";
          prevBtn.onclick = () => {
            if (currentPage > 1) {
              applyFilters(currentPage - 1);
            }
          };
          paginationDiv.appendChild(prevBtn);

          // Next Button
          const nextBtn = document.createElement("button");
          nextBtn.className = `pagination-btn ${currentPage >= totalPages ? "disabled" : ""}`;
          nextBtn.textContent = "Next";
          nextBtn.onclick = () => {
            if (currentPage < totalPages) {
              applyFilters(currentPage + 1);
            }
          };
          paginationDiv.appendChild(nextBtn);

          // Page Info
          const pageInfo = document.createElement("span");
          pageInfo.className = "pagination-info";
          pageInfo.textContent = `Showing ${startIndex}-${endIndex} of ${totalOrders} orders`;
          paginationDiv.appendChild(pageInfo);
        }



      </script>
</body>

</html>