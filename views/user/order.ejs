<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Orders - SHADES</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap"
    rel="stylesheet" />
  <style>
    body {
      font-family: "Inter", sans-serif;
    }

    .page-body {
      background-color: #ffffff;
    }

    .container {
      margin-left: auto;
      margin-right: auto;
      display: flex;

      padding: 1px;
    }

    .sidebar {
      width: 20rem;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
      height: fit-content;
    }

    .profile-header {
      padding: 1.5rem;
      border-bottom: 1px solid #e5e7eb;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      position: relative;
    }

    .profile-icon {
      width: 3rem;
      height: 3rem;
      background-color: #a1a1a1;
      border-radius: 9999px;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      overflow: hidden;
    }

    .profile-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 9999px;
    }

    .profile-icon i {
      color: #ffffff;
      font-size: 1.125rem;
    }

    .greeting {
      color: #6b7280;
      font-size: 0.875rem;
    }

    .username {
      color: #1f2937;
      font-weight: 600;
    }

    .menu {
      padding-top: 0;
      padding-bottom: 0;
    }

    .menu-list {
      margin: 0;
    }

    .menu-item {
      border-bottom: 1px solid #f3f4f6;
    }

    .menu-link {
      display: flex;
      align-items: center;
      padding: 1rem 1.5rem;
      color: #4b5563;
      font-size: 0.875rem;
    }

    .menu-link:hover {
      background-color: #f9fafb;
    }

    .menu-link.active {
      background-color: #eff6ff;
      color: #2563eb;
    }

    .menu-icon {
      width: 1.25rem;
      margin-right: 0.75rem;
    }

    .logout-link {
      display: flex;
      align-items: center;
      padding: 1rem 1.5rem;
      color: #dc2626;
      font-size: 0.875rem;
    }

    .logout-link:hover {
      background-color: #fef2f2;
    }

    .main-content {
      flex: 1;
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
      padding: 2rem;
    }

    .section-title {
      font-size: 1.125rem;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 1.5rem;
    }

    .filter-group {
      display: flex;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }

    .form-label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      font-size: 0.875rem;
      color: #1f2937;
    }

    .form-select {
      width: 100%;
      max-width: 200px;
      padding: 0.5rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      font-size: 0.875rem;
      color: #1f2937;
    }

    .form-select:focus {
      outline: none;
      border-color: #2563eb;
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    /* Order Item Styles */
    .order-item {
      background-color: #ffffff;
      border: 2px solid #e0d4f5;
      border-radius: 12px;
      padding: 0;
      margin-bottom: 1.5rem;
      overflow: hidden;
    }

    .order-header {
      background-color: #e0d4f5;
      padding: 12px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 0;
    }

    .order-date {
      font-size: 0.875rem;
      color: #1f2937;
      font-weight: 500;
    }

    .order-id {
      font-size: 0.875rem;
      color: #1f2937;
      font-weight: 500;
    }

    .view-link {
      color: #2563eb;
      font-size: 0.875rem;
      text-decoration: none;
      font-weight: 500;
    }

    .view-link:hover {
      text-decoration: underline;
    }

    .order-content {
      padding: 20px;
    }

    .product-item {
      display: flex;
      align-items: flex-start;
      gap: 15px;

      border-bottom: 1px solid #f3f4f6;
    }

    .product-item:last-of-type {
      border-bottom: none;
      margin-bottom: 0;
      padding-bottom: 0;
    }

    .order-image {
      width: 150px;
      height: 100px;
      object-fit: contain;

      flex-shrink: 0;
    }

    .product-info {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 6px;
    }

    .product-name {
      font-weight: 600;
      font-size: 1rem;
      color: #1f2937;
      line-height: 1.4;
      margin-bottom: 4px;
    }

    .product-details-row {
      display: flex;
      gap: 20px;
      flex-wrap: wrap;
    }

    .product-detail {
      font-size: 0.875rem;
      color: #6b7280;
    }

    .order-summary {
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-top: 1px solid #f3f4f6;
    }

    .total-section {
      text-align: right;
    }

    .total-label {
      font-size: 0.875rem;
      color: #6b7280;
      margin-bottom: 4px;
    }

    .total-amount {
      font-size: 1.25rem;
      font-weight: 700;
      color: #1f2937;
    }

    .status-section {
      text-align: right;
    }

    .status-label {
      font-size: 0.875rem;
      color: #6b7280;
      margin-bottom: 4px;
    }

    .order-status {
      font-size: 0.9rem;
      font-weight: 600;
      padding: 2px 6px;
      border-radius: 20px;
      display: inline-block;
    }

    .order-status.pending {
      color: #af6900;
      background-color: #ffae0028;
    }

    .order-status.confirmed {
      color: rgb(4, 0, 253);
      background-color: rgba(0, 0, 255, 0.11);
    }

    .order-status.shipped {
      color: #0284c7;
      background-color: #0285c723;
    }

    .order-status.delivered {
      color: green;
      background-color: rgba(0, 128, 0, 0.219);
    }

    .order-status.return_requested {
      color: orangered;
      background-color: rgba(255, 68, 0, 0.137);
    }

    .order-status.returning {
      color: orange;
      background-color: rgba(255, 166, 0, 0.178);
    }

    .order-status.cancelled {
      color: red;
      background-color: rgba(255, 0, 0, 0.171);
    }

    /* Cancelled Item Styling */
    .cancelled-item {
      opacity: 0.6;
      background-color: #f9fafb;
    }

    .cancel-reason {
      font-size: 0.75rem;
      color: red;
      margin-top: 4px;
    }

    .pagination {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: 1rem;
      margin-top: 1.5rem;
    }

    .pagination-btn {
      padding: 0.25rem 0.75rem;
      border: 1px solid #d1d5db;
      border-radius: 4px;
      background-color: #ffffff;
      color: #374151;
      font-size: 0.875rem;
      cursor: pointer;
      transition: background-color 0.2s ease, border-color 0.2s ease;
    }

    .pagination-btn:hover:not(.disabled) {
      background-color: #f9fafb;
      border-color: #2563eb;
    }

    .pagination-btn.disabled {
      color: #9ca3af;
      border-color: #d1d5db;
      cursor: not-allowed;
    }

    .pagination-info {
      font-size: 0.875rem;
      color: #374151;
    }

   

   

    .shop-header {
      background-color: white;
      border-bottom: 1px solid var(--border-color);
      padding: 1.5rem 0;
    }

    .no-orders {
      text-align: center;
      padding: 3rem 1rem;
      color: #6b7280;
      font-size: 1.1rem;
    }

    .order-status.processing {
      color: #0369a1;
      background-color: rgba(3, 105, 161, 0.1);
    }
  </style>
</head>

<body class="page-body">
  <!-- Header Partial -->
  <%- include("../../views/partials/user/header") %>
    <div class="shop-header">
      <div class="max-w-7xl mx-auto px-4">
        <nav aria-label="breadcrumb">
          <ol class="flex space-x-2 text-sm">
            <li><a href="/" class="text-blue-600 hover:underline">Home</a></li>
            <li>
              <a href="/shop" class="text-blue-600 hover:underline"><span class="mx-2 text-black">></span>Shop</a>
            </li>
            <li class="flex items-center">
              <span class="mx-2">></span><span class="text-gray-500">Orders</span>
            </li>
          </ol>
        </nav>
      </div>
    </div>
    <div class="container">
      <div class="sidebar">
        <div class="profile-header">
          <div class="profile-icon">
            <% if (user && user.image) { %>
              <img src="/Uploads/userProfileimages/<%= user.image %>" alt="Profile Image" class="profile-image" />
              <% } else { %>
                <i class="fas fa-user" style="color: #ffffff; font-size: 1.125rem"></i>
                <% } %>
          </div>
          <div>
            <div class="greeting">Hello,</div>
            <div class="username">
              <%= user ? user.name : 'User' %>
            </div>
          </div>
        </div>
        <nav class="menu">
          <ul class="menu-list">
            <li class="menu-item">
              <a href="/profile" class="menu-link">
                <i class="fas fa-user menu-icon"></i>
                Profile Information
              </a>
            </li>
            <li class="menu-item">
              <a href="/orders" class="menu-link active">
                <i class="fas fa-box menu-icon"></i>
                My Orders
              </a>
            </li>
            <li class="menu-item">
              <a href="/address" class="menu-link">
                <i class="fas fa-home menu-icon"></i>
                Manage Addresses
              </a>
            </li>
            <li class="menu-item">
              <a href="/wallet" class="menu-link">
                <i class="fas fa-wallet menu-icon"></i>
                My Wallet
              </a>
            </li>
            <li class="menu-item">
              <a href="/wishlist" class="menu-link">
                <i class="fas fa-heart menu-icon"></i>
                My Wishlist
              </a>
            </li>
            <li class="menu-item">
              <a href="/referals" class="menu-link">
                <i class="fas fa-users menu-icon"></i>
                Refer Friends
              </a>
            </li>
            <li class="menu-item">
              <a href="/changepassword" class="menu-link">
                <i class="fas fa-lock menu-icon"></i>
                Change Password
              </a>
            </li>

            <li class="menu-item">
              <a href="/logout" class="logout-link">
                <i class="fas fa-sign-out-alt menu-icon"></i>
                Log out
              </a>
            </li>
          </ul>
        </nav>
      </div>

      <!-- Main Content -->
      <div class="main-content">
        <h2 class="section-title">
          <i class="fas fa-box-open mr-2 text-orange-600"></i>My Orders
        </h2>

        <div class="filter-group">
          <div>
            <label class="form-label" for="statusFilter">Filter by Status</label>
            <select id="statusFilter" class="form-select" onchange="applyFilters()">
              <option value="All">All Statuses</option>
              <option value="pending">Pending</option>
              <option value="confirmed">Confirmed</option>
              <option value="shipped">Shipped</option>
              <option value="delivered">Delivered</option>
              <option value="return_requested">Return requested</option>
              <option value="returning">Returning</option>
              <option value="returned">Returned</option>
              <option value="cancelled">Cancelled</option>
            </select>
          </div>
          <div>
            <label class="form-label" for="timeFilter">Filter by Time</label>
            <select
              id="timeFilter"
              class="form-select"
              onchange="applyFilters()"
            >
              <option value="All">All Time</option>
              <option value="Last30Days">Last 30 Days</option>
              <option value="Last3Months">Last 3 Months</option>
              <option value="Last6Months">Last 6 Months</option>
            </select>
          </div>
        </div>
        <div id="orderList">
          <% if (orders && orders.length> 0) { %> <% orders.forEach((order)=>
              { %>
              <div class="order-item" data-id="<%= order._id %>" data-status="<%= order.status %>"
                data-date="<%= order.createdOn %>">
                <div class="order-header">
                  <div class="order-date">
                    Order-Date: <%= new Date(order.createdOn).toLocaleDateString('en-GB', { day: 'numeric' ,
                      month: 'short' , year: 'numeric' }) %>
                  </div>
                  <div class="order-id">Order Id- #<%= order.orderId %>
                  </div>
                  <a href="/order/details/<%= order._id %>" class="view-link">View Order Details</a>
                </div>

                <div class="order-content">
                  <% if (order.orderedItems && order.orderedItems.length> 0) { %>
                    <% order.orderedItems.forEach((item)=> { %>
                      <div class="product-item <%= item.status === 'cancelled' ? 'cancelled-item' : '' %>">
                        <img
                          src="/<%= item.productImages && item.productImages[0] ? item.productImages[0] : 'default-image.jpg' %>"
                          alt="Product Image" class="order-image" />
                        <div class="product-info">
                          <div class="product-name">
                            <%= item.productName || 'Product Name' %>
                          </div>
                          <div class="product-details-row">
                            <div class="product-detail">
                              Quantity: <%= item.quantity || 1 %>
                            </div>
                            <div class="product-detail">
                              Payment Method: <%= order.paymentMethod || 'N/A' %>
                            </div>
                            <% if (item.status !=='cancelled' ) { %>
                              <div class="product-detail">
                                Expected Delivery by: <%= order.expectedDelivery ? new
                                  Date(order.expectedDelivery).toLocaleDateString('en-GB', { day: 'numeric' ,
                                  month: 'short' , year: 'numeric' }) : 'TBD' %>
                              </div>
                              <% } %>
                          </div>
                          <% if (order.status==='cancelled' && order.cancelReason) { %>
                            <div class="cancel-reason">
                              Cancelled: <%= order.cancelReason %>
                            </div>

                            <%}else if (item.status==='cancelled' && item.cancelReason) { %>
                              <div class="cancel-reason">
                                Cancelled: <%= item.cancelReason %>
                              </div>
                              <% } %>
                        </div>
                      </div>
                      <% }) %>
                        <% } %>

                          <div class="order-summary">
                            <div class="total-section">
                              <div class="total-label">Total Amount</div>
                              <div class="total-amount">
                                ₹<%= order.finalAmount || order.totalAmount || 0 %>
                              </div>
                            </div>
                            <div class="status-section">
                              <div class="status-label">Order Status</div>
                              <div class="order-status <%= (order.status || '').toLowerCase() %>">
                                <%= order.status || 'Unknown' %>
                              </div>
                            </div>
                          </div>
                </div>
              </div>
              <% }) %>
                <% } else { %>
                  <div class="no-orders">
                    <i class="fas fa-box-open" style="font-size: 3rem; margin-bottom: 1rem; color: #d1d5db"></i>
                    <p>No orders found.</p>
                  </div>
                  <% } %>
        </div>
        <div id="pagination" class="pagination"></div>
      </div>
    </div>

    <!-- Toast Container -->
    <div id="toastContainer"></div>

    <!-- Footer Partial -->
    <%- include("../../views/partials/user/footer") %>

      <script>
        let allOrders = [];
        let filteredOrders = [];
        let currentPage = 1;
        const ordersPerPage = 5;

        function showToast(message, type = "success") {
          const toastContainer = document.getElementById("toastContainer");
          const toast = document.createElement("div");
          toast.className = `toast ${type}`;
          toast.textContent = message;
          toastContainer.appendChild(toast);

          setTimeout(() => {
            toast.classList.add("show");
          }, 100);

          setTimeout(() => {
            toast.classList.remove("show");
            setTimeout(() => {
              toast.remove();
            }, 300);
          }, 300);
        }

        function showLoading() {
          const orderList = document.getElementById("orderList");
          orderList.innerHTML = `
        <div style="text-align: center; padding: 2rem;">
            <i class="fas fa-spinner fa-spin" style="font-size: 2rem; color: #6b7280;"></i>
            <p style="margin-top: 1rem; color: #6b7280;">Loading orders...</p>
        </div>
    `;
        }

        async function applyFilters(page = 1) {
          const statusFilter = document.getElementById("statusFilter").value;
          const timeFilter = document.getElementById("timeFilter").value;

          try {
            showLoading();

            // Build query parameters
            const params = new URLSearchParams();
            if (statusFilter !== "All") params.append("status", statusFilter);
            if (timeFilter !== "All") params.append("timeFilter", timeFilter);
            params.append("page", page);
            params.append("limit", ordersPerPage);


            const response = await fetch(`/orders?${params.toString()}`, {
              method: "GET",
              headers: {
                Accept: "application/json",
                "X-Requested-With": "XMLHttpRequest",
              },
            });

            if (!response.ok) {
              throw new Error("Failed to fetch orders");
            }

            const data = await response.json();

            if (data.success) {
              currentPage = page;
              displayOrders(data.orders);
              updatePaginationControls(data.pagination);
            } else {
              showToast("Error loading orders", "error");
            }
          } catch (error) {
            console.error("Filter error:", error);
            showToast("Error loading orders", "error");
            displayNoOrders();
          }
        }

        function initializeOrders() {
          const orderItems = document.querySelectorAll(".order-item");
          allOrders = Array.from(orderItems).map((item) => {
            const dateStr = item.getAttribute("data-date");
            const status = item.getAttribute("data-status");

            return {
              element: item,
              status: status ? status.trim() : "",
              date: dateStr ? new Date(dateStr) : new Date(),
            };
          });

          console.log(
            "Initialized orders:",
            allOrders.map((o) => ({ status: o.status, date: o.date }))
          );

          // Initial display
          filteredOrders = [...allOrders];
          displayOrders();
          updatePaginationControls();
        }

        function applyFilters() {
          const statusFilter = document.getElementById("statusFilter").value;
          const timeFilter = document.getElementById("timeFilter").value;
          const currentDate = new Date();

          // Start with all orders
          filteredOrders = [...allOrders];

          // Apply status filter
          if (statusFilter !== "All") {
            filteredOrders = filteredOrders.filter((order) => {
              if (!order.status) return false;
              // Handle case variations and underscores
              const orderStatus = order.status
                .toLowerCase()
                .replace(/[_\s]/g, "");
              const filterStatus = statusFilter
                .toLowerCase()
                .replace(/[_\s]/g, "");
              return orderStatus === filterStatus;
            });
          }

          // Apply time filter
          if (timeFilter !== "All") {
            let cutoffDate = new Date(currentDate);

            switch (timeFilter) {
              case "Last30Days":
                cutoffDate.setDate(currentDate.getDate() - 30);
                break;
              case "Last3Months":
                cutoffDate.setMonth(currentDate.getMonth() - 3);
                break;
              case "Last6Months":
                cutoffDate.setMonth(currentDate.getMonth() - 6);
                break;
            }

            filteredOrders = filteredOrders.filter((order) => {
              return order.date && order.date >= cutoffDate;
            });
          }

          currentPage = 1;
          displayOrders();
          updatePaginationControls();
        }

        function displayOrders() {
          const orderList = document.getElementById("orderList");

          // Clear existing orders
          const existingOrders = orderList.querySelectorAll(".order-item");
          existingOrders.forEach((order) => (order.style.display = "none"));

          // Remove any existing "no orders" message
          const noOrdersMsg = orderList.querySelector(".no-orders");
          if (noOrdersMsg) {
            noOrdersMsg.remove();
          }

          if (filteredOrders.length === 0) {
            const noOrdersDiv = document.createElement("div");
            noOrdersDiv.className = "no-orders";
            noOrdersDiv.innerHTML = `
                    <i class="fas fa-search" style="font-size: 3rem; margin-bottom: 1rem; color: #d1d5db;"></i>
                    <p>No orders match the selected filters.</p>
                `;
            orderList.appendChild(noOrdersDiv);
            return;
          }

          // Calculate pagination
          const startIndex = (currentPage - 1) * ordersPerPage;
          const endIndex = startIndex + ordersPerPage;
          const ordersToDisplay = filteredOrders.slice(startIndex, endIndex);

          // Show only the orders for current page
          ordersToDisplay.forEach((order) => {
            order.element.style.display = "block";
          });
        }

        // function updatePaginationControls() {
        //   const pagination = document.getElementById("pagination");
        //   pagination.innerHTML = "";

        //   if (filteredOrders.length === 0) return;

        //   const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);
        //   const totalOrders = filteredOrders.length;
        //   const startIndex = (currentPage - 1) * ordersPerPage + 1;
        //   const endIndex = Math.min(currentPage * ordersPerPage, totalOrders);

        //   // Previous button
        //   const prevBtn = document.createElement("button");
        //   prevBtn.className = `pagination-btn ${
        //     currentPage === 1 ? "disabled" : ""
        //   }`;
        //   prevBtn.textContent = "Previous";
        //   prevBtn.onclick = () => {
        //     if (currentPage > 1) {
        //       currentPage--;
        //       displayOrders();
        //       updatePaginationControls();
        //     }
        //   };
        //   pagination.appendChild(prevBtn);

        //   // Next button
        //   const nextBtn = document.createElement("button");
        //   nextBtn.className = `pagination-btn ${
        //     currentPage >= totalPages ? "disabled" : ""
        //   }`;
        //   nextBtn.textContent = "Next";
        //   nextBtn.onclick = () => {
        //     if (currentPage < totalPages) {
        //       currentPage++;
        //       displayOrders();
        //       updatePaginationControls();
        //     }
        //   };
        //   pagination.appendChild(nextBtn);

        //   // Page info
        //   const pageInfo = document.createElement("span");
        //   pageInfo.className = "pagination-info";
        //   pageInfo.textContent = `Showing ${startIndex}-${endIndex} of ${totalOrders} orders`;
        //   pagination.appendChild(pageInfo);
        // }
        document.addEventListener("DOMContentLoaded", initializeOrders);
      </script>
</body>

</html>