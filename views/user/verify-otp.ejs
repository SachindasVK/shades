<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SHADES - OTP Verification</title>
    <link rel="icon" href="/favicon-16x16.png" type="image/png">
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
      rel="stylesheet"
    />

    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/auth.css" />
  </head>
  <body class="text-white">
    <!-- Header -->
    <%-include('../../views/partials/user/authHeader')%>

    <!-- Main Content -->
    <main class="main-content">
      <div class="background-text text-white">SHADES</div>

      <div class="glass-effect w-full max-w-md p-8 rounded-lg shadow-xl z-10 relative">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-semibold text-white">Verification</h2>
          <div class="gradient-line my-2 mx-auto w-16"></div>
          <p class="text-sm text-white mt-4">
            We've sent a verification code to<br />
            <span class="font-medium"><%=email%></span>
          </p>
        </div>

        <div class="flex justify-center mb-8">
          <div class="timer-circle" style="--progress: 100%; --timer-color: #10b981">
            <div class="timer-inner" style="--timer-text-color: #10b981">
              <span id="timer">01:00</span>
            </div>
          </div>
        </div>

        <form
          class="space-y-6"
          id="otpform"
          method="post"
          onsubmit="event.preventDefault(); validateOtpForm();"
        >
          <div class="flex justify-between space-x-2">
            <input type="text" maxlength="1" class="otp-input" required autofocus />
            <input type="text" maxlength="1" class="otp-input" required />
            <input type="text" maxlength="1" class="otp-input" required />
            <input type="text" maxlength="1" class="otp-input" required />
            <input type="text" maxlength="1" class="otp-input" required />
            <input type="text" maxlength="1" class="otp-input" required />
          </div>

          <button
            type="submit"
            class="w-full bg-blue-500 text-white py-3 px-4 rounded-md hover:bg-blue-600 transition duration-300 text-sm font-medium mt-4"
            id="verify-btn"
          >
            Verify
          </button>
        </form>

        <div class="text-center mt-6">
          <p class="text-sm text-gray-400">Didn't receive the code?</p>
          <button
            id="resend-btn"
            class="text-blue-500 font-medium hover:underline text-sm mt-1"
            onclick="resendOTP()"
          >
            Resend Code
          </button>
        </div>
      </div>
    </main>

    <!-- Footer -->
    <%-include("../../views/partials/user/footer")%>

    <!-- jQuery and SweetAlert2 Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      let timer;
      let timeLeft = 60; // 1 minute in seconds
      const totalTime = 60;
      const OTP_LENGTH = 6;

      // Initialize resend button state on page load
      document.addEventListener('DOMContentLoaded', function () {
        // Disable resend button initially
        const resendBtn = document.getElementById('resend-btn');
        resendBtn.disabled = true;
        resendBtn.classList.remove('text-blue-500');
        resendBtn.classList.add('text-gray-500');

        // Start timer immediately
        updateTimer();
        timer = setInterval(updateTimer, 1000);

        // Show initial OTP sent notification
        Swal.fire({
          icon: 'success',
          title: 'OTP Sent',
          text: 'A verification code has been sent to your email.',
          confirmButtonText: 'OK',
          customClass: {
            popup: 'bg-white rounded-lg shadow-lg p-6',
            title: 'text-2xl font-bold text-green-600',
            content: 'text-gray-700',
            confirmButton: 'bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600',
          },
          timer: 5000,
          timerProgressBar: true,
        });
      });

      function validateOtpForm() {
        // Check if OTP has expired
        if (timeLeft <= 0) {
          Swal.fire({
            icon: 'error',
            title: 'OTP Expired',
            text: 'Your OTP has expired. Please click "Resend OTP" to get a new code.',
            confirmButtonText: 'OK',
            customClass: {
              popup: 'bg-white rounded-lg shadow-lg p-6',
              title: 'text-2xl font-bold text-red-600',
              content: 'text-gray-700',
              confirmButton: 'bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600',
            },
          });
          return false;
        }

        // Collect OTP from all input fields
        const otpInputs = document.querySelectorAll('.otp-input');
        const otp = Array.from(otpInputs)
          .map((input) => input.value)
          .join('');

        // Validate OTP (ensure all fields are filled)
        if (otp.length !== OTP_LENGTH || !/^\d+$/.test(otp)) {
          Swal.fire({
            icon: 'warning',
            title: 'Incomplete OTP',
            text: 'Please enter all 6 digits.',
            confirmButtonText: 'OK',
            customClass: {
              popup: 'bg-white rounded-lg shadow-lg p-6',
              title: 'text-2xl font-bold text-yellow-600',
              content: 'text-gray-700',
              confirmButton: 'bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600',
            },
          });
          return false;
        }

        // prevent multiple submissions
        const verifyBtn = document.getElementById('verify-btn');
        verifyBtn.disabled = true;
        verifyBtn.textContent = 'Verifying...';

        $.ajax({
          type: 'POST',
          url: '/verify-otp',
          data: {
            otp: otp,
            timestamp: new Date().toISOString(), // Send current time to validate OTP is still within window
          },
          success: function (response) {
            if (response.success) {
              Swal.fire({
                icon: 'success',
                title: 'Account Created!',
                text: 'Your OTP has been verified successfully.',
                confirmButtonText: 'Go to Home',
                customClass: {
                  popup: 'bg-white rounded-lg shadow-lg p-6',
                  title: 'text-2xl font-bold text-green-600',
                  content: 'text-gray-700',
                  confirmButton: 'bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600',
                },
                timer: 3000,
                timerProgressBar: true,
              }).then((result) => {
                if (result.isConfirmed || result.dismiss === Swal.DismissReason.timer) {
                  // Store token if provided
                  if (response.token) {
                    localStorage.setItem('authToken', response.token);
                  }
                  // Redirect to Home
                  window.location.href = '/';
                }
              });
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Invalid OTP',
                text: response.message || 'Please try again.',
                confirmButtonText: 'OK',
                customClass: {
                  popup: 'bg-white rounded-lg shadow-lg p-6',
                  title: 'text-2xl font-bold text-red-600',
                  content: 'text-gray-700',
                  confirmButton: 'bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600',
                },
              });
            }
          },
          error: function (xhr, status, error) {
            Swal.fire({
              icon: 'error',
              title: 'Invalid OTP',
              text: 'Something went wrong. Please try again later.',
              confirmButtonText: 'OK',
              customClass: {
                popup: 'bg-white rounded-lg shadow-lg p-6',
                title: 'text-2xl font-bold text-red-600',
                content: 'text-gray-700',
                confirmButton: 'bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600',
              },
            });
          },
          complete: function () {
            // Re-enable button
            verifyBtn.disabled = false;
            verifyBtn.textContent = 'Verify';
          },
        });
      }

      // Timer functionality
      function updateTimer() {
        const timerDisplay = document.getElementById('timer');
        const resendBtn = document.getElementById('resend-btn');
        const timerCircle = document.querySelector('.timer-circle');
        const timerInner = document.querySelector('.timer-inner');

        if (timeLeft <= 0) {
          clearInterval(timer);
          timerDisplay.textContent = 'EXPIRED!';
          resendBtn.disabled = false;
          resendBtn.classList.add('text-blue-500');
          resendBtn.classList.remove('text-gray-500');

          // Show expiration notification
          const otpInputs = document.querySelectorAll('.otp-input');
          const hasEnteredOtp = Array.from(otpInputs).some((input) => input.value.length > 0);

          if (hasEnteredOtp) {
            Swal.fire({
              icon: 'warning',
              title: 'OTP Expired',
              text: 'Your OTP has expired. Please click "Resend OTP" to get a new code.',
              confirmButtonText: 'OK',
              customClass: {
                popup: 'bg-white rounded-lg shadow-lg p-6',
                title: 'text-2xl font-bold text-yellow-600',
                content: 'text-gray-700',
                confirmButton: 'bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600',
              },
            });
          }
          return; // Exit the function to prevent negative values
        }

        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;

        timerDisplay.textContent = `${minutes
          .toString()
          .padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

        const progress = (timeLeft / totalTime) * 100;
        timerCircle.style.setProperty('--progress', `${progress}%`);

        let timerColor, textColor;
        if (timeLeft > 45) {
          timerColor = '#10B981';
          textColor = '#10B981';
        } else if (timeLeft > 30) {
          timerColor = '#34D399';
          textColor = '#34D399';
        } else if (timeLeft > 15) {
          timerColor = '#FBBF24';
          textColor = '#FBBF24';
        } else if (timeLeft > 5) {
          timerColor = '#F97316';
          textColor = '#F97316';
        } else {
          timerColor = '#EF4444';
          textColor = '#EF4444';
        }

        timerCircle.style.setProperty('--timer-color', timerColor);
        timerInner.style.setProperty('--timer-text-color', textColor);

        timeLeft--;
      }

      // Auto-tab functionality for OTP inputs
      const otpInputs = document.querySelectorAll('.otp-input');
      otpInputs.forEach((input, index) => {
        input.addEventListener('input', (e) => {
          // Ensure input is numeric only
          e.target.value = e.target.value.replace(/[^0-9]/g, '');

          const value = e.target.value;
          if (value.length === 1 && index < otpInputs.length - 1) {
            otpInputs[index + 1].focus();
          }
        });

        input.addEventListener('keydown', (e) => {
          if (e.key === 'Backspace' && !e.target.value && index > 0) {
            otpInputs[index - 1].focus();
          }
        });
      });

      // Resend OTP functionality
      function resendOTP() {
        // Clear existing timer
        clearInterval(timer);

        // Reset timer
        timeLeft = 60;

        // Disable resend button
        const resendBtn = document.getElementById('resend-btn');
        resendBtn.disabled = true;
        resendBtn.classList.remove('text-blue-500');
        resendBtn.classList.add('text-gray-500');

        // Restart timer
        updateTimer();
        timer = setInterval(updateTimer, 1000);

        // Clear OTP input fields
        const otpInputs = document.querySelectorAll('.otp-input');
        otpInputs.forEach((input) => {
          input.value = '';
        });

        // Focus on first input
        if (otpInputs.length > 0) {
          otpInputs[0].focus();
        }

        // Send AJAX request with timestamp information
        $.ajax({
          type: 'POST',
          url: '/resend-otp',
          dataType: 'json',
          data: {
            email: '<%=email%>',
            requestTime: new Date().toISOString(), // Include timestamp for server verification
          },
          success: function (response) {
            if (response.success) {
              Swal.fire({
                icon: 'success',
                title: 'OTP Resent',
                text: 'A new OTP has been sent to your email.',
                confirmButtonText: 'OK',
                customClass: {
                  popup: 'bg-white rounded-lg shadow-lg p-6',
                  title: 'text-2xl font-bold text-green-600',
                  content: 'text-gray-700',
                  confirmButton: 'bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600',
                },
              });
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: response.message || 'Failed to resend OTP.',
                confirmButtonText: 'OK',
                customClass: {
                  popup: 'bg-white rounded-lg shadow-lg p-6',
                  title: 'text-2xl font-bold text-red-600',
                  content: 'text-gray-700',
                  confirmButton: 'bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600',
                },
              });
            }
          },
          error: function () {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Failed to resend OTP. Please try again.',
              confirmButtonText: 'OK',
              customClass: {
                popup: 'bg-white rounded-lg shadow-lg p-6',
                title: 'text-2xl font-bold text-red-600',
                content: 'text-gray-700',
                confirmButton: 'bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600',
              },
            });
          },
        });
      }
    </script>
  </body>
</html>
